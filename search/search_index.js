var __index = {"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"index.html","title":"Jew\u7684\u6587\u6863\u6742\u9879","text":""},{"location":"index.html#_1","title":"\u76ee\u524d\u8fdb\u5ea6","text":"<ul> <li>\u6dfb\u52a0\u7f16\u8bd1\u8bfe\u8bbe\u76f8\u5173\u6587\u6863</li> </ul>"},{"location":"index.html#todo-list","title":"TODO List","text":"<ul> <li>\u5403bsb\u7684s</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html","title":"\u7f16\u8bd1\u5b9e\u9a8c\u4f18\u5316\u6587\u6863","text":"<p>\u4ee3\u7801\u4f18\u5316\u53ef\u5206\u4e3a\u673a\u5668\u65e0\u5173\u7684\u4e2d\u7aef\u4f18\u5316\u4e0e\u673a\u5668\u76f8\u5173\u7684\u540e\u7aef\u4f18\u5316\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u6211\u7684\u7f16\u8bd1\u5668<code>PlatoCompiler</code>\u5b9e\u73b0\u7684\u4f18\u5316\u65b9\u6cd5\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_2","title":"\u4e2d\u7aef\u4f18\u5316","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#ssa","title":"SSA\uff1a\u9759\u6001\u5355\u8d4b\u503c","text":"<p>\u5728\u5904\u7406\u6808\u6216\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u7f16\u8bd1\u5668\u524d\u7aef\u901a\u8fc7 alloca \u6307\u4ee4\u5c06\u6bcf\u4e2a\u5c40\u90e8\u53d8\u91cf\u6620\u5c04\u5230\u6808\u4e0a\u4e00\u4e2a\u5bf9\u5e94\u7684\u7a7a\u95f4\uff0c\u5c06\u8bfb\u5199\u6620\u5c04\u4e3a\u5bf9\u5e94\u7a7a\u95f4\u7684 load/store \u6307\u4ee4\u3002\u4f8b\u5982\u4ee5\u4e0b\u7684\u6307\u4ee4\uff1a</p> <p><pre><code>int main() {\n    int x, cond;\n    cond = getint();\n    if (cond &gt; 0){\n        x = 1;\n    }\n    else{\n        x = -1;\n    }\n    printf(\"%d\", x);\n    return 0;\n}\n</code></pre> \u7ffb\u8bd1\u51fa\u6765\u7684LLVM IR\u662f\uff1a</p> <pre><code>define dso_local i32 @main() {\nb0:\n    %v1 = alloca i32\n    %v2 = alloca i32\n    %v3 = call i32 @getint()\n    store i32 %v3, i32* %v2\n    %v4 = load i32, i32* %v2\n    %v5 = icmp sgt i32 %v4, 0\n    br i1 %v5, label %b6, label %b7\nb6:\n    store i32 1, i32* %v1\n    br label %b9\nb7:\n    %v8 = sub i32 0, 1\n    store i32 %v8, i32* %v1\n    br label %b9\nb9:\n    %v10 = load i32, i32* %v1\n    call void @putint(i32 %v10)\n    ret i32 0\n}\n</code></pre> <p>\u8fd9\u79cd\u65b9\u6848\u7b80\u5316\u4e86\u524d\u7aef\u8bbe\u8ba1\uff0c\u4f46\u662f\u5728\u4e2d\u95f4\u4ee3\u7801\u4e0a\u9700\u8981\u8fdb\u884c\u76f8\u5173\u4f18\u5316\u65f6\uff0c\u5927\u91cf\u7684alloca/load/store\u6307\u4ee4\u5bfc\u81f4\u7f16\u8bd1\u5668\u9700\u8981\u8ddf\u8e2a\u8bb0\u5f55\u53d8\u91cf\u5728\u6808\u7a7a\u95f4\u4e0a\u7684\u4f4d\u7f6e\uff0c\u8fd9\u79cd\u975eSSA\u5f62\u5f0f\u4f7f\u5f97\u5206\u6790def-use\u5173\u7cfb\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u6b64\u9700\u8981\u6d88\u9664\u8fd9\u4e9b\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u64cd\u4f5c\u3002</p> <p>\u4e0a\u8ff0\u4ee3\u7801\u7684SSA\u5f62\u5f0f\u4e3a\uff1a</p> <pre><code>define dso_local i32 @main() {\nb0:\n    %v1 = call i32 @getint()\n    %v2 = icmp sgt i32 %v1, 0\n    br i1 %v2, label %b3, label %b6\nb3:\n    br label %b4\nb4:\n    %v5 = phi i32 [ 1, %b3 ], [ -1, %b6 ]\n    call void @putint(i32 %v5)\n    ret i32 0\nb6:\n    br label %b4\n}\n</code></pre> <p>\u4e3a\u4e86\u5c06\u975eSSA\u7684IR\u8f6c\u6362\u4e3aSSA\u5f62\u5f0f\uff0c\u53ef\u4ee5\u91c7\u7528Mem2Reg\u7684\u65b9\u6cd5\u3002Mem2Reg\u7684\u6838\u5fc3\u5728\u4e8e</p> <ul> <li>\u5728\u652f\u914d\u8fb9\u754c\uff08\u6070\u597d\u652f\u914d\u4e0d\u5230\u7684\u57fa\u672c\u5757\uff09\u63d2\u5165phi\u6307\u4ee4</li> <li>\u63d2\u5165phi\u540e\u8fdb\u884c\u91cd\u547d\u540d</li> </ul> <p>\u4e3a\u4e86\u5f97\u5230\u652f\u914d\u8fb9\u754c\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u6784\u5efa\u51fd\u6570\u7684CFG\uff1b\u6784\u5efaCFG\u4e4b\u524d\uff0c\u9996\u5148\u8981\u505a\u7684\u662f\u5220\u9664\u4e0d\u53ef\u8fbe\u57fa\u672c\u5757\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_3","title":"\u5220\u9664\u4e0d\u53ef\u8fbe\u57fa\u672c\u5757","text":"<p>\u5728IR\u4e2d\u53ef\u80fd\u51fa\u73b0\u4ee5\u4e0b\u7684\u8bed\u53e5\uff1a</p> <pre><code>b10:\n    br label %b8\n    br label %b14\n</code></pre> <p>\u6b64\u65f6<code>br label %14</code>\u662f\u4e0d\u53ef\u8fbe\u7684\u8bed\u53e5\uff0c\u9700\u8981\u5c06\u7ec8\u7ed3\u8bed\u53e5<code>br label %b8</code>\u4e4b\u540e\u7684\u4ee3\u7801\u5220\u9664</p> <p>\u5b8c\u6210\u8be5\u6b65\u9aa4\u4e4b\u540e\uff0c\u5bf9\u6bcf\u4e2a\u51fd\u6570\uff0c\u4ece\u7b2c\u4e00\u4e2a\u57fa\u672c\u5757\u5f00\u59cb\uff0c\u6839\u636e\u6bcf\u4e2a\u57fa\u672c\u5757\u7684\u6700\u540e\u4e00\u6761\u8bed\u53e5\uff08\u4e00\u5b9a\u662f\u7ec8\u7ed3\u8bed\u53e5\uff09\u8fdb\u884cdfs\uff0c\u641c\u7d22\u53ef\u80fd\u5230\u8fbe\u7684\u57fa\u672c\u5757\uff0c\u5e76\u5220\u9664\u5176\u4ed6\u7684\u57fa\u672c\u5757\u3002</p> <pre><code>private static void simplifyFunction(Function func) {\n    func.getBasicBlocks().forEach(SurplusBlock::deleteDeadInstr);\n    visited = new HashSet&lt;&gt;();\n    dfs(func.getEntryBlock());\n    func.getBasicBlocks().removeIf(block -&gt; {\n        if (!visited.contains(block)) {\n            block.getInstructions().forEach(Instruction::removeOperands);\n            block.removeOperands();\n            block.setDeleted(true);\n            return true;\n        }\n        return false;\n    });\n}\n\nprivate static void dfs(BasicBlock block) {\n    if (!visited.add(block)) {\n        return;\n    }\n    Instruction lastInstruction = block.getLastInstruction();\n    if (lastInstruction instanceof BrInst brInst) {\n        if (brInst.isConditional()) {\n            dfs(brInst.getTrueBlock());\n            dfs(brInst.getFalseBlock());\n        } else {\n            dfs(brInst.getTrueBlock());\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#mem2reg","title":"Mem2Reg","text":"<p>\u6559\u7a0b\u4e2d\u4ecb\u7ecd\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cfv\uff0c\u901a\u8fc7\u6c42\u51fa$DF^+(Def_v)$\u5c31\u77e5\u9053\u4e86\u63d2\u5165phi\u51fd\u6570\u7684\u4f4d\u7f6e\u3002\u4e3a\u4e86\u6c42\u51faDF\uff08\u652f\u914d\u8fb9\u754c\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u51fd\u6570<code>Function</code>\uff0c\u6211\u4eec\u91c7\u7528\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\u8ba1\u7b97\uff1a</p> <ol> <li>\u8ba1\u7b97CFG\u56fe</li> </ol> <p>\u6bcf\u4e2a\u57fa\u672c\u5757\u90fd\u4ee5\u4e00\u4e2a\u7ec8\u7ed3\u8bed\u53e5\u7ed3\u5c3e\uff0c\u4e0e\u5220\u9664\u4e0d\u53ef\u8fbe\u57fa\u672c\u5757\u7c7b\u4f3c\uff0c\u901a\u8fc7\u6bcf\u4e00\u4e2a\u57fa\u672c\u5757\u7684\u7ec8\u7ed3\u8bed\u53e5\u8ba1\u7b97\u8be5\u57fa\u672c\u5757\u7684\u524d\u9a71\u57fa\u672c\u5757\u548c\u540e\u7ee7\u57fa\u672c\u5757\u3002</p> <pre><code>private static void calcControlFlowGraph() {\n    for (BasicBlock block : currentFunction.getBasicBlocks()) {\n        Instruction lastInstruction = block.getLastInstruction();\n        if (lastInstruction instanceof BrInst brInst) {\n            if (brInst.isConditional()) {\n                addEdge(block, brInst.getTrueBlock());\n                addEdge(block, brInst.getFalseBlock());\n            } else {\n                addEdge(block, brInst.getTrueBlock());\n            }\n        }\n    }\n    for (BasicBlock block : currentFunction.getBasicBlocks()) {\n        block.setNextBlocks(childBlocks.get(block));\n        block.setPrevBlocks(parentBlocks.get(block));\n    }\n}\n\nprivate static void addEdge(BasicBlock from, BasicBlock to) {\n    childBlocks.get(from).add(to);\n    parentBlocks.get(to).add(from);\n}\n</code></pre> <ol> <li> <p>\u8ba1\u7b97\u652f\u914d\u6811</p> </li> <li> <p>\u5229\u7528\u5b9a\u4e49\u8ba1\u7b97\u652f\u914d\u5173\u7cfb\uff1a\u5728dfs\u4e2d\uff0c\u5982\u679c\u5728\u904d\u5386\u65f6\u9047\u5230<code>dominator</code>\u81ea\u5df1\uff0c\u5c31\u4e0d\u518d\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\u3002\u8fd9\u76f8\u5f53\u4e8e\u5728\u63a7\u5236\u6d41\u56fe\u4e2d\u201c\u5c4f\u853d\u201d\u4e86<code>dominator</code>\uff0c\u6d4b\u8bd5\u5728\u6ca1\u6709\u7a7f\u8fc7\u8be5\u5757\u7684\u524d\u63d0\u4e0b\uff0c\u80fd\u5230\u8fbe\u54ea\u4e9b\u5757\u3002\u5982\u679c\u4e0d\u80fd\u8bbf\u95ee\u5230\u57fa\u672c\u5757<code>block</code>\uff0c\u90a3\u4e48<code>dominator</code>\u5c31\u662f<code>block</code>\u7684\u652f\u914d\u5757\u3002</p> </li> <li>\u8ba1\u7b97\u76f4\u63a5\u652f\u914d\uff1a\u5982\u679c\u5728<code>dominated</code>\u88ab\u652f\u914d\u7684\u6240\u6709\u5757\u4e2d\uff0c\u6709\u53e6\u5916\u4e00\u4e2a\u5757<code>otherDominator</code>\u540c\u65f6\u88ab<code>dominator</code>\u652f\u914d\uff0c\u5219<code>dominator</code>\u53ef\u80fd\u5e76\u4e0d\u662f\u8ddd\u79bb<code>dominated</code>\u6700\u8fd1\u7684\u652f\u914d\u8005\uff0c\u56e0\u4e3a<code>otherDominator</code>\u5939\u5728\u4e2d\u95f4\u3002A\u652f\u914dC\u4e14A\u652f\u914dB\uff0cC\u652f\u914dB\u65f6\uff0c\u5219A\u4e0d\u662fB\u7684\u76f4\u63a5\u652f\u914d\uff0c\u800cC\u624d\u662f\u3002</li> </ol> <pre><code>private static void calcDominatorTree() {\n    BasicBlock entry = currentFunction.getBasicBlocks().get(0);\n    for (BasicBlock dominator : currentFunction.getBasicBlocks()) {\n        Set&lt;BasicBlock&gt; reachableBlocks = new HashSet&lt;&gt;();\n        dfs(entry, dominator, reachableBlocks);\n        for (BasicBlock block : currentFunction.getBasicBlocks()) {\n            if (!reachableBlocks.contains(block)) {\n                dominates.get(dominator).add(block);\n                dominatedBy.get(block).add(dominator);\n            }\n        }\n        dominator.setDominateBlocks(dominates.get(dominator));\n    }\n    for (BasicBlock dominated : currentFunction.getBasicBlocks()) {\n        for (BasicBlock dominator : dominatedBy.get(dominated)) {\n            if (isImmediateDominator(dominator, dominated)) {\n                dominated.setImmediateDominator(dominator);\n                immediatelyDominates.get(dominator).add(dominated);\n                break;\n            }\n        }\n    }\n    for (BasicBlock block : currentFunction.getBasicBlocks()) {\n        block.setImmediateDominateBlocks(immediatelyDominates.get(block));\n    }\n}\n\nprivate static void dfs(BasicBlock current, BasicBlock dominator, Set&lt;BasicBlock&gt; reachableBlocks) {\n    reachableBlocks.add(current);\n    if (current.equals(dominator)) {\n        return;\n    }\n    for (BasicBlock child : current.getNextBlocks()) {\n        if (!reachableBlocks.contains(child)) {\n            dfs(child, dominator, reachableBlocks);\n        }\n    }\n}\n\nprivate static boolean isImmediateDominator(BasicBlock dominator, BasicBlock dominated) {\n    for (BasicBlock otherDominator : dominatedBy.get(dominated)) {\n        if (otherDominator != dominator\n                &amp;&amp; dominates.get(dominator).contains(otherDominator)) {\n            return false;\n        }\n    }\n    return true;\n}\n</code></pre> <p>\u4ee5\u4e0a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u53ef\u8003\u8651Lengauer-Tarjan\u7b97\u6cd5\u6765\u4f18\u5316\u6548\u7387</p> <ol> <li>\u8ba1\u7b97\u652f\u914d\u8fb9\u754c</li> </ol> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab<code>dominator</code>\u652f\u914d\u7684\u5757<code>dominated</code>\uff0c\u67e5\u770b\u5b83\u7684\u76f4\u63a5\u540e\u7ee7\u5757<code>child</code>\u3002\u5982\u679c\u8fd9\u4e2a<code>child</code>\u4e0d\u5728<code>dominator</code>\u652f\u914d\u7684\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u8be5<code>child</code>\u4f4d\u4e8e<code>dominator</code>\u6240\u652f\u914d\u533a\u57df\u4e4b\u5916\u3002\u7531\u4e8e<code>child</code>\u76f4\u63a5\u8ddf<code>dominated</code>\u76f8\u8fde\uff0c\u800c<code>dominated</code>\u53d7<code>dominator</code>\u652f\u914d\uff0c\u4f46\u662f<code>child</code>\u4e0d\u53d7<code>dominator</code>\u652f\u914d\uff0c\u90a3\u4e48<code>child</code>\u5c31\u662f\u652f\u914d\u8fb9\u754c\u4e2d\u7684\u4e00\u5458\uff08\u5f62\u6210\u4e86\u652f\u914d\u533a\u57df\u4e0e\u975e\u652f\u914d\u533a\u57df\u4e4b\u95f4\u7684\u8fb9\u754c\uff09\u3002</p> <p>\u5982\u679c<code>dominator</code>\u7684\u76f4\u63a5\u540e\u7ee7\u4e5f\u4e0d\u53d7<code>dominator</code>\u652f\u914d\uff0c\u90a3\u4e48\u8be5\u540e\u7ee7\u5757\u4e5f\u53ef\u89c6\u4e3a\u652f\u914d\u8fb9\u754c\u7684\u4e00\u90e8\u5206\u3002</p> <pre><code>private static void calcDominanceFrontier() {\n    for (BasicBlock dominator : currentFunction.getBasicBlocks()) {\n        ArrayList&lt;BasicBlock&gt; frontier = new ArrayList&lt;&gt;();\n        for (BasicBlock dominated : dominator.getDominateBlocks()) {\n            for (BasicBlock child : dominated.getNextBlocks()) {\n                if (!dominator.getDominateBlocks().contains(child)\n                        &amp;&amp; !frontier.contains(child)) {\n                    frontier.add(child);\n                }\n            }\n        }\n        for (BasicBlock child : dominator.getNextBlocks()) {\n            if (!dominator.getDominateBlocks().contains(child)\n                    &amp;&amp; !frontier.contains(child)) {\n                frontier.add(child);\n            }\n        }\n        dominator.setDominanceFrontier(frontier);\n    }\n}\n</code></pre> <ol> <li>\u8ba1\u7b97def\u96c6\u5408\u548cuse\u96c6\u5408</li> </ol> <p>\u5bf9\u4e8e<code>Function</code>\u4e2d\u7684\u6bcf\u4e00\u4e2aalloca\u6307\u4ee4\uff08\u4e0d\u8003\u8651\u6570\u7ec4\uff09\uff0c\u901a\u8fc7<code>User-Use-Value</code>\u5173\u7cfb\uff0c\u5bf9\u5176\u6240\u6709\u7684\u4f7f\u7528\u8005\u8fdb\u884c\u5206\u7c7b\u3002<code>useInstructions</code>\u5b58\u653e\u6240\u6709\u5bf9\u8be5\u53d8\u91cf\u7684\u8bfb\u53d6\uff08<code>load</code>\uff09\u6307\u4ee4\u3002<code>defInstructions</code>\u5b58\u653e\u6240\u6709\u5bf9\u8be5\u53d8\u91cf\u7684\u5b9a\u4e49\uff08<code>store</code>\uff09\u6307\u4ee4\u3002<code>defBlocks</code>\u8bb0\u5f55\u6240\u6709\u5b58\u5728\u8be5\u53d8\u91cf\u5b9a\u4e49\uff08<code>store</code>\uff09\u7684\u57fa\u672c\u5757\u3002</p> <ol> <li>\u63d2\u5165phi</li> </ol> <p>\u6309\u7167\u4f2a\u4ee3\u7801\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002</p> <p></p> <p>\u4e00\u79cd\u53ef\u80fd\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>private static void insertPhi() {\n    HashSet&lt;BasicBlock&gt; F = new HashSet&lt;&gt;();\n    ArrayList&lt;BasicBlock&gt; W = new ArrayList&lt;&gt;(defBlocks);\n    while (!W.isEmpty()) {\n        BasicBlock X = W.remove(0);\n        for (BasicBlock Y : X.getDominanceFrontier()) {\n            if (!F.contains(Y)) {\n                PhiInst phiInst = new PhiInst(currentAlloc.getTargetType(),\n                        Y, new ArrayList&lt;&gt;(Y.getPrevBlocks()));\n                Y.getInstructions().add(0, phiInst);\n                useInstructions.add(phiInst);\n                defInstructions.add(phiInst);\n                F.add(Y);\n                if (!defBlocks.contains(Y)) {\n                    W.add(Y);\n                }\n            }\n        }\n    }\n}\n</code></pre> <ol> <li>\u53d8\u91cf\u91cd\u547d\u540d</li> </ol> <p>\u53c2\u8003\u6559\u7a0b\u63d0\u4f9b\u7684\u4f2a\u4ee3\u7801\uff0c\u901a\u8fc7\u904d\u5386\u652f\u914d\u6811\u6765\u8fdb\u884c\uff0c\u7ed9\u6bcf\u4e2a\u5355\u72ec\u7684\u5b58\u6d3b\u533a\u95f4\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u540d\u3002</p> <ul> <li>\u5f53\u9047\u5230store\u65f6\uff0c\u5c06store\u7684\u503c\u538b\u5165\u6808\uff08defStack\uff09\uff0c\u8868\u793a\u53d8\u91cf\u5728\u6b64\u5904\u6709\u4e86\u4e00\u4e2a\u65b0\u7248\u672c</li> <li>\u5f53\u9047\u5230load\u65f6\uff0c\u7528\u6808\u9876\u7684\u503c\u66ff\u6362load\u6307\u4ee4\uff08\u5373\u7528\u5f53\u524d\u6700\u65b0\u7248\u672c\u7684\u53d8\u91cf\u503c\uff09\uff0c\u4ece\u800c\u6d88\u9664\u5bf9\u5185\u5b58\u7684\u8bfb\u53d6</li> <li>\u5f53\u9047\u5230phi\u65f6\uff0c\u4e5f\u5c06phi\u8282\u70b9\u4f5c\u4e3a\u65b0\u5b9a\u4e49\u538b\u5165\u6808\u4e2d\uff0c\u4ee5\u4fbf\u540e\u7eed\u4f7f\u7528</li> <li>\u5bf9\u6240\u6709\u540e\u7ee7\u57fa\u672c\u5757\u7684phi\u6307\u4ee4\u8bbe\u7f6e\u6765\u81ea\u5f53\u524d\u5757\u7684\u503c\uff0c\u5982\u679cdefStack\u4e3a\u7a7a\uff0c\u8bbe\u7f6e\u4e3aUndefined\u3002\u8fd9\u79cd\u60c5\u51b5\u4e3aUB\uff0c\u5728\u6211\u7684\u7f16\u8bd1\u5668\u4e2d\u662f\u8bbe\u4e3a0\u3002</li> <li>\u5f53\u79bb\u5f00\u8be5\u57fa\u672c\u5757\u65f6\uff0c\u5c06\u5728\u8be5\u5757\u4e2d\u6240\u63a8\u5165\u7684\u5b9a\u4e49\u503c\u4ece\u6808\u4e2d\u5f39\u51fa\uff0c\u4ee5\u4fdd\u6301\u6808\u7684\u6b63\u786e\u6027</li> <li>\u5220\u9664\u5df2\u88ab\u5904\u7406\u7684alloca/load/store\u6307\u4ee4</li> </ul> <pre><code>private static void renameVariables(BasicBlock block) {\n    Iterator&lt;Instruction&gt; it = block.getInstructions().iterator();\n    int pushCount = 0;\n    while (it.hasNext()) {\n        Instruction instruction = it.next();\n        if (instruction.equals(currentAlloc)) {\n            it.remove();\n        } else if (instruction instanceof LoadInst\n                &amp;&amp; useInstructions.contains(instruction)) {\n            Value newValue = defStack.empty() ? new Undefined() : defStack.peek();\n            instruction.replaceByNewValue(newValue);\n            it.remove();\n        } else if (instruction instanceof StoreInst storeInst\n                &amp;&amp; defInstructions.contains(instruction)) {\n            defStack.push(storeInst.getStoredValue());\n            instruction.removeOperands();\n            pushCount++;\n            it.remove();\n        } else if (instruction instanceof PhiInst\n                &amp;&amp; defInstructions.contains(instruction)) {\n            pushCount++;\n            defStack.push(instruction);\n        }\n    }\n    for (BasicBlock child : block.getNextBlocks()) {\n        Instruction firstInstruction = child.getFirstInstruction();\n        if (firstInstruction instanceof PhiInst phiInst &amp;&amp; useInstructions.contains(firstInstruction)) {\n            Value value = defStack.empty() ? new Undefined() : defStack.peek();\n            phiInst.addValue(block, value);\n        }\n    }\n    for (BasicBlock dominated : block.getImmediateDominateBlocks()) {\n        renameVariables(dominated);\n    }\n    for (int i = 0; i &lt; pushCount; i++) {\n        defStack.pop();\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_4","title":"\u51fd\u6570\u526f\u4f5c\u7528\u5206\u6790","text":"<p>\u5bf9\u6240\u6709\u51fd\u6570\u8fdb\u884c\u5206\u6790\uff0c\u6ca1\u6709\u526f\u4f5c\u7528\u7684\u51fd\u6570\uff08pure function\uff09\u53ef\u4ee5\u8fdb\u884c\u66f4\u591a\u7684\u4f18\u5316\u3002</p> <p>\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u6709\u526f\u4f5c\u7528\u7684\u5224\u5b9a\u6807\u51c6\u4e3a\uff1a</p> <ol> <li>\u5b58\u5728IO\u76f8\u5173\u6307\u4ee4\uff1aIO\u4f1a\u5bf9\u5916\u90e8\u72b6\u6001\u4ea7\u751f\u5f71\u54cd</li> <li>\u5199\u5168\u5c40\u53d8\u91cf\uff1a\u6539\u53d8Module\u7684\u5168\u5c40\u72b6\u6001</li> <li>\u5199\u901a\u8fc7<code>FuncParam</code>\u6216<code>GlobalVar</code>\u95f4\u63a5\u5f15\u7528\u7684\u5185\u5b58\uff1a\u901a\u8fc7\u53c2\u6570\u6216\u5168\u5c40\u5f15\u7528\uff08\u5982\u6570\u7ec4\u6307\u9488\uff09\u5bf9\u5916\u90e8\u53ef\u89c1\u72b6\u6001\u8fdb\u884c\u4e86\u4fee\u6539</li> <li>\u8c03\u7528\u6709\u526f\u4f5c\u7528\u7684\u51fd\u6570</li> </ol> <p>\u5728\u4ee3\u7801\u5b9e\u73b0\u4e0a\uff0c\u7b2c\u4e00\u904d\u626b\u63cf\u540e\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u51fd\u6570\u8c03\u7528\u4e86\u6709\u526f\u4f5c\u7528\u7684\u51fd\u6570\uff0c\u4f46\u662f\u81ea\u8eab\u72b6\u6001\u6ca1\u6709\u66f4\u65b0\uff0c\u6b64\u65f6\u9700\u8981\u5bf9\u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb\u8fdb\u884c\u4f20\u9012\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_5","title":"\u51fd\u6570\u5185\u8054","text":"<p>\u51fd\u6570\u5185\u8054\u901a\u8fc7\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4f53\u76f4\u63a5\u201c\u590d\u5236\u201d\u5230\u8c03\u7528\u5904\uff0c\u4ece\u800c\u6d88\u9664\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u540c\u65f6\u4e3a\u540e\u7eed\u4f18\u5316\u521b\u9020\u673a\u4f1a\u3002</p> <ol> <li>\u6784\u5efa\u8c03\u7528\u56fe</li> </ol> <pre><code>private static void initializeCallGraphs() {\n    callGraph = new HashMap&lt;&gt;();\n    reverseCallGraph = new HashMap&lt;&gt;();\n\n    module.getFunctions().forEach(func -&gt; {\n        callGraph.put(func, new HashSet&lt;&gt;());\n        reverseCallGraph.put(func, new HashSet&lt;&gt;());\n    });\n\n    module.getFunctions().forEach(func -&gt;\n            func.getBasicBlocks().stream()\n                    .flatMap(block -&gt; block.getInstructions().stream())\n                    .filter(instr -&gt; instr instanceof CallInst)\n                    .map(instr -&gt; (CallInst) instr)\n                    .forEach(callInst -&gt; {\n                        Function target = callInst.getCalledFunction();\n                        callGraph.get(func).add(target);\n                        reverseCallGraph.get(target).add(func);\n                    })\n    );\n}\n</code></pre> <ol> <li> <p>\u5224\u65ad\u662f\u5426\u9700\u8981\u5185\u8054\uff0c\u9700\u8981\u6ee1\u8db3</p> </li> <li> <p>\u4e0d\u662fmain\u51fd\u6570</p> </li> <li>\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u4e14\u51fd\u6570\u4e0d\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff08\u53f6\u5b50\u51fd\u6570\uff09</li> <li>\u4e0d\u5b58\u5728\u9012\u5f52</li> </ol> <p>\u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u90fd\u6ee1\u8db3\uff0c\u5219\u627e\u51fa\u6240\u6709\u5bf9\u8be5function\u7684\u8c03\u7528\u70b9\u3002</p> <pre><code>ArrayList&lt;CallInst&gt; calls = reverseCallGraph.get(function).stream()\n            .flatMap(caller -&gt; caller.getBasicBlocks().stream())\n            .flatMap(block -&gt; block.getInstructions().stream())\n            .filter(instr -&gt; instr instanceof CallInst)\n            .map(instr -&gt; (CallInst) instr)\n            .filter(callInst -&gt; callInst.getOperands().get(0).getName().equals(function.getName()))\n            .collect(Collectors.toCollection(ArrayList::new));\n</code></pre> <ol> <li>\u5206\u88c2\u57fa\u672c\u5757\uff1a\u5728\u8c03\u7528\u6307\u4ee4\u6240\u5728\u7684\u57fa\u672c\u5757\u4e4b\u540e\u65b0\u5efa\u4e00\u4e2a\u57fa\u672c\u5757nextBlock\uff0c\u5c06call\u6307\u4ee4\u4e4b\u540e\u7684\u6307\u4ee4\u79fb\u52a8\u5230nextBlock\uff0c\u5e76\u5220\u9664call\u6307\u4ee4\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u65b9\u4fbf\u5728\u63d2\u5165\u88ab\u8c03\u51fd\u6570\u7684\u4ee3\u7801\u540e\uff0c\u53ef\u4ee5\u65e0\u7f1d\u8854\u63a5\u539f\u6765\u7684\u63a7\u5236\u6d41\u3002</li> </ol> <p>\u5206\u88c2\u57fa\u672c\u5757\u540e\u9700\u8981\u66f4\u65b0phi\u6307\u4ee4\u7684\u524d\u8d8b\u57fa\u672c\u5757\u4fe1\u606f\u3002</p> <ol> <li> <p>\u5bf9\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4ee3\u7801\u8fdb\u884c\u6df1\u62f7\u8d1d\u5f97\u5230<code>copiedFunction</code>\uff0c\u5c06\u88ab\u8c03\u7528\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u7528\u8c03\u7528\u6307\u4ee4\u7684\u5b9e\u53c2\u66ff\u6362\uff0c\u5728\u539f\u6765call\u6307\u4ee4\u7684\u4f4d\u7f6e\u63d2\u5165\u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\uff0c\u8df3\u8f6c\u81f3<code>copiedFunction</code>\u7684\u5165\u53e3\u57fa\u672c\u5757\uff0c\u5c06<code>copiedFunction</code>\u7684\u57fa\u672c\u5757\u63d2\u5165\u3002</p> </li> <li> <p>\u5904\u7406<code>copiedFunction</code>\u7684<code>RetInst</code>\uff1a</p> </li> <li> <p>\u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f<code>void</code>\uff0c\u5c06\u8fd4\u56de\u70b9\u8f6c\u5316\u4e3a\u65e0\u6761\u4ef6\u8df3\u8f6c\u5230nextBlock\uff1b</p> </li> <li> <p>\u5982\u679c\u6709\u975evoid\u8fd4\u56de\u503c\uff0c\u5728nextBlock\u5f00\u5934\u63d2\u5165phi\u7ed3\u70b9\uff0c\u7528\u539f\u672c<code>RetInst</code>\u7684\u8fd4\u56de\u503c\u4f5c\u4e3aphi\u7684\u64cd\u4f5c\u6570\u3002</p> </li> <li> <p>\u6bcf\u6b21\u4f1a\u6839\u636e\u5f53\u524d\u7684\u8c03\u7528\u56fe\u91cd\u65b0\u5224\u65ad\u662f\u5426\u6709\u65b0\u7684\u51fd\u6570\u53ef\u4ee5\u5185\u8054\u3002\u4e00\u65e6\u6709\u51fd\u6570\u88ab\u5185\u8054\u4fee\u6539\u4e86\u6a21\u5757\uff0c\u5219\u53ef\u80fd\u89e3\u5f00\u66f4\u591a\u5185\u8054\u673a\u4f1a\u3002</p> </li> </ol> <p>\u518d\u6b21\u5faa\u73af\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u591a\u53ef\u5185\u8054\u7684\u51fd\u6570\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_6","title":"\u5168\u5c40\u53d8\u91cf\u672c\u5730\u5316","text":"<p>\u5168\u5c40\u53d8\u91cf\u672c\u5730\u5316\u7684\u76ee\u7684\u662f\u5c06\u5168\u5c40\u53d8\u91cf\u8f6c\u6362\u4e3a\u66f4\u5c40\u90e8\u7684\u5f62\u5f0f\uff08\u5982\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\uff09\uff0c\u4f18\u5316\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u5b58\u53d6\u64cd\u4f5c\uff0c\u540c\u65f6\u66b4\u9732\u66f4\u591a\u7684\u4f18\u5316\u673a\u4f1a\u3002</p> <ol> <li>\u68c0\u67e5\u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528\u60c5\u51b5</li> </ol> <p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u4e00\u4e2a<code>Module</code>\u7531\u591a\u4e2a<code>Function</code>\u548c\u591a\u4e2a<code>GlobalVar</code>\u7ec4\u6210\u3002\u5bf9\u4e8e\u6bcf\u4e2a<code>GlobalVar</code>\uff0c\u68c0\u67e5\u5176\u5728\u54ea\u4e9b\u51fd\u6570\u4e2d\u88ab\u4f7f\u7528\u3002</p> <pre><code>private static void checkUse(Module module) {\n    for (GlobalVar gv : module.getGlobalVars()) {\n        for (User user : gv.getUserList()) {\n            Function func = ((Instruction) user)\n                    .getBasicBlock().getFunction();\n            usedMap.computeIfAbsent(gv, k -&gt; new HashSet&lt;&gt;()).add(func);\n        }\n    }\n}\n</code></pre> <ol> <li> <p>\u6784\u5efa\u51fd\u6570\u8c03\u7528\u56fe</p> </li> <li> <p>\u91c7\u53d6\u4fdd\u5b88\u7684\u7b56\u7565\uff0c\u5c06\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u672c\u5730\u5316\u5904\u7406\uff1a</p> </li> <li> <p>\u7c7b\u578b\u4e3a<code>i8</code>\u6216<code>i32</code></p> </li> <li>\u53ea\u5728\u67d0\u4e00\u4e2a\u51fd\u6570<code>func</code>\u4e2d\u88ab\u4f7f\u7528\uff0c\u4e14<code>func</code>\u6ca1\u6709\u88ab\u5176\u4ed6\u51fd\u6570\u8c03\u7528</li> </ol> <p>\u672c\u5730\u5316\u7684\u64cd\u4f5c\u6b65\u9aa4\u4e3a\uff1a</p> <ol> <li> <p>\u6839\u636e\u5168\u5c40\u53d8\u91cf\u7c7b\u578b\u521b\u5efaalloca\u8bed\u53e5\uff0c\u63d2\u5165\u5165\u53e3\u57fa\u672c\u5757</p> <pre><code>BasicBlock entryBlock = func.getEntryBlock();\nValueType gvType = ((PointerType) gv.getValueType()).getTargetType();\nAllocInst allocInst = new AllocInst(gvType);\nallocInst.setBasicBlock(entryBlock);\nentryBlock.getInstructions().add(0, allocInst);\n</code></pre> </li> <li> <p>\u63d2\u5165store\u8bed\u53e5\uff0c\u6839\u636e\u521d\u59cb\u503c\u8bbe\u7f6e\u65b0\u53d8\u91cf\u7684\u521d\u59cb\u503c\uff0c\u7f3a\u7701\u4e3a0</p> <pre><code>int initValue;\nVarSymbol varSymbol = (VarSymbol) TableManager.getInstance1()\n        .getSymbol(gv.getName().substring(1));\nInitialValue initialValue = varSymbol.getInitialValue();\nif (initialValue.getElements() == null) {\n    initValue = 0;\n} else {\n    initValue = varSymbol.getConstValue();\n}\nStoreInst storeInst = new StoreInst(allocInst, new ConstInt(gvType, initValue));\nstoreInst.setBasicBlock(entryBlock);\nentryBlock.getInstructions().add(1, storeInst);\n</code></pre> </li> <li> <p>\u5c06\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u6240\u6709\u4f7f\u7528\u66ff\u6362\u4e3a\u65b0\u5206\u914d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u79fb\u9664\u8be5\u5168\u5c40\u53d8\u91cf</p> <pre><code>gv.replaceByNewValue(allocInst);\ntoRemove.add(gv);\n</code></pre> </li> </ol> <p>\u4ee5\u4e0a\u5bf9\u4e00\u822c\u7684\u5168\u5c40\u53d8\u91cf\u672c\u5730\u5316\u66ff\u6362\u7b56\u7565\u8f83\u4e3a\u4fdd\u5b88\uff0c\u662f\u56e0\u4e3a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fc7\u4e8e\u6fc0\u8fdb\u7684\u4f18\u5316\u4f1a\u5bfc\u81f4\u5168\u5c40\u53d8\u91cf\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4f7f\u7528\u4ecd\u7136\u5b58\u5728\uff0c\u4f7f\u5f97\u90e8\u5206\u51fd\u6570\u4f9d\u8d56\u4e8e\u8be5\u5168\u5c40\u53d8\u91cf\u800c\u53e6\u4e00\u4e9b\u51fd\u6570\u5219\u4e0d\u518d\u4f7f\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u7684\u8bed\u4e49\u53d1\u751f\u6539\u53d8\u3002\u4f46\u662f\u5047\u8bbe\u8be5\u5168\u5c40\u53d8\u91cf\u6ee1\u8db3\u4e00\u4e9b\u7279\u6b8a\u6761\u4ef6\uff0c\u90a3\u4e48\u53ef\u4ee5\u91c7\u53d6\u53e6\u5916\u7684\u4f18\u5316\u65b9\u6cd5</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_7","title":"\u5168\u5c40\u5e38\u53d8\u91cf\u4f18\u5316","text":"<p>\u5bf9\u4e8e\u5b9a\u4e49\u5728\u5168\u5c40\u7684\u5e38\u53d8\u91cf<code>const int a = 4</code>\uff0c\u5176\u503c\u4e0d\u4f1a\u518d\u53d1\u751f\u6539\u53d8\uff0c\u4e8e\u662f\u53ef\u5c06\u6240\u6709\u4f7f\u7528\u5230\u5168\u5c40\u5e38\u53d8\u91cf\u7684load\u6307\u4ee4\u66ff\u6362\u4e3a\u4e00\u4e2a\u5e38\u6570\uff0c\u4f8b\u5982\u6240\u6709\u7684<code>%v2 = load i32, i32* @a</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230<code>%v2</code>\u7684\u503c\u662f4\u3002</p> <pre><code>// gv\u7684valuetype\u9ed8\u8ba4\u662f\u6307\u9488\u7c7b\u578b\nValueType gvType = ((PointerType) gv.getValueType()).getTargetType();\nif (gvType.equals(IntegerType.i8) || gvType.equals(IntegerType.i32)) {\n    int initValue;\n    InitialValue initialValue = varSymbol.getInitialValue();\n    if (initialValue.getElements() == null) {\n        initValue = 0;\n    } else {\n        initValue = varSymbol.getConstValue();\n    }\n    ConstInt constInt = new ConstInt(gvType, initValue);\n    for (User user : gv.getUserList()) {\n        if (user instanceof LoadInst loadInst) {\n            loadInst.replaceByNewValue(constInt);\n            toRemove.add(gv);\n            loadInst.getBasicBlock().getInstructions().remove(loadInst);\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_8","title":"\u5168\u5c40\u5e38\u6570\u7ec4\u4f18\u5316","text":"<p>\u5bf9\u5e38\u6570\u7ec4<code>const int a[3] = {1, 2, 3}</code>\uff0c\u4e0e\u5e38\u53d8\u91cf\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u5c06\u5e38\u6570\u4e0b\u6807\u6570\u7ec4\u8bbf\u95ee\u66ff\u6362\u4e3a\u5177\u4f53\u503c\uff0c\u5982<code>int b = a[2]</code>\u53ef\u4ee5\u76f4\u63a5\u66ff\u6362\u4e3a<code>int b = 3</code>\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u8003\u8651\u4e0b\u6807\u975e\u5e38\u6570\u7684\u60c5\u51b5\uff0c\u6bd4\u5982<code>int c = a[b]</code>\u3002</p> <pre><code>ValueType gvType = ((PointerType) gv.getValueType()).getTargetType();\nif (!(gvType instanceof ArrayType arrayType)) {\n    continue;\n}\ngvType = arrayType.getElementType();\nif (gvType.equals(IntegerType.i8) || gvType.equals(IntegerType.i32)) {\n    for (User user : gv.getUserList()) {\n        if (user instanceof GepInst gepInst) {\n            if (gepInst.getIndex() instanceof ConstInt constInt) {\n                int index = constInt.getIntValue();\n                for (User user1 : gepInst.getUserList()) {\n                    if (user1 instanceof LoadInst loadInst) {\n                        int intValue;\n                        if (index &lt; varSymbol.getInitialValue().getElements().size()) {\n                            intValue = varSymbol.getConstValue(index);\n                        } else {\n                            intValue = 0;\n                        }\n                        ConstInt constInt1 = new ConstInt(gvType, intValue);\n                        loadInst.replaceByNewValue(constInt1);\n                        loadInst.getBasicBlock().getInstructions().remove(loadInst);\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u5bf9\u4e8e\u5168\u5c40\u5e38\u6570\u7ec4\u7684\u4f18\u5316\u540c\u6837\u9002\u7528\u4e8e\u5c40\u90e8\u5e38\u6570\u7ec4\uff0c\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_9","title":"\u4ee3\u7801\u5220\u9664","text":"<p>\u4ee3\u7801\u5220\u9664\u901a\u8fc7\u904d\u5386\u6709\u7528\u51fd\u6570\u4e2d\u7684\u6bcf\u6761\u6307\u4ee4\uff0c\u5e76\u6cbf\u7740def-use\u94fe\u6784\u5efa\u6709\u7528\u6307\u4ee4\u7684\u95ed\u5305\uff0c\u5220\u9664\u4e0d\u5728\u95ed\u5305\u7684\u6307\u4ee4\u3002</p> <pre><code>private static void delete(Function function) {\n    HashSet&lt;Instruction&gt; usefulInstructions = findUseful(function);\n    removeUseless(function, usefulInstructions);\n}\n\n// \u67e5\u627e\u6709\u7528\u7684\u6307\u4ee4\nprivate static HashSet&lt;Instruction&gt; findUseful(Function function) {\n    HashSet&lt;Instruction&gt; useful = new HashSet&lt;&gt;();\n    function.getBasicBlocks().forEach(block -&gt;\n            block.getInstructions().stream()\n                    .filter(CodeRemoval::isUseful)\n                    .forEach(instruction -&gt; getClosure(instruction, useful))\n    );\n    return useful;\n}\n\n// \u83b7\u53d6\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u95ed\u5305\nprivate static void getClosure(Instruction instruction, HashSet&lt;Instruction&gt; useful) {\n    Stack&lt;Instruction&gt; stack = new Stack&lt;&gt;();\n    stack.push(instruction);\n    while (!stack.isEmpty()) {\n        Instruction curInstruction = stack.pop();\n        if (useful.add(curInstruction)) {\n            curInstruction.getOperands().stream()\n                    .filter(operand -&gt; operand instanceof Instruction)\n                    .map(operand -&gt; (Instruction) operand)\n                    .forEach(stack::push);\n        }\n    }\n}\n\nprivate static boolean isUseful(Instruction instruction) {\n    // \u5224\u65ad\u6307\u4ee4\u662f\u5426\u6709\u7528\n}\n\n// \u79fb\u9664\u65e0\u7528\u7684\u6307\u4ee4\nprivate static void removeUseless(Function function, HashSet&lt;Instruction&gt; useful) {\n    function.getBasicBlocks().forEach(block -&gt;\n            block.getInstructions().removeIf(instruction -&gt; {\n                if (!useful.contains(instruction)) {\n                    instruction.removeOperands();\n                    return true;\n                }\n                return false;\n            })\n    );\n}\n</code></pre> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u8be5\u9636\u6bb5\u8fd8\u53ef\u4ee5\u5b8c\u6210\u65e0\u7528\u51fd\u6570\u5220\u9664\u3001\u65e0\u7528\u6570\u7ec4\u5220\u9664\u7b49\u5de5\u4f5c\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#gvn","title":"GVN","text":"<p>GVN\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u552f\u4e00\u7684\u8ba1\u7b97\u5206\u914d\u4e00\u4e2a\u503c\u7f16\u53f7\uff0c\u786e\u4fdd\u76f8\u540c\u8ba1\u7b97\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u5e76\u91cd\u7528\u5176\u7ed3\u679c\u3002\u8fd9\u6837\u7684\u201c\u503c\u7f16\u53f7\u201d\u5206\u914d\u53ef\u4ee5\u4f7f\u7528\u6307\u4ee4\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u3002</p> <ol> <li>\u5bf9\u6bcf\u6761\u6307\u4ee4\u751f\u6210\u552f\u4e00\u7684\u54c8\u5e0c\u503c\uff1a\u5728LLVM IR\u4e2d\uff0c\u53ef\u5bf9\u8ba1\u7b97\u8bed\u53e5\u3001\u6307\u9488\u8ba1\u7b97\u8bed\u53e5\u3001\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u3001\u622a\u65ad\u4e0e\u6269\u5c55\u8bed\u53e5\u8fdb\u884c\u5904\u7406\u3002</li> </ol> <p>\u7531\u4e8e\u8ba1\u7b97\u8bed\u53e5\u5b58\u5728\u5de6\u53f3\u4e24\u4e2a\u53d8\u91cf\uff0c\u5bf9\u4e8e\u6ee1\u8db3\u4ea4\u6362\u5f8b\u7684\u52a0\u6cd5\u548c\u4e58\u6cd5\uff0c\u5bf9\u5de6\u53f3\u53d8\u91cf\u987a\u5e8f\u8fdb\u884c\u8c03\u6574\uff0c\u4f7f\u5f97<code>a + b</code>\u548c<code>b + a</code>\u53ef\u88ab\u8bc6\u522b\u4e3a\u516c\u5171\u8868\u8fbe\u5f0f\uff1b\u5bf9\u4e8e<code>icmp</code>\u903b\u8f91\u8ba1\u7b97\u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5c06<code>b &gt; a</code>\u8f6c\u5316\u4e3a<code>a &lt; b</code>\u3002</p> <p>\u5bf9\u4e8e\u53ef\u5904\u7406\u7684<code>call</code>\u8bed\u53e5\uff0c\u9700\u8981\u989d\u5916\u5224\u65ad\u6240\u8c03\u7528\u7684\u51fd\u6570\u662f\u5426\u6709\u6f5c\u5728\u526f\u4f5c\u7528\u3002</p> <pre><code>private static String getHash(Instruction instruction) {\n    if (instruction instanceof BinaryInst binaryInst) {\n        String lName = binaryInst.getOperand1().getName();\n        String rName = binaryInst.getOperand2().getName();\n        String op = binaryInst.getOpType().toString();\n        if (!OperatorType.isLogicalOperator(binaryInst.getOpType())) {\n            if (binaryInst.getOpType() == OperatorType.ADD\n                    || binaryInst.getOpType() == OperatorType.MUL) {\n                if (lName.compareTo(rName) &gt; 0) {\n                    return rName + \" \" + op + \" \" + lName;\n                } else {\n                    return lName + \" \" + op + \" \" + rName;\n                }\n            }\n        } else {\n            OperatorType temp = binaryInst.getOpType();\n            if (lName.compareTo(rName) &lt; 0) {\n                lName = binaryInst.getOperand2().getName();\n                rName = binaryInst.getOperand1().getName();\n                temp = switch (temp) {\n                    case ICMP_SGE -&gt; OperatorType.ICMP_SLE;\n                    case ICMP_SGT -&gt; OperatorType.ICMP_SLT;\n                    case ICMP_SLT -&gt; OperatorType.ICMP_SGT;\n                    case ICMP_SLE -&gt; OperatorType.ICMP_SGE;\n                    default -&gt; temp;\n                };\n            }\n            return lName + \" \" + temp.toString() + \" \" + rName;\n        }\n    } else if (instruction instanceof GepInst gepInst) {\n        return gepInst.getPointer().getName() + \" \"\n                + gepInst.getIndex().getName();\n    } else if (instruction instanceof CallInst callInst &amp;&amp; callCanReplaced(callInst)) {\n        return callInst.getCallee();\n    } else if (instruction instanceof TruncInst truncInst) {\n        return truncInst.getOriginValue().getName() + \" trunc \"\n                + truncInst.getOriginValue().getValueType() + \" -&gt; \" + truncInst.getValueType();\n    } else if (instruction instanceof ZextInst zextInst) {\n        return zextInst.getOriginValue().getName() + \" zext \"\n                + zextInst.getOriginValue().getValueType() + \" -&gt; \" + zextInst.getValueType();\n    }\n    return null;\n}\n</code></pre> <ol> <li>\u5982\u679c\u54c8\u5e0c\u503c\u5df2\u5b58\u5728\uff0c\u8bf4\u660e\u5f53\u524d\u6307\u4ee4\u662f\u5197\u4f59\u7684\uff0c\u53ef\u4ee5\u7528\u5df2\u6709\u7684\u503c\u66ff\u6362\uff0c\u5e76\u79fb\u9664\u8be5\u6307\u4ee4\u3002</li> </ol> <p>\u5f53\u524d\u57fa\u672c\u5757\u5904\u7406\u5b8c\u6210\u540e\uff0c\u9012\u5f52\u5904\u7406\u652f\u914d\u6811\u4e2d\u7684\u5b50\u57fa\u672c\u5757\uff0c\u786e\u4fdd\u5168\u5c40\u8303\u56f4\u5185\u7684\u7b49\u4ef7\u6307\u4ee4\u90fd\u80fd\u88ab\u8bc6\u522b\u3002\u5728\u9000\u51fa\u5f53\u524d\u57fa\u672c\u5757\u540e\uff0c\u79fb\u9664\u5728\u8be5\u57fa\u672c\u5757\u4e2d\u63d2\u5165\u7684\u54c8\u5e0c\u503c\uff0c\u907f\u514d\u5f71\u54cd\u5176\u4ed6\u72ec\u7acb\u7684\u63a7\u5236\u6d41\u8def\u5f84\u3002</p> <pre><code>private static void visitBlock(BasicBlock block) {\n    ArrayList&lt;Instruction&gt; instructions = new ArrayList&lt;&gt;(block.getInstructions());\n    HashSet&lt;String&gt; inserted = new HashSet&lt;&gt;();\n\n    instructions.forEach(instr -&gt; {\n        String gvnHash = getHash(instr);\n        if (gvnHash != null) {\n            if (gvnMap.containsKey(gvnHash)) {\n                instr.replaceByNewValue(gvnMap.get(gvnHash));\n                block.getInstructions().remove(instr);\n                instr.removeOperands();\n            } else {\n                gvnMap.put(gvnHash, instr);\n                inserted.add(gvnHash);\n            }\n        }\n    });\n\n    block.getImmediateDominateBlocks().forEach(GVN::visitBlock);\n    inserted.forEach(gvnMap::remove);\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_10","title":"\u5e38\u91cf\u6298\u53e0","text":"<p>\u5e38\u91cf\u6298\u53e0\u53ef\u8fdb\u884c\u7684\u4f18\u5316\u8f83\u591a\u3002</p> <ol> <li>\u5bf9\u4e8e\u622a\u65ad\u4e0e\u6269\u5c55\u6307\u4ee4\uff0c\u5982\u679c\u64cd\u4f5c\u6570\u662f\u5e38\u91cf\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5c06\u503c\u66ff\u6362\u4e3a\u5bf9\u5e94\u4f4d\u6570\u7684\u503c\u3002</li> </ol> <pre><code>private static void zextOptimize(ZextInst zextInst) {\n    Value origin = zextInst.getOriginValue();\n    if (origin instanceof ConstInt constInt) {\n        int value = constInt.getIntValue();\n        ValueType targetType = zextInst.getValueType();\n        if (targetType.equals(IntegerType.i8) || targetType.equals(IntegerType.i32)) {\n            ConstInt constInt1 = new ConstInt(targetType, value);\n            zextInst.replaceByNewValue(constInt1);\n            zextInst.removeOperands();\n            curBlock.getInstructions().remove(zextInst);\n        }\n    }\n}\n\nprivate static void truncOptimize(TruncInst truncInst) {\n    Value origin = truncInst.getOriginValue();\n    if (origin instanceof ConstInt constInt) {\n        int value = constInt.getIntValue();\n        ValueType targetType = truncInst.getValueType();\n        if (targetType.equals(IntegerType.i8) &amp;&amp; constInt.getValueType().equals(IntegerType.i32)) {\n            ConstInt constInt1 = new ConstInt(targetType, value &amp; 0xFF);\n            truncInst.replaceByNewValue(constInt1);\n            truncInst.removeOperands();\n            curBlock.getInstructions().remove(truncInst);\n        }\n    }\n}\n</code></pre> <ol> <li><code>a % b = a - a / b * b\uff08b\u4e3a\u5e38\u6570\uff09</code>\uff0c\u65b9\u4fbf\u540e\u7aef\u8fdb\u884c\u4e58\u9664\u4f18\u5316</li> </ol> <pre><code>private static void srem2div(BinaryInst inst) {\n    Value a = inst.getOperand1();\n    Value b = inst.getOperand2();\n    BasicBlock curBlock = inst.getBasicBlock();\n    if (!(a instanceof ConstInt) &amp;&amp; (b instanceof ConstInt)) {\n        BinaryInst div = new BinaryInst(OperatorType.SDIV, a, b);\n        BinaryInst mul = new BinaryInst(OperatorType.MUL, div, b);\n        BinaryInst sub = new BinaryInst(OperatorType.SUB, a, mul);\n        div.setBasicBlock(curBlock);\n        mul.setBasicBlock(curBlock);\n        sub.setBasicBlock(curBlock);\n        curBlock.getInstructions().set(curBlock.getInstructions().indexOf(inst), div);\n        curBlock.getInstructions().add(curBlock.getInstructions().indexOf(div) + 1, mul);\n        curBlock.getInstructions().add(curBlock.getInstructions().indexOf(mul) + 1, sub);\n        inst.replaceByNewValue(sub);\n        curBlock.getInstructions().remove(inst);\n        inst.removeOperands();\n    }\n}\n</code></pre> <ol> <li> <p>\u5bf9\u8ba1\u7b97\u8bed\u53e5<code>BinaryInst</code>\uff0c\u5206\u522b\u8ba8\u8bba\u4e24\u4e2a\u64cd\u4f5c\u6570\u4e2d\u5e38\u6570\u7684\u6570\u91cf\uff0c\u8fdb\u884c\u5bf9\u5e94\u7684\u4f18\u5316</p> </li> <li> <p>\u4e24\u4e2a\u64cd\u4f5c\u6570\u5747\u4e3a\u5e38\u6570\uff0c\u5219\u53ef\u4ee5\u7acb\u5373\u8ba1\u7b97\u7ed3\u679c\u5e76\u4ee3\u66ff\u539f\u6307\u4ee4</p> </li> <li>\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u6570<ul> <li>a + 0 = 0 + a = a</li> <li>a - 0 = a</li> <li>a * 0 = 0 * a = 0</li> <li>a * 1 = 1 * a = a</li> <li>0 / a = 0</li> <li>a / 1 = 1</li> <li>o % a = 0</li> <li>a % 1 = a % (-1) = 0</li> </ul> </li> <li> <p>\u4e24\u4e2a\u64cd\u4f5c\u6570\u5747\u975e\u5e38\u6570</p> <ul> <li>(a - b) + b = b + (a - b) = a</li> <li>(a + b) + (a - b) = 2a</li> <li>a - a = 0</li> <li>(a + b) - b = a, (a + b) - a = b</li> <li>a - (a - b) = b</li> <li>a / a = 1</li> <li>a % a = 0</li> </ul> </li> <li> <p>\u5b8c\u6210\u540e\u5bf9phi\u8282\u70b9\u8fdb\u884c\u4f18\u5316\uff1a</p> </li> <li> <p>\u6e05\u7406Phi\u6307\u4ee4\u4e2d\u6765\u81ea\u5df2\u5220\u9664\u57fa\u672c\u5757\u7684\u64cd\u4f5c\u6570\u548c\u5bf9\u5e94\u7684\u57fa\u672c\u5757\uff1b</p> </li> <li>\u5982\u679cPhi\u6307\u4ee4\u7684\u6240\u6709\u64cd\u4f5c\u6570\u76f8\u540c\uff0c\u6216\u8005Phi\u6307\u4ee4\u6ca1\u6709\u7528\u6237\uff0c\u5219\u5c06Phi\u6307\u4ee4\u66ff\u6362\u4e3a\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u6570\uff0c\u7b80\u5316Phi\u6307\u4ee4\uff1b</li> <li>\u79fb\u9664Phi\u6307\u4ee4\u4e2d\u6765\u81ea\u5df2\u5220\u9664\u57fa\u672c\u5757\u7684\u64cd\u4f5c\u6570\u548c\u5bf9\u5e94\u7684\u57fa\u672c\u5757</li> </ol>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_11","title":"\u8df3\u8f6c\u4f18\u5316","text":"<p>\u4e0e\u5e38\u91cf\u6298\u53e0\u7c7b\u4f3c\uff0c\u5bf9\u4e8e\u4e00\u4e9b<code>icmp</code>\u6307\u4ee4\uff0c\u4e5f\u53ef\u63d0\u524d\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u5982<code>%cmp1 = icmp eq i32 5, 5</code>\u53ef\u88ab\u66ff\u6362\u4e3a<code>%cmp1 = 1</code>\u3002</p> <pre><code>private static void icmpOptimize(BinaryInst binaryInst) {\n    Value value1 = binaryInst.getOperand1();\n    Value value2 = binaryInst.getOperand2();\n    if (value1 instanceof ConstInt constInt1 &amp;&amp; value2 instanceof ConstInt constInt2) {\n        OperatorType op = binaryInst.getOpType();\n        int cons1 = constInt1.getIntValue();\n        int cons2 = constInt2.getIntValue();\n        int value = switch (op) {\n            case ICMP_EQ -&gt; cons1 == cons2 ? 1 : 0;\n            case ICMP_NE -&gt; cons1 != cons2 ? 1 : 0;\n            case ICMP_SGE -&gt; cons1 &gt;= cons2 ? 1 : 0;\n            case ICMP_SGT -&gt; cons1 &gt; cons2 ? 1 : 0;\n            case ICMP_SLE -&gt; cons1 &lt;= cons2 ? 1 : 0;\n            case ICMP_SLT -&gt; cons1 &lt; cons2 ? 1 : 0;\n            default -&gt; 0;\n        };\n        ConstInt constInt = new ConstInt(IntegerType.i1, value);\n        BasicBlock curBlock = binaryInst.getBasicBlock();\n        curBlock.getInstructions().remove(binaryInst);\n        binaryInst.replaceByNewValue(constInt);\n        binaryInst.removeOperands();\n    }\n}\n</code></pre> <p>\u6b64\u65f6\u4e00\u4e9b<code>br</code>\u7684\u8df3\u8f6c\u65b9\u5411\u5df2\u7ecf\u786e\u5b9a\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u5c06\u6709\u6761\u4ef6br\u6539\u5199\u6210\u65e0\u6761\u4ef6br\uff0c\u4f8b\u5982<code>br i1 1, label %true, label %false</code>\u53ef\u88ab\u66ff\u6362\u4e3a<code>br label %true</code>\u3002</p> <p>\u8df3\u8f6c\u4f18\u5316\u4e0d\u4ec5\u80fd\u51cf\u5c11\u4ee3\u7801\u4f53\u79ef\uff0c\u540c\u65f6\u901a\u8fc7\u5220\u9664\u65e0\u7528\u4ee3\u7801\u4e0e\u4fee\u6539CFG\uff0c\u66b4\u9732\u6f5c\u5728\u7684\u4f18\u5316\u673a\u4f1a\u3002</p> <pre><code>private static void brOptimize(BrInst brInst) {\n    Value value = brInst.getCondition();\n    BasicBlock curBlock = brInst.getBasicBlock();\n    if (value instanceof ConstInt constInt) {\n        BrInst noCondBr;\n        BasicBlock targetBlock;\n        if (constInt.getIntValue() == 0) {\n            targetBlock = brInst.getFalseBlock();\n            curBlock.deleteForPhi(brInst.getTrueBlock());\n        } else {\n            targetBlock = brInst.getTrueBlock();\n            curBlock.deleteForPhi(brInst.getFalseBlock());\n        }\n        noCondBr = new BrInst(targetBlock);\n        curBlock.getInstructions().set(curBlock.getInstructions().indexOf(brInst), noCondBr);\n        brInst.removeOperands();\n    }\n}\n</code></pre> <p>\u6700\u540e\u540c\u6837\u5bf9phi\u6307\u4ee4\u8fdb\u884c\u5904\u7406\uff0c\u540c\u65f6\u5220\u9664\u6389\u4e0d\u53ef\u8fbe\u7684\u57fa\u672c\u5757\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_12","title":"\u5168\u5c40\u53d8\u91cf\u8bbf\u5b58\u4f18\u5316","text":"<p>\u5bf9\u4e8e\u5168\u5c40\u53d8\u91cf\u53ef\u901a\u8fc7\u8ddf\u8e2aload\u548cstore\u8fdb\u884c\u4f18\u5316\u3002</p> <ul> <li>store\u6307\u4ee4\uff1a</li> <li>\u8ddf\u8e2a\u5bf9\u5168\u5c40\u53d8\u91cf\u7684\u5b58\u50a8\u64cd\u4f5c\uff0c\u8bb0\u5f55\u6700\u65b0\u7684\u5b58\u50a8\u503c\u3002</li> <li> <p>\u5982\u679c\u5168\u5c40\u53d8\u91cf\u7684\u5b58\u50a8\u503c\u5df2\u7ecf\u88ab\u8bb0\u5f55\u4e14\u6ca1\u6709\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u79fb\u9664\u5197\u4f59\u7684store\u6307\u4ee4\u3002</p> </li> <li> <p>load\u6307\u4ee4\uff1a</p> </li> <li> <p>\u5982\u679c\u52a0\u8f7d\u64cd\u4f5c\u6307\u5411\u7684\u5168\u5c40\u53d8\u91cf\u5df2\u7ecf\u6709\u6700\u65b0\u7684\u5b58\u50a8\u503c\uff0c\u53ef\u4ee5\u5c06load\u6307\u4ee4\u66ff\u6362\u4e3a\u5b58\u50a8\u7684\u5e38\u91cf\u503c\uff0c\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u8bfb\u53d6\u3002</p> </li> <li> <p>\u5904\u7406\u51fd\u6570\u8c03\u7528\uff1a</p> </li> <li>\u51fd\u6570\u8c03\u7528\u53ef\u80fd\u4f1a\u4fee\u6539\u5168\u5c40\u53d8\u91cf\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u5728\u9047\u5230call\u6307\u4ee4\u65f6\uff0c\u9700\u8981\u6e05\u9664\u5f53\u524d\u7684\u5b58\u50a8\u6620\u5c04\uff0c\u786e\u4fdd\u540e\u7eed\u4f18\u5316\u7684\u6b63\u786e\u6027\u3002</li> <li>\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u524d\uff0c\u91cd\u65b0\u63d2\u5165\u6240\u6709\u8bb0\u5f55\u7684store\u6307\u4ee4\uff0c\u4ee5\u7ef4\u62a4\u5168\u5c40\u53d8\u91cf\u7684\u72b6\u6001\u4e00\u81f4\u6027\u3002</li> </ul> <pre><code>private static void optimizeGlobalVar(BasicBlock basicBlock) {\n    HashMap&lt;GlobalVar, Value&gt; gvMap = new HashMap&lt;&gt;();\n    HashMap&lt;GlobalVar, Value&gt; writeMap = new HashMap&lt;&gt;();\n    ArrayList&lt;Instruction&gt; instructions = new ArrayList&lt;&gt;(basicBlock.getInstructions());\n    // \u5982\u679c\u662f\u5168\u5c40\u6570\u7ec4\uff0c\u90a3\u4e48getPointer\u5f97\u5230\u7684\u5e94\u8be5\u662fgepInst\n    // \u56e0\u6b64\u4ee5\u4e0b\u7684\u64cd\u4f5c\u9488\u5bf9\u7684\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u975e\u5168\u5c40\u6570\u7ec4\n    for (Instruction instruction : instructions) {\n        if (instruction instanceof StoreInst storeInst) {\n            if (!(storeInst.getPointer() instanceof GlobalVar globalVar)) {\n                continue;\n            }\n            gvMap.put(globalVar, storeInst.getStoredValue());\n            writeMap.put(globalVar, storeInst.getStoredValue());\n            storeInst.removeOperands();\n            basicBlock.getInstructions().remove(instruction);\n        } else if (instruction instanceof LoadInst loadInst) {\n            if (!(loadInst.getPointer() instanceof GlobalVar globalVar)) {\n                continue;\n            }\n            if (gvMap.containsKey(globalVar)) {\n                loadInst.replaceByNewValue(gvMap.get(globalVar));\n                loadInst.removeOperands();\n                basicBlock.getInstructions().remove(instruction);\n            } else {\n                gvMap.put(globalVar, loadInst);\n            }\n        } else if (instruction instanceof CallInst callInst) {\n            gvMap.clear();\n            for (Map.Entry&lt;GlobalVar, Value&gt; entry : writeMap.entrySet()) {\n                StoreInst storeInst = new StoreInst(entry.getKey(), entry.getValue());\n                storeInst.setBasicBlock(basicBlock);\n                basicBlock.getInstructions().add(basicBlock.getInstructions().indexOf(callInst), storeInst);\n            }\n            writeMap.clear();\n        }\n    }\n    for (Map.Entry&lt;GlobalVar, Value&gt; entry : writeMap.entrySet()) {\n        StoreInst storeInst = new StoreInst(entry.getKey(), entry.getValue());\n        storeInst.setBasicBlock(basicBlock);\n        basicBlock.getInstructions().add(basicBlock.getInstructions().size() - 1, storeInst);\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_13","title":"\u57fa\u672c\u5757\u5408\u5e76\u4e0e\u57fa\u672c\u5757\u91cd\u6392","text":"<p>\u5408\u5e76\u57fa\u672c\u5757\u5e76\u5bf9\u57fa\u672c\u5757\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u964d\u4f4e\u8df3\u8f6c\u6307\u4ee4\u7684\u6267\u884c\u6b21\u6570\u3002</p> <p>\u5982\u679c<code>block</code>\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u540e\u7ee7\u57fa\u672c\u5757<code>child</code>\uff0c\u5e76\u4e14<code>child</code>\u7684\u524d\u9a71\u57fa\u672c\u5757\u6570\u91cf\u4e5f\u662f1\uff08\u5373\u53ea\u6709<code>block</code>\u4e00\u4e2a\u524d\u9a71\uff09\uff0c\u4e14\u672a\u88ab\u5220\u9664\uff0c\u5219\u53ef\u4ee5\u5c1d\u8bd5\u5408\u5e76\u3002\u5408\u5e76\u4e4b\u540e\u9700\u8981\u5bf9\u6d89\u53ca\u5230\u7684br\u8bed\u53e5\u4e0ephi\u7ed3\u70b9\u8fdb\u884c\u4fee\u6539\u3002</p> <pre><code>private static boolean merge(Function function) {\n    boolean merged = false;\n    ArrayList&lt;BasicBlock&gt; blocks = new ArrayList&lt;&gt;(function.getBasicBlocks());\n\n    // \u4f7f\u7528\u8fed\u4ee3\u5668\u5b89\u5168\u5730\u5728\u904d\u5386\u65f6\u79fb\u9664\u5757\n    Iterator&lt;BasicBlock&gt; it = blocks.iterator();\n    while (it.hasNext()) {\n        BasicBlock block = it.next();\n        if (block.isDeleted()) {\n            continue;\n        }\n        if (block.getNextBlocks().size() == 1) {\n            BasicBlock child = block.getNextBlocks().get(0);\n            if (child.getPrevBlocks().size() == 1 &amp;&amp; !child.isDeleted()) {\n                // \u5408\u5e76\u5757\u548c\u5b50\u5757\n                performMerge(block, child);\n                merged = true;\n            }\n        }\n    }\n\n    // \u5982\u679c\u8fdb\u884c\u4e86\u5408\u5e76\uff0c\u66f4\u65b0\u51fd\u6570\u7684\u57fa\u672c\u5757\u5217\u8868\n    if (merged) {\n        // \u8fc7\u6ee4\u6389\u5df2\u5220\u9664\u7684\u5757\n        ArrayList&lt;BasicBlock&gt; updatedBlocks = new ArrayList&lt;&gt;();\n        for (BasicBlock block : blocks) {\n            if (!block.isDeleted()) {\n                updatedBlocks.add(block);\n            }\n        }\n        function.setBasicBlocks(updatedBlocks);\n    }\n\n    return merged;\n}\n\nprivate static void performMerge(BasicBlock parent, BasicBlock child) {\n    // \u4ece\u7236\u5757\u4e2d\u79fb\u9664\u8df3\u8f6c\u6307\u4ee4\n    Instruction jumpInstr = parent.getLastInstruction();\n    jumpInstr.removeOperands();\n    parent.getInstructions().remove(jumpInstr);\n\n    // \u5c06\u5b50\u5757\u4e2d\u7684\u6240\u6709\u6307\u4ee4\u79fb\u52a8\u5230\u7236\u5757\n    Iterator&lt;Instruction&gt; it = child.getInstructions().iterator();\n    while (it.hasNext()) {\n        Instruction instr = it.next();\n        if (instr instanceof PhiInst phiInst) {\n            // \u66f4\u65b0 phi \u6307\u4ee4\u4ee5\u4f7f\u7528\u6765\u81ea\u7236\u5757\u7684\u64cd\u4f5c\u6570\n            int index = phiInst.getBlocks().indexOf(parent);\n            if (index != -1) {\n                Value newValue = phiInst.getOperands().get(index);\n                phiInst.replaceByNewValue(newValue);\n            }\n            phiInst.removeOperands();\n        } else {\n            parent.getInstructions().add(instr);\n            instr.setBasicBlock(parent);\n        }\n        it.remove();\n    }\n\n    // \u5c06\u5b50\u5757\u7684\u5f15\u7528\u91cd\u5b9a\u5411\u5230\u7236\u5757\uff0c\u5e76\u6807\u8bb0\u5b50\u5757\u4e3a\u5df2\u5220\u9664\n    child.replaceByNewValue(parent);\n    child.setDeleted(true);\n}\n</code></pre> <p>\u5bf9\u5df2\u6709\u7684\u57fa\u672c\u5757\uff0c\u53ef\u4ee5\u91c7\u7528dfs\u7684\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5f97\u63a7\u5236\u6d41\u8def\u5f84\u4e0a\u7684\u57fa\u672c\u5757\u5c3d\u53ef\u80fd\u8fde\u7eed\u6392\u5217\uff0c\u63d0\u5347\u6307\u4ee4\u7f13\u5b58\u7684\u547d\u4e2d\u7387\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002</p> <pre><code>private static ArrayList&lt;BasicBlock&gt; reorderBasicBlocksDFS(Function function) {\n    List&lt;BasicBlock&gt; blocks = function.getBasicBlocks();\n    ArrayList&lt;BasicBlock&gt; orderedBlocks = new ArrayList&lt;&gt;();\n    Set&lt;BasicBlock&gt; visited = new HashSet&lt;&gt;();\n    Deque&lt;BasicBlock&gt; stack = new ArrayDeque&lt;&gt;();\n\n    if (!blocks.isEmpty()) {\n        stack.push(blocks.get(0));\n    }\n\n    while (!stack.isEmpty()) {\n        BasicBlock current = stack.pop();\n        if (!visited.contains(current)) {\n            visited.add(current);\n            orderedBlocks.add(current);\n            // \u9006\u5e8f\u538b\u6808\u4ee5\u4fdd\u6301\u987a\u5e8f\n            List&lt;BasicBlock&gt; successors = getSuccessors(current);\n            Collections.reverse(successors);\n            for (BasicBlock succ : successors) {\n                if (!visited.contains(succ)) {\n                    stack.push(succ);\n                }\n            }\n        }\n    }\n\n    // \u5c06\u672a\u5728DFS\u4e2d\u8bbf\u95ee\u5230\u7684\u5757\u8ffd\u52a0\u5230\u672b\u5c3e\n    for (BasicBlock block : blocks) {\n        if (!visited.contains(block)) {\n            orderedBlocks.add(block);\n        }\n    }\n\n    return orderedBlocks;\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_14","title":"\u8f93\u51fa\u4f18\u5316","text":"<p>\u5bf9\u4e8e\u8fde\u7eed\u8f93\u51fa\u7684\u5e38\u6570/\u5e38\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u62fc\u63a5\u6574\u5408\u8f93\u51fa\u3002</p> <pre><code>private static void optimize(BasicBlock block) {\n    boolean changed = true;\n    while (changed) {\n        changed = false;\n        ArrayList&lt;Instruction&gt; instructions = new ArrayList&lt;&gt;(block.getInstructions());\n        for (int i = 0; i &lt; instructions.size(); i++) {\n            Instruction instruction = instructions.get(i);\n            if (!(instruction instanceof OutputInst outputInst)) {\n                continue;\n            }\n            if (!outputInst.constContent()) {\n                continue;\n            }\n            ArrayList&lt;Instruction&gt; buffer = new ArrayList&lt;&gt;();\n            buffer.add((Instruction) outputInst);\n            int j = i + 1;\n            // \u8fde\u7eed\u83b7\u53d6\u8f93\u51fa\u8bed\u53e5\n            for (; j &lt; instructions.size(); j++) {\n                if (instructions.get(j) instanceof OutputInst temp &amp;&amp; temp.constContent()) {\n                    buffer.add((Instruction) temp);\n                } else {\n                    break;\n                }\n            }\n            if (buffer.size() &lt; 2) {\n                continue;\n            }\n            StringBuilder sb = new StringBuilder();\n            for (Instruction output : buffer) {\n                sb.append(((OutputInst) output).getConstContent());\n            }\n            String output = sb.toString();\n            output = output.replace(\"\\\\0A\", \"\\n\");\n            ConstString constString = new ConstString(IRData.getConstStringName(), output);\n            PutstrInst putstr = new PutstrInst(constString);\n            block.getInstructions().set(i, putstr);\n            block.getInstructions().removeAll(buffer);\n            changed = true;\n            break;\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_15","title":"\u540e\u7aef\u4f18\u5316","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#phi","title":"\u6d88\u9664phi\u7ed3\u70b9","text":"<p>\u6309\u7167\u6559\u7a0b\u7684\u7b97\u6cd5\u53ef\u4ee5\u5bf9\u63d2\u5165\u7684phi\u7ed3\u70b9\u8fdb\u884c\u5904\u7406\uff0c\u8f6c\u5316\u4e3a\u4e00\u7ec4move\u8bed\u53e5\u3002</p> <p>\u68c0\u6d4b\u79fb\u52a8\u6307\u4ee4\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u907f\u514d\u56e0\u8986\u76d6\u5bfc\u81f4\u7684\u9519\u8bef\uff0c\u9700\u8981\u5f15\u5165\u4e34\u65f6\u53d8\u91cf\u4ee5\u5b89\u5168\u5730\u91cd\u65b0\u6392\u5e8f\u79fb\u52a8\u6307\u4ee4\uff0c\u786e\u4fdd\u539f\u59cb\u503c\u5728\u8fc7\u7a0b\u4e2d\u88ab\u6b63\u786e\u4fdd\u7559\u3002\u5982\u679c\u524d\u9a71\u5757\u6709\u591a\u4e2a\u540e\u7ee7\u5757\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u57fa\u672c\u5757\u6765\u4fdd\u5b58\u79fb\u52a8\u6307\u4ee4\uff0c\u5e76\u5728\u65b0\u5757\u4e2d\u6dfb\u52a0\u8df3\u8f6c\u6307\u4ee4\u5230\u5f53\u524d\u5757\u3002\u8fd9\u907f\u514d\u4e86\u5e72\u6270\u5176\u4ed6\u540e\u7ee7\u5757\u7684\u63a7\u5236\u6d41\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_16","title":"\u5bc4\u5b58\u5668\u5206\u914d","text":"<p>\u5bc4\u5b58\u5668\u5206\u914d\u91c7\u7528\u542f\u53d1\u5f0f\u56fe\u7740\u8272\u7b97\u6cd5\u3002</p> <ol> <li> <p>\u8ba1\u7b97<code>def</code>\u548c<code>use</code>\u96c6\u5408\uff0c\u901a\u8fc7$in[B] = use[B] \\cup (out[B] - def[B])\uff0c  out[B] = \\cup_{B\u7684\u540e\u7ee7\u5757P}in[P]$\u8ba1\u7b97<code>in</code>\u548c<code>out</code>\u96c6\u5408</p> </li> <li> <p>\u6784\u5efa\u5e72\u6d89\u56fe\uff0c\u904d\u5386\u6bcf\u4e2a\u57fa\u672c\u5757\uff0c\u521d\u59cb\u5316\u6d3b\u8dc3\u53d8\u91cf\u96c6\u5408\u4e3a\u8be5\u5757\u7684OUT\u96c6\u5408\u3002</p> </li> </ol> <p>\u9006\u5e8f\u904d\u5386\u6307\u4ee4\uff0c\u66f4\u65b0\u6d3b\u8dc3\u53d8\u91cf\u96c6\u5408\uff1a</p> <ul> <li>\u5982\u679c\u6307\u4ee4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5219\u4ece\u6d3b\u8dc3\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u53d8\u91cf\uff0c\u5e76\u4e0e\u5f53\u524d\u6d3b\u8dc3\u53d8\u91cf\u5efa\u7acb\u5e72\u6d89\u5173\u7cfb\u3002</li> <li> <p>\u5c06\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u6dfb\u52a0\u5230\u6d3b\u8dc3\u53d8\u91cf\u96c6\u5408\u3002</p> </li> <li> <p>\u6309\u7167\u6559\u7a0b\u7684\u7b97\u6cd5\u5b9e\u73b0\u7740\u8272\u548c\u6ea2\u51fa\u3002</p> </li> </ul> <p>\u5728\u76ee\u6807\u4ee3\u7801\u751f\u6210\u622a\u65ad\u5df2\u7ecf\u4e3a\u53d8\u91cf\u5728\u6808\u4e0a\u9884\u7559\u4e86\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u6ea2\u51fa\u7684\u53d8\u91cf\uff0c\u5c06\u503c\u5b58\u5728\u6808\u4e0a\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_17","title":"\u8ba1\u7b97\u5f3a\u5ea6\u524a\u5f31","text":"<p>\u91c7\u7528\u6559\u7a0b\u63d0\u5230\u7684\u65b9\u6cd5\u5bf9\u4e58\u9664\u7b49\u8ba1\u7b97\u8fdb\u884c\u989d\u5916\u5904\u7406\uff0c\u4ece\u800c\u964d\u4f4e\u5468\u671f\u6570\u3002</p> <p>\u5bf9\u4e8e<code>\u53d8\u91cf * \u5e38\u6570</code>\u7c7b\u578b\u7684\u4e58\u6cd5\u8fd0\u7b97\uff0c\u53ef\u4ee5\u6839\u636e\u5e38\u6570\u7684\u503c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u5e38\u6570\u662f0\u30011\u3001-1\uff0c\u6bd4\u8f83\u7b80\u5355</li> <li>\u5e38\u6570\u662f\u8d1f\u6570\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u6b63\u6570\uff0c\u6700\u540e\u4f7f\u7528\u53d6\u53cd</li> <li>\u5e38\u6570\uff08\u7edd\u5bf9\u503c\uff09\u5927\u5c0f\u57282-9\u4e4b\u95f4\uff0c\u901a\u8fc7\u5df2\u7ecf\u6784\u9020\u597d\u7684\u65b9\u6cd5\u8fdb\u884c\u7ffb\u8bd1</li> <li>\u5e38\u6570\uff08\u7edd\u5bf9\u503c\uff09\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d1\u7684\u4e2a\u6570\u4e0d\u591a\u4e8e2\uff0c\u53ef\u4ee5\u901a\u8fc7\u79fb\u4f4d\u7684\u7ec4\u5408\u6765\u5b9e\u73b0</li> <li>\u9664\u6b64\u4e4b\u5916\u7684\u60c5\u51b5\u76f4\u63a5\u4f7f\u7528\u4e58\u6cd5\u6307\u4ee4</li> </ul> <pre><code>private void makeVarMulConst(Register varReg, int constInt, Register targetReg) {\n    if (constInt == 0) {\n        new LiAsm(targetReg, 0);\n        return;\n    }\n    if (constInt == 1) {\n        new MoveAsm(targetReg, varReg);\n        return;\n    }\n    if (constInt == -1) {\n        new CalcAsm(targetReg, AsmOp.SUBU, Register.ZERO, varReg);\n        return;\n    }\n    boolean isNegative = constInt &lt; 0;\n    int absConstInt = Math.abs(constInt);\n    switch (absConstInt) {\n        case 2:\n            new CalcAsm(targetReg, AsmOp.ADDU, varReg, varReg);\n            break;\n        case 3:\n            new CalcAsm(Register.V0, AsmOp.ADDU, varReg, varReg);\n            new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, varReg);\n            break;\n        case 4:\n            new CalcAsm(targetReg, AsmOp.SLL, varReg, 2);\n            break;\n        case 5:\n            new CalcAsm(Register.V0, AsmOp.SLL, varReg, 2);\n            new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, varReg);\n            break;\n        case 6:\n            new CalcAsm(Register.V0, AsmOp.SLL, varReg, 2);\n            new CalcAsm(Register.V1, AsmOp.ADDU, varReg, varReg);\n            new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, Register.V1);\n            break;\n        case 7:\n            new CalcAsm(Register.V0, AsmOp.SLL, varReg, 3);\n            new CalcAsm(targetReg, AsmOp.SUBU, Register.V0, varReg);\n            break;\n        case 8:\n            new CalcAsm(targetReg, AsmOp.SLL, varReg, 3);\n            break;\n        case 9:\n            new CalcAsm(Register.V0, AsmOp.SLL, varReg, 3);\n            new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, varReg);\n            break;\n        default:\n            int bitCnt = Integer.bitCount(absConstInt);\n            if (bitCnt &lt;= 2) {\n                // \u4f7f\u7528\u539f\u6709\u7684\u79fb\u4f4d\u548c\u52a0\u6cd5\u903b\u8f91\n                int[] shifts = new int[2];\n                int index = 0;\n                for (int i = 0; i &lt; 32; i++) {\n                    if ((absConstInt &amp; (1 &lt;&lt; i)) != 0) {\n                        shifts[index++] = i;\n                        if (index == 2) break;\n                    }\n                }\n\n                if (bitCnt == 1) {\n                    new CalcAsm(targetReg, AsmOp.SLL, varReg, shifts[0]);\n                } else {\n                    new CalcAsm(Register.V0, AsmOp.SLL, varReg, shifts[0]);\n                    new CalcAsm(Register.V1, AsmOp.SLL, varReg, shifts[1]);\n                    new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, Register.V1);\n                }\n            } else {\n                // \u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u4f7f\u7528\u4e58\u6cd5\n                new LiAsm(Register.V0, absConstInt);\n                new CalcAsm(targetReg, AsmOp.MUL, varReg, Register.V0);\n            }\n    }\n    if (isNegative) {\n        new CalcAsm(targetReg, AsmOp.SUBU, Register.ZERO, targetReg);\n    }\n}\n</code></pre> <p>\u5bf9\u4e8e\u9664\u6cd5\uff0c\u53ef\u4ee5\u53c2\u8003\u8bba\u6587\u4e2d\u7684\u5b9e\u73b0\uff1a</p> <p></p> <p>\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>public class OptimizedDivision {\n    private static long calculateMagicNumber(int divisor) {\n        long nc = ((1L &lt;&lt; 31) - ((1L &lt;&lt; 31) % divisor) - 1) / divisor;\n        long t = 32;\n        while ((1L &lt;&lt; t) &lt;= nc * (divisor - (1L &lt;&lt; t) % divisor)) {\n            t++;\n        }\n        return ((1L &lt;&lt; t) + divisor - (1L &lt;&lt; t) % divisor) / divisor;\n    }\n\n    public static void makeVarDivConst(Register varReg, int constInt, Register targetReg) {\n        int abs = Math.abs(constInt);\n        if (abs == 1) {\n            if (constInt &lt; 0) {\n                new CalcAsm(targetReg, AsmOp.SUBU, Register.ZERO, varReg);\n            } else {\n                new MoveAsm(targetReg, varReg);\n            }\n            return;\n        }\n\n        if ((abs &amp; (abs - 1)) == 0) {\n            // Power of 2 case\n            int shift = 31 - Integer.numberOfLeadingZeros(abs);\n            Register dividend = getDividend(varReg, abs);\n            new CalcAsm(targetReg, AsmOp.SRA, dividend, shift);\n        } else if (abs &lt; 32) {\n            // Use pre-calculated magic numbers for small divisors\n            long m = calculateMagicNumber(abs);\n            int n = (int) ((m &lt;&lt; 32) &gt;&gt;&gt; 32);\n            int shift = (int) (m &gt;&gt;&gt; 32);\n            new LiAsm(Register.V0, n);\n            new MulDivAsm(varReg, AsmOp.MULT, Register.V0);\n            new MDRegAsm(AsmOp.MFHI, Register.V1);\n            new CalcAsm(Register.V0, AsmOp.SRA, Register.V1, shift);\n            new CalcAsm(Register.A0, AsmOp.SRL, varReg, 31);\n            new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, Register.A0);\n        } else {\n            // Original logic for larger divisors\n            long t = 32;\n            long nc = ((long) 1 &lt;&lt; 31) - (((long) 1 &lt;&lt; 31) % abs) - 1;\n            while (((long) 1 &lt;&lt; t) &lt;= nc * (abs - ((long) 1 &lt;&lt; t) % abs)) {\n                t++;\n            }\n            long m = ((((long) 1 &lt;&lt; t) + (long) abs - ((long) 1 &lt;&lt; t) % abs) / (long) abs);\n            int n = (int) ((m &lt;&lt; 32) &gt;&gt;&gt; 32);\n            int shift = (int) (t - 32);\n            new LiAsm(Register.V0, n);\n            if (m &gt;= 0x80000000L) {\n                new MDRegAsm(AsmOp.MTHI, varReg);\n                new MulDivAsm(varReg, AsmOp.MADD, Register.V0);\n            } else {\n                new MulDivAsm(varReg, AsmOp.MULT, Register.V0);\n            }\n            new MDRegAsm(AsmOp.MFHI, Register.V1);\n            new CalcAsm(Register.V0, AsmOp.SRA, Register.V1, shift);\n            new CalcAsm(Register.A0, AsmOp.SRL, varReg, 31);\n            new CalcAsm(targetReg, AsmOp.ADDU, Register.V0, Register.A0);\n        }\n        if (constInt &lt; 0) {\n            new CalcAsm(targetReg, AsmOp.SUBU, Register.ZERO, targetReg);\n        }\n    }\n\n    private static Register getDividend(Register oldDividend, int abs) {\n        int l = 31 - Integer.numberOfLeadingZeros(abs);\n        new CalcAsm(Register.V0, AsmOp.SRA, oldDividend, 31);\n        if (l &gt; 0) {\n            new CalcAsm(Register.V0, AsmOp.SRL, Register.V0, 32 - l);\n        }\n        new CalcAsm(Register.V1, AsmOp.ADDU, oldDividend, Register.V0);\n        return Register.V1;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E4%BC%98%E5%8C%96%E6%96%87%E6%A1%A3.html#_18","title":"\u7aa5\u5b54\u4f18\u5316","text":"<p>\u9488\u5bf9\u4e00\u5c0f\u6bb5mips\u4ee3\u7801\u4e5f\u53ef\u8fdb\u884c\u4f18\u5316\uff0c\u4ea6\u80fd\u53d6\u5f97\u4e0d\u9519\u7684\u6548\u679c\u3002</p> <p><code>PlatoCompiler</code>\u8bbe\u8ba1\u7684\u7aa5\u5b54\u4f18\u5316\u79cd\u7c7b\u5982\u4e0b\uff1a</p> <ul> <li>\u76f8\u90bb\u7684jump\u548clabel</li> </ul> <pre><code>j label1 # \u53ef\u5220\u53bb\nlabel1:\n</code></pre> <ul> <li> <p>\u52a0\u6cd5\u8f6c\u6362\uff1a<code>addiu $t1, $t2, 0</code>\u53ef\u53d8\u4e3a<code>move $t1, $t2</code></p> </li> <li> <p>\u5220\u9664\u591a\u4f59\u7684move</p> </li> </ul> <pre><code>move $t1, $t1 # \u53ef\u5220\u53bb\n\nmove $t1, $t2 # \u53ef\u5220\u53bb\nmove $t1, $t3 \n\nmove $t1, $t2\nmove $t2, $t1 # \u53ef\u5220\u53bb\n</code></pre> <ul> <li>\u8bbf\u5b58\u4f18\u5316</li> </ul> <pre><code>sw $t1, 0($t0)\nlw $t2, 0($t0)\n\nmove $t2, $t1 # \u4e0e\u4ee5\u4e0a\u4ee3\u7801\u7b49\u4ef7\n</code></pre> <ul> <li>\u6761\u4ef6\u8df3\u8f6c\u4f18\u5316</li> </ul> <pre><code>beq $t4, $zero, label1\nj label2\nlabel1:\n\n# \u53ef\u8f6c\u5316\u4e3a\nbne $t4, $zero, label2\nlabel1:\n</code></pre> <ul> <li>\u52a0\u5f3a\u65e0\u6761\u4ef6\u8df3\u8f6c\u4f18\u5316\uff1a\u7ecf\u8fc7\u4ee5\u4e0a\u4f18\u5316\u4e4b\u540e\u53ef\u80fd\u6709\u7a7a\u5757\uff0c\u6b64\u65f6\u5220\u53bb\u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\uff0cpc\u4e5f\u80fd\u81ea\u7136\u79fb\u52a8\u5230\u76ee\u6807\u6807\u7b7e</li> </ul> <pre><code>j main_b7 # \u53ef\u5220\u53bb\n\nmain_b4:\n# move %37 -&gt; %3\n# br label %7\n\nmain_b7:\n</code></pre> <ul> <li>\u7acb\u5373\u6570\u4f18\u5316\uff1a\u53ef\u80fd\u7528\u4e8e\u8fde\u7eed\u8f93\u51fa</li> </ul> <pre><code>li $t1, 5 # \u53ef\u5220\u53bb\nli $t1, 10\nmove $t2, $t1\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93%E6%84%9F%E6%83%B3.html","title":"\u7f16\u8bd1\u5b9e\u9a8c\u603b\u7ed3\u611f\u60f3","text":"<p>\u8fd9\u4e2a\u5b66\u671f\u5306\u5306\u5fd9\u5fd9\uff0c\u7ec8\u4e8e\u628a\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u7f16\u8bd1\u5668<code>PlatoCompiler</code>\u5b8c\u6210\u4e86\u3002</p> <p>\u5148\u8d34\u4e00\u4e2a\u56fe\u7eaa\u5ff5\u4e00\u4e0b\u81ea\u5df1\u7684\u6210\u679c\uff1a</p> <p></p> <p>\u5148\u524d\u7684\u5f00\u53d1\u597d\u50cf\u90fd\u6ca1\u6709\u5230\u8fbe\u8fc7\u5982\u6b64\u9ad8\u7684\u4ee3\u7801\u91cf\uff0c\u7f16\u8bd1\u5b9e\u9a8c\u53ef\u4ee5\u8bf4\u662f\u8ba9\u6211\u7b2c\u4e00\u6b21\u4f53\u4f1a\u5230\u9ad8\u5f3a\u5ea6\u5f00\u53d1\u7684\u4e00\u6b21\u673a\u4f1a\uff0c\u6295\u5165\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u4e5f\u53ef\u4ee5\u8bf4\u662f\u5927\u91cf\u4e86\u3002\u7f16\u8bd1\u5b9e\u9a8c\u53ef\u4ee5\u8bf4\u662f\u7b2c\u4e00\u6b21\u771f\u6b63\u5b9e\u8df5\u6211\u7684\u201c\u7f16\u7a0b\u7406\u5ff5\u201d\u7684\u673a\u4f1a\uff0c\u5728\u4e00\u4e2a\u5b66\u671f\u7684\u8fed\u4ee3\u5f00\u53d1\u4e2d\uff0c\u6211\u5145\u5206\u8ba4\u8bc6\u4e86\u4e4b\u524d\u7684\u4e00\u4e9b\u201c\u7406\u5ff5\u201d\u662f\u9519\u8bef\u7684\uff0c\u76f8\u4fe1\u901a\u8fc7\u7f16\u8bd1\u5b9e\u9a8c\u7ed9\u6211\u5e26\u6765\u7684\u6559\u8bad\uff0c\u6211\u80fd\u5728\u4e4b\u540e\u7684\u5f00\u53d1\u4e2d\u5199\u51fa\u66f4\u4f18\u7f8e\u7684\u4ee3\u7801\u3002</p> <p>\u4ece\u5934\u770b\u4e0b\u6765\uff0c\u6211\u89c9\u5f97\u8981\u60f3\u5b8c\u6210\u597d\u7f16\u8bd1\u5b9e\u9a8c\uff0c\u5728\u7406\u8bba\u624e\u5b9e\u7684\u524d\u63d0\u4e0b\uff0c\u4e00\u5b9a\u8981\u638c\u63e1\u597d\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u5728\u524d\u671f\u7684\u8bbe\u8ba1\u4e0a\u591a\u4e0b\u4e00\u4e9b\u529f\u592b\uff0c\u8981\u4e0d\u7136\u5c31\u4f1a\u50cf\u6211\u5b8c\u6210\u524d\u9762\u51e0\u6b21\u4f5c\u4e1a\u7684\u8fc7\u7a0b\u4e00\u6837\uff0c\u4e4b\u524d\u5199\u7684\u4ee3\u7801\u6ca1\u6709\u4e3a\u540e\u7eed\u7684\u4f5c\u4e1a\u7559\u4e0b\u63a5\u53e3\uff0c\u5bfc\u81f4\u6bcf\u6b21\u8fed\u4ee3\u5f00\u53d1\u7684\u8fc7\u7a0b\u90fd\u5341\u5206\u7684\u75db\u82e6\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u770b\uff0c\u7f16\u8bd1\u5b9e\u9a8c\u9664\u4e86\u8ba9\u6211\u52a0\u6df1\u5bf9\u7406\u8bba\u77e5\u8bc6\u7684\u7406\u89e3\u4e4b\u5916\uff0c\u5e26\u7ed9\u6211\u7684\u66f4\u591a\u662f\u8f6f\u4ef6\u5f00\u53d1\u7684\u4e00\u4e9b\u7ecf\u9a8c\uff0c\u90a3\u5c31\u662f\u5728\u8bbe\u8ba1\u9636\u6bb5\u591a\u82b1\u529f\u592b\uff0c\u5426\u5219\u5934\u8111\u53d1\u70ed\u5c31\u5f00\u59cb\u201c\u52a8\u6001\u5f00\u53d1\u201d\uff0c\u5199\u4ee3\u7801\u4e00\u65f6\u723d\u3001\u4e00\u76f4\u91cd\u6784\u4e00\u76f4\u723d\u3002</p> <p>\u603b\u7ed3\u4e0b\u6765\uff0c\u7f16\u8bd1\u5b9e\u9a8c\u7ed9\u6211\u5e26\u6765\u7684\u6536\u83b7\u6709\uff1a</p> <ul> <li> <p>\u5bf9\u7f16\u8bd1\u7406\u8bba\u7684\u6df1\u523b\u8ba4\u8bc6</p> </li> <li> <p>\u9762\u5411\u5bf9\u8c61\u7b49\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5</p> </li> <li> <p>Java\u8bed\u6cd5\u7684\u8fdb\u4e00\u6b65\u4e86\u89e3</p> </li> </ul> <p>\u4e4b\u540e\u6709\u7a7a\u62ffc++\u518d\u8bd5\u4e00\u6b21</p> <ul> <li> <p>\u5408\u7406\u7684\u5f00\u53d1\u6d41\u7a0b\uff0c\u4ece\u8bbe\u8ba1\u5230\u7f16\u7801\u5230\u5355\u5143\u6d4b\u8bd5\uff0c\u518d\u5230\u534f\u540c\u6d4b\u8bd5</p> </li> <li> <p>\u7f16\u5199\u6587\u6863\u548c\u6ce8\u91ca\u7684\u4e60\u60ef</p> </li> </ul> <p>\u4ece\u5927\u4e8c\u7684\u8ba1\u7ec4\u3001\u64cd\u4f5c\u7cfb\u7edf\u5230\u73b0\u5728\u7684\u7f16\u8bd1\uff0c\u524d\u4e24\u4e2a\u56e0\u4e3a\u7406\u8bba\u6210\u719f\u6216\u8005\u662f\u8bfe\u7a0b\u8bbe\u8ba1\uff0c\u67b6\u6784\u663e\u5f97\u56fa\u5316\uff0c\u597d\u50cf\u6ca1\u6709\u592a\u591a\u81ea\u7531\u53d1\u6325\u7684\u7a7a\u95f4\u3002\u7f16\u8bd1\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u67b6\u6784\uff0c\u7406\u8bba\u4e0e\u5b9e\u9a8c\u7684\u7d27\u5bc6\u7ed3\u5408\u4f7f\u5f97\u6211\u5728\u4e0d\u8ff7\u5931\u65b9\u5411\u7684\u540c\u65f6\uff0c\u6709\u66f4\u591a\u7684\u7a7a\u95f4\u53ef\u4ee5\u53d1\u6325\u4e2a\u4eba\u7684\u7406\u89e3\u3002</p> <p>\u7f16\u8bd1\u5b9e\u9a8c\u53ef\u4ee5\u8bf4\u662f\u5b8c\u6210\u4e86\u6211\u4e00\u76f4\u4ee5\u6765\u7684\u7591\u95ee\uff1a</p> <p>\u201c\u65e2\u7136CPU\u80fd\u7406\u89e3\u673a\u5668\u7801\uff0c\u90a3\u8ba1\u7b97\u673a\u662f\u600e\u4e48\u7406\u89e3\u4eba\u7f16\u5199\u7684\u9ad8\u7ea7\u8bed\u8a00\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u673a\u5668\u7801\u7684\u5462\uff1f\u201d</p> <p>\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u6734\u7d20\u7684\u7591\u95ee\uff0c\u6211\u4ed8\u51fa\u4e86\u5f88\u591a\u7684\u52aa\u529b\uff0c\u6700\u7ec8\u5b8c\u6210\u4e86\u4e00\u4e2a<code>\u771f\u6b63\u5c5e\u4e8e\u81ea\u5df1\u7684</code>\u7f16\u8bd1\u5668\u3002\u4e4b\u524d\u53ea\u4f1a\u51fa\u73b0\u5728\u547d\u4ee4\u884c\u91cc\u7684<code>gcc</code>\u3001<code>clang</code>\uff0c\u597d\u50cf\u7528\u4e00\u79cd\u66f4\u4e3a\u4eb2\u8fd1\u7684\u65b9\u5f0f\u9760\u8fd1\u4e86\u3002\u867d\u7136\u6211\u7684\u7f16\u8bd1\u5668\u65e0\u6cd5\u4e0e<code>gcc</code>\u8fd9\u6837\u7684\u5e9e\u7136\u5927\u7269\u76f8\u6bd4\uff0c\u4f46\u662f\u4e5f\u80fd\u7b97\u662f\u201c\u7ba1\u4e2d\u7aa5\u8c79\u201d\uff0c\u5bf9\u5f00\u53d1\u51fa\u5de5\u4e1a\u7ea7\u7f16\u8bd1\u5668\u7684\u524d\u8f88\u4eec\u66f4\u591a\u4e86\u4e00\u5c42\u656c\u754f\u3002\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u770b\u4f3c\u5e55\u540e\u7684\u82f1\u96c4\uff0c\u662f\u8fde\u63a5\u9ad8\u7ea7\u8bed\u8a00\u4e0e\u673a\u5668\u8bed\u8a00\u7684\u6865\u6881\uff0c\u5b83\u7684\u590d\u6742\u7a0b\u5ea6\u548c\u91cd\u8981\u6027\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8ba9\u6211\u6709\u4e86\u66f4\u6df1\u7684\u4f53\u4f1a\u3002</p> <p>\u5982\u679c\u8981\u6211\u5bf9\u8bfe\u7a0b\u63d0\u51fa\u4e00\u4e9b\u5efa\u8bae\u7684\u8bdd\uff1a</p> <ul> <li>\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u5bf9llvm ir\u5728\u5b9e\u9a8c\u4e2d\u7684\u4f7f\u7528\u7684\u76f8\u5173\u4ecb\u7ecd\uff0c\u6bd4\u8d77\u82b1\u65f6\u95f4\u5bfb\u627e\u8d44\u6599\uff0c\u6216\u8bb8\u7ed9\u51fa\u4e00\u4efd\u6574\u7406\u80fd\u591f\u964d\u4f4e\u4fe1\u606f\u5dee\uff0c\u8ba9\u540c\u5b66\u4eec\u66f4\u52a0\u4e13\u6ce8\u4e8e\u7f16\u8bd1\u5668\u7684\u5f00\u53d1</li> <li><code>tolangc</code>\u7684\u786e\u662f\u4e2a\u5f88\u597d\u7684\u793a\u8303\uff0c\u4f46\u662f\u53d7\u672c\u4eba\u5b66\u8bc6\u6240\u9650\uff0c<code>c++</code>\u5f00\u53d1\u7ecf\u9a8c\u51e0\u4e4e\u4e3a0\uff0c\u9605\u8bfb<code>tolangc</code>\u611f\u89c9\u66f4\u50cf\u662f\u4e2a\u4eba\u5728\u5c55\u793a\u81ea\u5df1\u7684<code>c++</code>\u8bed\u8a00\u6280\u5de7\uff0c\u6ca1\u6cd5\u4e00\u4e0b\u5b50\u6293\u4f4f\u5bf9\u7f16\u8bd1\u5668\u7ed3\u6784\u7684\u4e86\u89e3</li> <li>\u6709\u65f6\u5019\u52a9\u6559\u5728\u8ba8\u8bba\u533a\u56de\u7b54\u7684\u4e0d\u591f\u53ca\u65f6\uff08\uff1f</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html","title":"\u7f16\u8bd1\u5b9e\u9a8c\u8bbe\u8ba1\u6587\u6863","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_2","title":"\u53c2\u8003\u7f16\u8bd1\u5668","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_3","title":"\u603b\u4f53\u7ed3\u6784","text":"<p>\u9009\u62e9Pascal-S\u7f16\u8bd1\u5668\u8fdb\u884c\u53c2\u8003\u3002Pascal-S Compiler\u662f\u4e00\u79cd\u7b80\u5316\u7684Pascal\u7f16\u8bd1\u5668\uff0c\u6309\u7167\u529f\u80fd\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u6a21\u5757\uff1a</p> <ul> <li>\u8bcd\u6cd5\u5206\u6790\uff1a\u4ece\u6e90\u4ee3\u7801\u4e2d\u8bfb\u53d6\u5b57\u7b26\uff0c\u5e76\u5c06\u5176\u5206\u89e3\u4e3a\u5355\u8bcd\u7b26\u53f7\uff08tokens\uff09\u3002</li> <li>\u8bed\u6cd5\u5206\u6790\uff1a\u57fa\u4e8e\u9012\u5f52\u4e0b\u964d\u7684\u65b9\u6cd5\uff0c\u9a8c\u8bc1\u4ee3\u7801\u7684\u7ed3\u6784\u662f\u5426\u7b26\u5408Pascal\u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\u3002</li> <li>\u8bed\u4e49\u5206\u6790\uff1a\u68c0\u67e5\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u3001\u7c7b\u578b\u3001\u8868\u8fbe\u5f0f\u7b49\u662f\u5426\u5177\u6709\u6b63\u786e\u7684\u542b\u4e49\u3002</li> <li>\u4ee3\u7801\u751f\u6210\uff1a\u751f\u6210\u5bf9\u5e94\u7684P-code\u6307\u4ee4\u5e8f\u5217\u3002</li> <li>\u7b26\u53f7\u8868\u7ba1\u7406\uff1a\u8bb0\u5f55\u7a0b\u5e8f\u4e2d\u6807\u8bc6\u7b26\uff08\u5982\u53d8\u91cf\u3001\u5e38\u91cf\u3001\u51fd\u6570\u7b49\uff09\u7684\u4fe1\u606f\u3002</li> <li>\u5f02\u5e38\u5904\u7406\uff1a\u5728\u5404\u4e2a\u9636\u6bb5\u63d0\u4f9b\u5f02\u5e38\u68c0\u6d4b\u548c\u5904\u7406\uff0c\u786e\u4fdd\u7528\u6237\u5f97\u5230\u6709\u7528\u7684\u5f02\u5e38\u4fe1\u606f\u3002</li> </ul> <p>\u901a\u8fc7\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u7f16\u8bd1\u5668\u5c06\u6e90\u7a0b\u5e8f\u89e3\u6790\u4e3a\u4e2d\u95f4\u4ee3\u7801\u5f62\u5f0f\uff08P-code\uff09\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_4","title":"\u5b9e\u7528\u5de5\u5177","text":"<p>\u7528\u4e8e\u5904\u7406\u5f02\u5e38\u3001\u8c03\u8bd5\u4fe1\u606f\u548c\u8bbe\u7f6e\u7b26\u53f7\u8868\u7b49\u5185\u5bb9\u3002\u5b83\u4eec\u63d0\u9ad8\u4e86\u7f16\u8bd1\u5668\u7684\u53ef\u6269\u5c55\u6027\u548c\u6613\u7ef4\u62a4\u6027\u3002</p> <ul> <li>errormsg\uff1a\u8f93\u51fa\u5f02\u5e38\u4fe1\u606f\uff0c\u5c06\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u6355\u83b7\u7684\u5f02\u5e38\u9010\u6761\u5217\u51fa\uff0c\u5e76\u63d0\u4f9b\u76f8\u5e94\u7684\u5f02\u5e38\u8bf4\u660e\u3002</li> <li>endskip\uff1a\u51fa\u73b0\u5f02\u5e38\u540e\uff0c\u5982\u679c\u8df3\u8fc7\u4e86\u90e8\u5206\u4ee3\u7801\uff0c\u7528\u4e0b\u5212\u7ebf\u6807\u8bb0\u88ab\u8df3\u8fc7\u7684\u5185\u5bb9\u4ee5\u4fbf\u5b9a\u4f4d\u95ee\u9898\u3002</li> <li>error(n: integer)\uff1a\u63a5\u6536\u5f02\u5e38\u7f16\u53f7<code>n</code>\uff0c\u6253\u5370\u51fa\u9519\u7684\u5177\u4f53\u4f4d\u7f6e\u548c\u5f02\u5e38\u7f16\u53f7\u3002</li> <li>fatal(n: integer)\uff1a\u5f53\u9047\u5230\u81f4\u547d\u5f02\u5e38\uff08\u5982\u7b26\u53f7\u8868\u6216\u6570\u7ec4\u8d85\u51fa\u9650\u5236\uff09\u65f6\uff0c\u6253\u5370\u8868\u683c\u6ea2\u51fa\u7b49\u76f8\u5173\u4fe1\u606f\uff0c\u7ec8\u6b62\u7f16\u8bd1\u8fc7\u7a0b\u3002</li> <li>options\uff1a\u5904\u7406\u7f16\u8bd1\u65f6\u7684\u9009\u9879\u8bbe\u7f6e\uff0c\u5982\u662f\u5426\u5f00\u542f\u7b26\u53f7\u8868\u8f93\u51fa\u3001\u8c03\u8bd5\u6a21\u5f0f\u7b49\u3002</li> <li>switch(var b: boolean)\uff1a\u5904\u7406\u7f16\u8bd1\u65f6\u7684\u53ef\u9009\u9879\u3002</li> <li>setup\uff1a\u521d\u59cb\u5316\u7f16\u8bd1\u5668\u7684\u5404\u79cd\u8868\u683c\u548c\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u7f16\u8bd1\u8fc7\u7a0b\u63d0\u4f9b\u57fa\u7840\u4fe1\u606f\u548c\u73af\u5883\u3002</li> <li>enterids\uff1a\u5c06Pascal\u8bed\u8a00\u7684\u6807\u51c6\u7c7b\u578b\u3001\u8fc7\u7a0b\u548c\u51fd\u6570\u540d\uff08\u5982<code>integer</code>\u3001<code>boolean</code>\u3001<code>write</code>\u7b49\uff09\u6ce8\u518c\u5230\u7b26\u53f7\u8868\u4e2d\uff0c\u4ee5\u4f9b\u540e\u7eed\u9636\u6bb5\u4f7f\u7528\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_5","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p>\u8d1f\u8d23\u4ece\u6e90\u4ee3\u7801\u4e2d\u9010\u5b57\u7b26\u8bfb\u53d6\u5185\u5bb9\uff0c\u5e76\u751f\u6210\u5bf9\u5e94\u7684\u5355\u8bcd\u7b26\u53f7\uff08tokens\uff09\uff0c\u4f9b\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\u4f7f\u7528\u3002</p> <ul> <li>nextch\uff1a\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u5e76\u5904\u7406\u884c\u5c3e\u5b57\u7b26\u3002\u5982\u679c\u8bfb\u53d6\u5230\u6587\u4ef6\u672b\u5c3e\uff0c\u5219\u62a5\u544a\u9519\u8bef\u3002</li> <li>insymbol\uff1a\u89e3\u6790\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7b26\u53f7\uff0c\u5904\u7406\u5173\u952e\u5b57\u3001\u6807\u8bc6\u7b26\u3001\u5e38\u91cf\u3001\u64cd\u4f5c\u7b26\u53ca\u6ce8\u91ca\u884c\u7b49\u3002</li> <li>readscale\uff1a\u5f53\u89e3\u6790\u5b9e\u6570\u65f6\uff0c\u8d1f\u8d23\u5904\u7406\u5176\u6307\u6570\u90e8\u5206\u3002</li> <li>adjustscale\uff1a\u6839\u636e\u5b9e\u6570\u7684\u5c0f\u6570\u4f4d\u548c\u6307\u6570\u90e8\u5206\uff0c\u8ba1\u7b97\u51fa\u5b9e\u9645\u7684\u6570\u503c\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_6","title":"\u8bed\u6cd5\u5206\u6790","text":"<p>\u8bed\u6cd5\u5206\u6790\u5668\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u9a8c\u8bc1\u6e90\u4ee3\u7801\u7684\u8bed\u6cd5\u7ed3\u6784\uff0c\u786e\u4fdd\u5b83\u7b26\u5408Pascal\u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\u3002\u5728Pascal-S\u7f16\u8bd1\u5668\u4e2d\uff0c\u8bed\u6cd5\u5206\u6790\u91c7\u7528\u9012\u5f52\u4e0b\u964d\u65b9\u6cd5\uff0c\u901a\u8fc7\u9010\u5c42\u9012\u5f52\u89e3\u6790\u7a0b\u5e8f\u7684\u5404\u4e2a\u90e8\u5206\u3002\u6bcf\u4e2a\u7ed3\u6784\uff08\u5982\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u3001\u8fc7\u7a0b\uff09\u90fd\u6709\u5bf9\u5e94\u7684\u5206\u6790\u51fd\u6570\uff0c\u9010\u4e00\u68c0\u67e5\u5176\u5408\u6cd5\u6027\uff0c\u5e76\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002</p> <ol> <li>block(fsys: symset; isfun: boolean; level: integer)    \u7528\u4e8e\u5206\u6790\u5206\u7a0b\u5e8f\u5757\uff08\u5982\u4e3b\u7a0b\u5e8f\u3001\u8fc7\u7a0b\u6216\u51fd\u6570\uff09\uff0c\u8d1f\u8d23\u5904\u7406\u7a0b\u5e8f\u4f53\u3001\u53d8\u91cf\u58f0\u660e\u3001\u7c7b\u578b\u58f0\u660e\u3001\u5e38\u91cf\u58f0\u660e\u548c\u5d4c\u5957\u7684\u8fc7\u7a0b\u6216\u51fd\u6570\u5b9a\u4e49\u3002</li> </ol> <p>\u53c2\u6570<code>fsys</code>\u7528\u4e8e\u68c0\u67e5\u7b26\u53f7\u662f\u5426\u5408\u6cd5\uff0c<code>isfun</code>\u6807\u8bb0\u5f53\u524d\u662f\u5426\u4e3a\u51fd\u6570\uff0c<code>level</code>\u8868\u793a\u5f53\u524d\u7684\u5d4c\u5957\u5c42\u6b21\u3002</p> <ul> <li> <p>parameterlist      \u5904\u7406\u5f62\u5f0f\u53c2\u6570\u8868\u3002\u7528\u4e8e\u8fc7\u7a0b\u6216\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\uff0c\u5206\u6790\u5f62\u5f0f\u53c2\u6570\u7684\u58f0\u660e\u90e8\u5206\uff0c\u68c0\u67e5\u53c2\u6570\u7684\u7c7b\u578b\u548c\u6807\u8bc6\u7b26\u662f\u5426\u5408\u6cd5\u3002</p> </li> <li> <p>skip(fsys\uff1bn)</p> <p>\u8df3\u8fc7\u9519\u8bef\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u76f4\u5230\u627e\u5230\u5c5e\u4e8e<code>fsys</code>\u96c6\u5408\u7684\u7b26\u53f7\uff0c\u4e3b\u8981\u7528\u4e8e\u9519\u8bef\u6062\u590d\u3002</p> </li> <li> <p>test(s1, s2: symset; n: integer)      \u68c0\u67e5\u5f53\u524d\u7b26\u53f7\u662f\u5426\u5c5e\u4e8e\u96c6\u5408<code>s1</code>\u3002\u5982\u679c\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u5219\u8df3\u8fc7\uff0c\u7ee7\u7eed\u5bfb\u627e<code>fsys</code>\u4e2d\u7684\u5408\u6cd5\u7b26\u53f7\u3002</p> </li> <li> <p>testsemicolon      \u68c0\u67e5\u5f53\u524d\u7b26\u53f7\u662f\u5426\u4e3a\u5206\u53f7\uff0c\u82e5\u4e0d\u662f\uff0c\u5219\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u8fdb\u884c\u5bb9\u9519\u5904\u7406\u3002</p> </li> <li> <p>typ(fsys: symset; var tp: types; var rf, sz: integer)    \u89e3\u6790\u5e76\u5904\u7406\u7c7b\u578b\u5b9a\u4e49\u3002\u68c0\u67e5\u7c7b\u578b\u58f0\u660e\u90e8\u5206\uff0c\u5982\u6807\u91cf\u7c7b\u578b\u3001\u6570\u7ec4\u7c7b\u578b\u548c\u8bb0\u5f55\u7c7b\u578b\uff0c\u8fd4\u56de\u5176\u5927\u5c0f\u548c\u5f15\u7528\u3002</p> </li> <li> <p>arraytyp(var aref, arsz: integer)      \u5904\u7406\u6570\u7ec4\u7c7b\u578b\u7684\u58f0\u660e\uff0c\u89e3\u6790\u6570\u7ec4\u7684\u4e0a\u4e0b\u754c\u548c\u5143\u7d20\u7c7b\u578b\uff0c\u5e76\u8bb0\u5f55\u6570\u7ec4\u7684\u5927\u5c0f\u3002</p> </li> <li> <p>constant(fsys: symset; var c: conrec)      \u5904\u7406\u5e38\u91cf\u5b9a\u4e49\u3002\u8be5\u51fd\u6570\u89e3\u6790\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u8bc6\u522b\u6574\u6570\u3001\u5b9e\u6570\u6216\u5b57\u7b26\u5e38\u91cf\uff0c\u8fd4\u56de\u5e38\u91cf\u7684\u7c7b\u578b\u548c\u6570\u503c\u3002</p> </li> <li> <p>expression(fsys: symset; var x: item)    \u9012\u5f52\u89e3\u6790\u8868\u8fbe\u5f0f\u4e2d\u7684\u64cd\u4f5c\u6570\u548c\u8fd0\u7b97\u7b26\u3002</p> </li> <li> <p>selector(fsys: symset; var v: item)      \u5904\u7406\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5143\u7d20\uff0c\u5982\u6570\u7ec4\u4e0b\u6807\u3001\u8bb0\u5f55\u6210\u5458\u5f15\u7528\u7b49\u3002</p> </li> <li>simpleexpression(fsys: symset; var x: item)      \u5904\u7406\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u5982\u52a0\u6cd5\u3001\u51cf\u6cd5\u548c\u903b\u8f91\u8fd0\u7b97\uff0c\u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c\u7684\u7c7b\u578b\u3002</li> <li>term(fsys: symset; var x: item)      \u5904\u7406\u8868\u8fbe\u5f0f\u4e2d\u7684\u9879\u3002\u9879\u901a\u5e38\u662f\u7531\u4e58\u6cd5\u3001\u9664\u6cd5\u7b49\u64cd\u4f5c\u7b26\u8fde\u63a5\u7684\u57fa\u672c\u5143\u7d20\u3002</li> <li> <p>factor(fsys: symset; var x: item)      \u5904\u7406\u56e0\u5b50\uff0c\u56e0\u5b50\u662f\u8868\u8fbe\u5f0f\u4e2d\u7684\u6700\u5c0f\u5355\u5143\uff0c\u901a\u5e38\u662f\u5e38\u91cf\u3001\u53d8\u91cf\u6216\u51fd\u6570\u8c03\u7528\u3002</p> </li> <li> <p>call(fsys: symset; i: integer)    \u5904\u7406\u8fc7\u7a0b\u6216\u51fd\u6570\u8c03\u7528\u3002</p> </li> <li> <p>statement(fsys: symset)    \u89e3\u6790\u5404\u79cd\u7c7b\u578b\u7684\u8bed\u53e5\uff0c\u5982\u8d4b\u503c\u8bed\u53e5\u3001\u63a7\u5236\u8bed\u53e5\uff08<code>if</code>\u3001<code>while</code>\u3001<code>for</code>\u7b49\uff09\u3002</p> </li> <li> <p>ifstatement\uff1a\u5904\u7406<code>if</code>\u8bed\u53e5\uff0c\u5305\u62ec<code>then</code>\u548c<code>else</code>\u5206\u652f\u3002</p> </li> <li>casestatement\uff1a\u5904\u7406<code>case</code>\u8bed\u53e5\uff0c\u652f\u6301\u591a\u5206\u652f\u9009\u62e9\u7ed3\u6784\u3002</li> <li>repeatstatement\uff1a\u5904\u7406<code>repeat...until</code>\u8bed\u53e5\u3002</li> <li>whilestatement\uff1a\u5904\u7406<code>while</code>\u5faa\u73af\u7ed3\u6784\u3002</li> <li>forstatement\uff1a\u5904\u7406<code>for</code>\u5faa\u73af\u7ed3\u6784\u3002</li> <li>assignment(lv, ad: integer)\uff1a\u5904\u7406\u8d4b\u503c\u8bed\u53e5\uff0c\u751f\u6210\u8d4b\u503c\u64cd\u4f5c\u7684\u4e2d\u95f4\u4ee3\u7801\u3002</li> <li>compoundstatement\uff1a\u5904\u7406\u590d\u5408\u8bed\u53e5\uff0c\u652f\u6301\u591a\u4e2a\u8bed\u53e5\u5757\u7ec4\u5408\u5728\u4e00\u8d77\u6267\u884c\u3002</li> <li>caselabel\uff1a\u5904\u7406<code>case</code>\u8bed\u53e5\u4e2d\u7684\u6807\u53f7\uff0c\u5c06\u6807\u53f7\u5bf9\u5e94\u7684\u76ee\u6807\u4ee3\u7801\u5730\u5740\u586b\u5165case\u8868\u3002</li> <li>onecase\uff1a\u5904\u7406<code>case</code>\u8bed\u53e5\u4e2d\u7684\u5355\u4e2a\u5206\u652f\u3002</li> <li>standproc(n: integer)\uff1a\u5904\u7406\u6807\u51c6\u8fc7\u7a0b\u8c03\u7528\uff0c\u5982<code>read</code>\u3001<code>write</code>\u7b49\u8f93\u5165\u8f93\u51fa\u8fc7\u7a0b\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_7","title":"\u8bed\u4e49\u5206\u6790","text":"<p>\u786e\u4fdd\u7a0b\u5e8f\u4e2d\u7684\u64cd\u4f5c\u7b26\u548c\u64cd\u4f5c\u6570\u7c7b\u578b\u5339\u914d\uff0c\u53d8\u91cf\u5728\u4f7f\u7528\u524d\u5df2\u58f0\u660e\uff0c\u8fc7\u7a0b\u548c\u51fd\u6570\u7684\u8c03\u7528\u4e0e\u5b9a\u4e49\u4e00\u81f4\u7b49\u3002</p> <ol> <li> <p>\u53d8\u91cf\u4e0e\u5e38\u91cf\u58f0\u660e\u7684\u8bed\u4e49\u68c0\u67e5</p> </li> <li> <p>entervariable\uff1a\u5c06\u53d8\u91cf\u6ce8\u518c\u5230\u7b26\u53f7\u8868\u4e2d\uff0c\u5e76\u68c0\u67e5\u53d8\u91cf\u662f\u5426\u5df2\u7ecf\u58f0\u660e\u6216\u662f\u5426\u4e0e\u5176\u4ed6\u7b26\u53f7\u51b2\u7a81\u3002\u901a\u8fc7\u7b26\u53f7\u8868\u7684\u7ed3\u6784\uff0c\u786e\u4fdd\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u5408\u6cd5\u7684\u58f0\u660e\u3002</p> </li> <li> <p>constdec\uff1a\u5904\u7406\u5e38\u91cf\u7684\u58f0\u660e\uff0c\u68c0\u67e5\u5e38\u91cf\u7684\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002\u4f8b\u5982\uff0c\u6574\u6570\u5e38\u91cf\u4e0d\u80fd\u8d4b\u503c\u4e3a\u5b9e\u6570\uff0c\u5b57\u7b26\u5e38\u91cf\u5fc5\u987b\u662f\u5355\u4e2a\u5b57\u7b26\u7b49\u3002</p> </li> <li> <p>\u7c7b\u578b\u68c0\u67e5</p> </li> <li> <p>typ(fsys: symset; var tp: types; var rf, sz: integer)\uff1a\u8be5\u51fd\u6570\u4e0d\u4ec5\u5728\u8bed\u6cd5\u4e0a\u89e3\u6790\u7c7b\u578b\uff0c\u8fd8\u8d1f\u8d23\u68c0\u67e5\u6bcf\u4e2a\u7c7b\u578b\u5b9a\u4e49\u7684\u5408\u6cd5\u6027\u3002\u4f8b\u5982\uff0c\u6570\u7ec4\u7684\u4e0a\u4e0b\u754c\u5fc5\u987b\u662f\u6574\u6570\uff0c\u8bb0\u5f55\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bb5\u5fc5\u987b\u6709\u5408\u6cd5\u7684\u7c7b\u578b\u3002</p> </li> <li> <p>resulttype(a, b: types): types\uff1a\u8be5\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u8868\u8fbe\u5f0f\u4e2d\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u662f\u5426\u517c\u5bb9\u3002\u5982\u679c\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u751f\u6210\u7c7b\u578b\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u4e0d\u80fd\u5c06\u6574\u6570\u548c\u5e03\u5c14\u503c\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u3002</p> </li> <li> <p>\u8fc7\u7a0b\u4e0e\u51fd\u6570\u8c03\u7528\u7684\u8bed\u4e49\u68c0\u67e5</p> </li> <li> <p>call(fsys: symset; i: integer)\uff1a\u5728\u89e3\u6790\u8fc7\u7a0b\u6216\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u68c0\u67e5\u5b9e\u9645\u53c2\u6570\u548c\u5f62\u5f0f\u53c2\u6570\u7684\u7c7b\u578b\u662f\u5426\u4e00\u81f4\u3002\u5f62\u53c2\u548c\u5b9e\u53c2\u7c7b\u578b\u4e0d\u5339\u914d\u65f6\uff0c\u4f1a\u62a5\u544a\u9519\u8bef\u3002</p> </li> <li> <p>\u8868\u8fbe\u5f0f\u4e0e\u64cd\u4f5c\u7b26\u7684\u7c7b\u578b\u68c0\u67e5</p> </li> <li> <p>expression(fsys: symset; var x: item)\uff1a\u68c0\u67e5\u64cd\u4f5c\u7b26\u548c\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002</p> </li> <li>term(fsys: symset; var x: item)\uff1a\u68c0\u67e5\u4e58\u6cd5\u3001\u9664\u6cd5\u7b49\u8fd0\u7b97\u7684\u5de6\u53f3\u64cd\u4f5c\u6570\u662f\u5426\u90fd\u662f\u6570\u503c\u7c7b\u578b\u3002</li> <li> <p>factor(fsys: symset; var x: item)\uff1a\u89e3\u6790\u56e0\u5b50\u65f6\uff0c\u786e\u4fdd\u56e0\u5b50\u662f\u5e38\u91cf\u3001\u53d8\u91cf\u6216\u51fd\u6570\u8c03\u7528\u7684\u7c7b\u578b\u3002</p> </li> <li> <p>\u63a7\u5236\u7ed3\u6784\u7684\u8bed\u4e49\u68c0\u67e5</p> </li> <li> <p>ifstatement\uff1a\u68c0\u67e5<code>if</code>\u8bed\u53e5\u7684\u6761\u4ef6\u90e8\u5206\u662f\u5426\u4e3a\u5e03\u5c14\u7c7b\u578b\u3002</p> </li> <li> <p>whilestatement\u3001repeatstatement\u3001forstatement\uff1a\u4e0e<code>ifstatement</code>\u7c7b\u4f3c\u4e5f\u4f1a\u8fdb\u884c\u76f8\u5e94\u7684\u8bed\u4e49\u68c0\u67e5\u3002</p> </li> <li> <p>\u7b26\u53f7\u8868\u7ba1\u7406\u4e0e\u4f5c\u7528\u57df\u68c0\u67e5</p> </li> </ol> <p>\u6bcf\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u5f53\u524d\u7b26\u53f7\u8868\u7684\u4e0a\u4e0b\u6587\u5b58\u50a8\u5728<code>display</code>\u6570\u7ec4\u4e2d\uff0c\u786e\u4fdd\u4f5c\u7528\u57df\u7684\u6b63\u786e\u6027\u3002</p> <ul> <li>loc(id: alfa): integer\uff1a\u7528\u4e8e\u5728\u7b26\u53f7\u8868\u4e2d\u67e5\u627e\u6807\u8bc6\u7b26<code>id</code>\uff0c\u786e\u4fdd\u7b26\u53f7\u5df2\u7ecf\u58f0\u660e\uff0c\u5e76\u8fd4\u56de\u5176\u5728\u7b26\u53f7\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u672a\u627e\u5230\u7b26\u53f7\uff0c\u5c06\u62a5\u544a\u9519\u8bef\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_8","title":"\u4ee3\u7801\u751f\u6210","text":"<p>\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\uff08P-code\uff09\uff0c\u4f9b\u865a\u62df\u673a\u89e3\u91ca\u6267\u884c\u3002</p> <ul> <li>emit(fct: integer)\uff1a\u751f\u6210\u6ca1\u6709\u64cd\u4f5c\u6570\u7684P-code\u6307\u4ee4\u3002</li> <li>emit1(fct: integer, b: integer)\uff1a\u751f\u6210\u5e26\u4e00\u4e2a\u64cd\u4f5c\u6570\u7684P-code\u6307\u4ee4\u3002</li> <li>emit2(fct: integer, a: integer, b: integer)\uff1a\u751f\u6210\u5e26\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684P-code\u6307\u4ee4\u3002</li> <li>interpret\uff1aP-code\u89e3\u91ca\u5668\uff0c\u8d1f\u8d23\u89e3\u91ca\u548c\u6267\u884c\u751f\u6210\u7684P-code\u3002</li> <li>dump\uff1a\u5728\u8fd0\u884c\u65f6\u8f93\u51fa\u6808\u5185\u5bb9\u3001\u663e\u793a\u7b26\u53f7\u8868\u3001\u663e\u793a\u4ee3\u7801\u6267\u884c\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5e2e\u52a9\u8c03\u8bd5\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_9","title":"\u7b26\u53f7\u8868\u7ba1\u7406","text":"<p>\u7b26\u53f7\u8868\u7528\u4e8e\u8bb0\u5f55\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u3001\u5e38\u91cf\u3001\u7c7b\u578b\u3001\u8fc7\u7a0b\u548c\u51fd\u6570\u7684\u4fe1\u606f\u3002</p> <ul> <li>enter(x0: alfa, x1: objecttyp, x2: types, x3: integer)\uff1a\u5c06\u4e00\u4e2a\u6807\u8bc6\u7b26\u6ce8\u518c\u5230\u7b26\u53f7\u8868\u4e2d\u3002</li> <li>enterarray(tp: types, l, h: integer)\uff1a\u6ce8\u518c\u6570\u7ec4\u7c7b\u578b\u7684\u4fe1\u606f\u3002</li> <li>enterblock\uff1a\u8bb0\u5f55\u4e00\u4e2a\u65b0\u7684\u8fc7\u7a0b\u6216\u51fd\u6570\u5757\u3002</li> <li>enterreal(x: real)\uff1a\u5c06\u5b9e\u6570\u5e38\u91cf\u6ce8\u518c\u5230\u7b26\u53f7\u8868\u4e2d\u3002</li> <li>entervariable\uff1a\u5c06\u53d8\u91cf\u540d\u6ce8\u518c\u5230\u7b26\u53f7\u8868\u4e2d\u3002</li> <li>constdec\uff1a\u5904\u7406\u5e38\u91cf\u5b9a\u4e49\uff0c\u5e76\u5c06\u5176\u4fe1\u606f\u6ce8\u518c\u5230\u7b26\u53f7\u8868\u3002</li> <li>typedeclaration\uff1a\u5904\u7406\u7c7b\u578b\u5b9a\u4e49\u3002</li> <li>variabledeclaration\uff1a\u5904\u7406\u53d8\u91cf\u5b9a\u4e49\u3002</li> <li>procdeclaration\uff1a\u5904\u7406\u8fc7\u7a0b\u548c\u51fd\u6570\u5b9a\u4e49\uff0c\u5e76\u9012\u5f52\u89e3\u6790\u5176\u5185\u90e8\u4ee3\u7801\u5757\u3002</li> <li>printtables\uff1a\u6253\u5370\u7b26\u53f7\u8868\u3001\u5b9e\u6570\u5e38\u91cf\u8868\u3001\u8fc7\u7a0b\u548c\u51fd\u6570\u8868\u7b49\u5185\u5bb9\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_10","title":"\u6587\u4ef6\u7ec4\u7ec7","text":"<p>Pascal-S Compiler\u7684\u6240\u6709\u529f\u80fd\u90fd\u5728\u4e00\u4e2a\u6587\u4ef6\u5185\u5b8c\u6210\uff0c\u6574\u4f53\u7ed3\u6784\u8f83\u4e3a\u8026\u5408\u3002\u6bcf\u4e2a\u529f\u80fd\u6a21\u5757\u4ee5\u8fc7\u7a0b\u5f62\u5f0f\u5b9e\u73b0\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4f9d\u8d56\u8f83\u5927\uff0c\u51fd\u6570\u8c03\u7528\u94fe\u8f83\u957f\uff0c\u6a21\u5757\u5316\u7a0b\u5ea6\u8f83\u4f4e\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_11","title":"\u7f16\u8bd1\u5b9e\u9a8c\u8bbe\u8ba1","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_12","title":"\u603b\u4f53\u7ed3\u6784","text":"<p>\u6839\u636ePascal-S\u7f16\u8bd1\u5668\u548c\u7406\u8bba\u90e8\u5206\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u5c06\u7f16\u8bd1\u5668\u5206\u4e3a\u524d\u7aef\uff0c\u4e2d\u7aef\uff0c\u540e\u7aef\u4e09\u4e2a\u90e8\u5206\u3002</p> <ul> <li>\u524d\u7aef\uff1a\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790</li> <li>\u4e2d\u7aef\uff1a\u8bed\u4e49\u5206\u6790\u3001\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u4e2d\u7aef\u4f18\u5316</li> <li>\u540e\u7aef\uff1a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u3001\u540e\u7aef\u4f18\u5316</li> </ul> <p>\u5728\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u7684\u540c\u65f6\u5efa\u7acb\u7b26\u53f7\u8868\u5e76\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_13","title":"\u63a5\u53e3\u8bbe\u8ba1","text":"<ul> <li>\u8bcd\u6cd5\u5206\u6790\u63a5\u53d7\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6e90\u7a0b\u5e8f\uff0c\u8fd4\u56de\u4e00\u7cfb\u5217\u88ab\u5206\u5272\u597d\u7684\u8bcd\u6cd5\u5355\u5143<code>token</code></li> <li>\u8bed\u6cd5\u5206\u6790\u63a5\u53d7\u4e00\u4e2atoken\u5217\u8868\uff0c\u8fd4\u56de\u4e00\u68f5\u6839\u8282\u70b9\u540d\u4e3a<code>CompUnit</code>\u7684\u8bed\u6cd5\u6811</li> <li>\u4e2d\u7aef\u63a5\u53d7\u8bed\u6cd5\u6811\uff0c\u8fd4\u56de\u4e00\u4e2a<code>LLVM IR</code>\u4e2d\u7684<code>Module</code>\u7ed3\u70b9</li> <li>\u540e\u7aef\u63a5\u53d7<code>Module</code>\u7ed3\u70b9\uff0c\u8fd4\u56de\u4e00\u4e2a\u7531<code>MIPS</code>\u6307\u4ee4\u7ec4\u6210\u7684\u5217\u8868</li> </ul> <p>\u6bcf\u4e2a\u7c7b\u529f\u80fd\u76f8\u4e92\u72ec\u7acb\uff0c\u65b9\u4fbf\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002\u5728\u7f16\u8bd1\u5668\u7c7b<code>Compiler</code>\u4e2d\uff0c\u901a\u8fc7\u5408\u9002\u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u964d\u4f4e\u7c7b\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\uff0c\u540c\u65f6\u4f7f\u5f97\u4ee3\u7801\u7b80\u6d01\u3002</p> <pre><code>public class Compiler {\n    // \u6587\u4ef6\u8f93\u5165/\u8f93\u51fa\u8def\u5f84\n    private static final String inputFile = \"testfile.txt\";\n    private static final String lexerOutput = \"lexer.txt\";\n    private static final String parserOutput = \"parser.txt\";\n    private static final String errorOutput = \"error.txt\";\n    private static final String symbolOutput = \"symbol.txt\";\n    private static final String llvmOutput = \"llvm_ir.txt\";\n    private static final String irOutput = \"ir.txt\";\n    private static final String mipsOutput = \"mips.txt\";\n    // \u751f\u6210\u4e2d\u95f4\u4ee3\u7801/\u76ee\u6807\u4ee3\u7801\u7684\u5f00\u5173\n    private static final boolean toLLVM = true;\n    private static final boolean toMips = true;\n    // \u4f18\u5316\u5f00\u5173\n    private static final boolean optimize = false;\n\n    public static void main(String[] args) throws Exception {\n        String inputString = Files.readString(Paths.get(inputFile));\n        // \u8bcd\u6cd5\u5206\u6790\u90e8\u5206\n        // tokens\u662f\u5df2\u5212\u5206\u597d\u7684\u6e90\u7a0b\u5e8f\u7684\u8bcd\u6cd5\u5355\u5143\n        Lexer lexer = new Lexer(inputString);\n        ArrayList&lt;Token&gt; tokens = lexer.tokenize();\n        Printer.printTokens(tokens, lexerOutput);\n        // \u8bed\u6cd5\u5206\u6790\u90e8\u5206\n        // compUnit\u662f\u6e90\u7a0b\u5e8f\u6240\u751f\u6210\u7684\u8bed\u6cd5\u6811\u7684\u6839\u8282\u70b9\n        Parser parser = new Parser(tokens);\n        CompUnit compUnit = parser.parse();\n        Printer.printCompUnit(compUnit, parserOutput);\n        // \u8bed\u4e49\u5206\u6790\uff0c\u5efa\u7acb\u7b26\u53f7\u8868\n        Visitor visitor = new Visitor(compUnit);\n        visitor.visit();\n        // \u5f02\u5e38\u5904\u7406\uff1a\u5982\u679c\u6e90\u4ee3\u7801\u5728\u4e0a\u8ff0\u4e09\u90e8\u5206\u5b58\u5728\u5f02\u5e38\uff0c\u4e0d\u6784\u5efa\u4e2d\u95f4/\u76ee\u6807\u4ee3\u7801\n        Printer.printErrors(ErrorHandler.getInstance().getErrors(), errorOutput);\n        if (!ErrorHandler.getInstance().getErrors().isEmpty()) {\n            return;\n        }\n        // \u5f02\u5e38\u5904\u7406\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u5f02\u5e38\uff0c\u6253\u5370\u7b26\u53f7\u8868\n        Printer.printSymbols(symbolOutput);\n        if (toLLVM) {\n            // \u751f\u6210\u672a\u4f18\u5316\u4e2d\u95f4\u4ee3\u7801\n            IRBuilder irBuilder = new IRBuilder(compUnit);\n            irBuilder.build();\n            Printer.printIr(Module.getInstance(), llvmOutput);\n            if (optimize) {\n                // \u4e2d\u95f4\u4ee3\u7801\u4f18\u5316\n                Optimizer optimizer = new Optimizer(Module.getInstance());\n                optimizer.optimize();\n                Module.getInstance().updateId();\n                Printer.printIr(Module.getInstance(), irOutput);\n            }\n            if (toMips) {\n                // \u76ee\u6807\u4ee3\u7801\u751f\u6210\n                MipsBuilder mipsBuilder = new MipsBuilder(Module.getInstance(), optimize);\n                mipsBuilder.build(optimize);\n                Printer.printMips(MipsFile.getInstance(), mipsOutput);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_14","title":"\u6587\u4ef6\u7ec4\u7ec7","text":"<pre><code>PlatoCompiler\n\u2514\u2500src\n    \u251c\u2500backend               # \u540e\u7aef\u751f\u6210\u76ee\u6807\u4ee3\u7801\n    \u2502  \u251c\u2500enums               # \u679a\u4e3e\u7c7b\uff0c\u5305\u62ec\u5bc4\u5b58\u5668\u548cMIPS\u6307\u4ee4\u7c7b\u578b\n    \u2502  \u251c\u2500global               #  .data\u6bb5\u7684\u5185\u5bb9\n    \u2502  \u251c\u2500text                 #  .text\u6bb5\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u5404\u79cd\u6307\u4ee4\u7684\n    \u2502  \u2514\u2500utils               #  \u540e\u7aef\u4f18\u5316\n    \u251c\u2500error                 # \u5f02\u5e38\u5904\u7406\n    \u251c\u2500frontend\n    \u2502  \u251c\u2500syntax             #  \u8bed\u6cd5\u6811\u7ed3\u70b9\u7684\u6570\u636e\u7ed3\u6784\uff1a\u5206\u7c7b\u4e3a\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u3001\u8bed\u53e5\u3001\u53d8\u91cf\n    \u2502  \u2502  \u251c\u2500expression\n    \u2502  \u2502  \u251c\u2500function\n    \u2502  \u2502  \u251c\u2500statement\n    \u2502  \u2502  \u2514\u2500variable\n    \u2502  \u2514\u2500token              #  \u8bcd\u6cd5\u5355\u5143\u7684\u6570\u636e\u7ed3\u6784\n    \u251c\u2500middle              #  \u4e2d\u7aef\u8fdb\u884c\u8bed\u4e49\u5206\u6790\u5e76\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\n    \u2502  \u251c\u2500symbol             # \u7b26\u53f7\u8868\u6570\u636e\u7ed3\u6784\n    \u2502  \u2514\u2500component         # \u4e2d\u7aef\u7684\u6570\u636e\u7ed3\u6784\n    \u2502      \u251c\u2500instruction   # LLVM IR\u4e2d\u7684\u6307\u4ee4\u5bf9\u8c61\n    \u2502      \u2502  \u2514\u2500io\n    \u2502      \u251c\u2500model         # LLVM IR\u4e2d\u7684User Use Value\u6a21\u578b\n    \u2502      \u2514\u2500type          #  LLVM\u4e2d\u7684\u50a8\u5b58\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\n    \u251c\u2500optimize            #  \u4e2d\u7aef\u4f18\u5316\n    \u2514\u2500tools              #  \u4e00\u4e9b\u5b9e\u7528\u5de5\u5177\uff0c\u5982Printer\u7b49\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_15","title":"\u8bcd\u6cd5\u5206\u6790","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_16","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p>\u8bcd\u6cd5\u5206\u6790\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u4ece\u6e90\u7a0b\u5e8f\u4e2d\u8bc6\u522b\u51fa\u8bcd\u6cd5\u5355\u5143\uff0c\u8bb0\u5f55\u7c7b\u522b\u548c\u503c\uff08\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u4fdd\u5b58\uff09\u3002</p> <p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u8bcd\u6cd5\u5206\u6790\u4f4d\u4e8e<code>frontend</code>\u5305\u4e2d\uff0c\u5305\u62ec\u8bcd\u6cd5\u5206\u6790\u5668<code>Lexer</code>\u548c<code>token</code>\u5305\uff08\u5305\u62ec\u8bcd\u6cd5\u5355\u5143\u7c7b<code>Token</code>\u548c\u8bcd\u6cd5\u5355\u5143\u7c7b\u578b\u679a\u4e3e\u7c7b<code>TokenType</code>\uff09\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_17","title":"\u8f93\u5165/\u8f93\u51fa\u5904\u7406","text":"<p>\u7f16\u8bd1\u5668\u7684\u7b2c\u4e00\u6b65\u4efb\u52a1\u662f\u5c06\u6e90\u7a0b\u5e8f\u6587\u4ef6\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8bfb\u5165\u3002</p> <pre><code>// Compiler.java\npublic class Compiler {\n    // \u5176\u4ed6\u90e8\u5206\n    public static void main(String[] args) throws Exception {\n        String inputString = Files.readString(Paths.get(inputFile));\n        // \u5176\u4ed6\u90e8\u5206\n    }\n}\n</code></pre> <p>\u5bf9\u4e8e\u4f5c\u4e1a\u4e2d\u6bcf\u4e00\u4e2a\u8981\u6c42\u7684\u8f93\u51fa\uff0c\u6211\u5c06\u65b9\u6cd5\u7edf\u4e00\u5305\u88c5\u5728\u6253\u5370\u5de5\u5177\u7c7b<code>Printer</code>\u4e2d\uff0c\u5b9e\u73b0\u5904\u7406\u903b\u8f91\u4e0e\u8f93\u51fa\u903b\u8f91\u7684\u5206\u79bb\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_18","title":"\u8bcd\u6cd5\u5355\u5143","text":"<p>\u8bcd\u6cd5\u5355\u5143\u7c7b<code>Token</code>\u5b58\u50a8\u4e86\u7c7b\u578b\uff0c\u503c\uff0c\u884c\u53f7\u4fe1\u606f\u3002\u884c\u53f7\u4e3b\u8981\u5728\u5f02\u5e38\u5904\u7406\u8f93\u51fa\u7684\u65f6\u5019\u88ab\u4f7f\u7528\u3002</p> <pre><code>public class Token {\n    private final TokenType tokenType;\n    private final String content;\n    private final int line;\n}\n</code></pre> <p>\u4f7f\u7528\u679a\u4e3e\u7c7b<code>TokenType</code>\u6807\u8bb0token\u7684\u79cd\u7c7b\uff0c\u4e0e\u4f7f\u7528int\u7c7b\u578b\u53d8\u91cf\u6807\u8bb0\u79cd\u7c7b\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_19","title":"\u8bcd\u6cd5\u5206\u6790\u5668","text":"<p>\u8bcd\u6cd5\u5206\u6790\u5668\u63a5\u53d7\u6e90\u7a0b\u5e8f\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4e00\u4e2a\u5206\u5272\u597d\u7684token\u5217\u8868\uff0c\u4ee5ArrayList\u683c\u5f0f\u5b58\u50a8\u3002</p> <p><code>Lexer</code>\u901a\u8fc7<code>tokenize</code>\u65b9\u6cd5\u4e0e<code>Compiler</code>\u8fdb\u884c\u4ea4\u4e92\u3002</p> <pre><code>// Lexer.java\npublic ArrayList&lt;Token&gt; tokenize() {\n    ArrayList&lt;Token&gt; tokens = new ArrayList&lt;&gt;();\n    while (hasNext()) {\n        tokens.add(new Token(type, curToken.toString(), line));\n    }\n    return tokens;\n}\n</code></pre> <p><code>Lexer</code>\u7c7b\u4e2d\u6700\u5173\u952e\u7684\u662f<code>hasNext</code>\u65b9\u6cd5\uff0c\u6839\u636e\u8bcd\u6cd5\u89c4\u5219\u6784\u5efa\u72b6\u6001\u56fe\uff0c\u901a\u8fc7\u6307\u9488\u5728\u6e90\u7a0b\u5e8f\u5b57\u7b26\u4e32\u4e0a\u7684\u4f4d\u7f6e\u5224\u65ad\u63a5\u4e0b\u6765\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7ec4\u6210\u5408\u6cd5token\uff0c\u6267\u884c\u903b\u8f91\u5982\u4e0b\uff1a</p> <ul> <li>\u9996\u5148\u8df3\u8fc7\u7a7a\u767d\u6210\u5206\uff0c\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u3002\u5982\u679c\u8bfb\u53d6\u5230<code>\\n</code>\uff0c\u9700\u8981\u5c06\u5f53\u524d\u884c\u53f7+1\u3002</li> </ul> <pre><code>private void skip() {\n    while (pos &lt; inputString.length() &amp;&amp; isBlank(inputString.charAt(pos))) {\n        pos++;\n    }\n}\n\nprivate boolean isBlank(char c) {\n    if (c == '\\n') {\n        line++;\n        return true;\n    } else {\n        return c == ' ' || c == '\\t' || c == '\\r';\n    }\n}\n</code></pre> <ul> <li> <p>\u5224\u65ad\u5f53\u524d\u5b57\u7b26\u7684\u7c7b\u578b\u8fdb\u884c\u89e3\u6790\u3002\u4f8b\u5982\u82e5\u5f53\u524d\u5b57\u7b26\u4e3a<code>+</code>\uff0c\u5219\u5c06\u5176\u89e3\u6790\u4e3a\u7c7b\u578b\u4e3a<code>PLUS</code>\u7684token\u3002</p> </li> <li> <p>\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e3a\u6570\u5b57\uff0c\u9700\u8981\u4e0d\u65ad\u8bfb\u5165\u540e\u9762\u7684\u6570\u5b57</p> </li> <li> <p>\u5c06\u6807\u8bc6\u7b26\u548c\u4fdd\u7559\u5b57\u7edf\u4e00\u5904\u7406</p> <ul> <li> <p>\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e3a\u4e0b\u5212\u7ebf\u6216\u5b57\u6bcd\uff0c\u4e0d\u65ad\u8bfb\u5165\u540e\u9762\u7684\u5b57\u7b26\uff0c\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32</p> </li> <li> <p>\u901a\u8fc7\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5728\u4fdd\u7559\u5b57\u8868\u4e2d\u6765\u5224\u65ad\u5176\u7c7b\u578b\u662f\u4fdd\u7559\u5b57\u8fd8\u662f\u6807\u8bc6\u7b26</p> </li> <li> <p>\u4ee3\u7801\u5b9e\u73b0\u4e3a\uff1a</p> </li> </ul> <pre><code>if (isIdHead(c)) {\n    while (isIdHead(inputString.charAt(pos)) || Character.isDigit(inputString.charAt(pos))) {\n        addChar();\n    }\n    // \u901a\u8fc7\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5728\u4fdd\u7559\u5b57\u8868\u4e2d\u6765\u5224\u65ad\u5176\u7c7b\u578b\n    type = reservedMap.getOrDefault(curToken.toString(), TokenType.IDENFR);\n}\n</code></pre> </li> <li> <p>\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e3a\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u53f7\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u5224\u65ad</p> <pre><code>private void getCmpOrAgn(char ch) {\n    addChar();\n    if (inputString.charAt(pos) == '=') {\n        addChar();\n        switch (ch) {\n            case '&lt;' -&gt; type = TokenType.LEQ;\n            case '&gt;' -&gt; type = TokenType.GEQ;\n            case '=' -&gt; type = TokenType.EQL;\n            default -&gt; throw new RuntimeException(\"Unexpected character combination \" +\n                    \"at line \" + line);\n        }\n    } else {\n        switch (ch) {\n            case '&lt;' -&gt; type = TokenType.LSS;\n            case '&gt;' -&gt; type = TokenType.GRE;\n            case '=' -&gt; type = TokenType.ASSIGN;\n            default -&gt; throw new RuntimeException(\"Unexpected character \" +\n                    \"at line \" + line);\n        }\n    }\n}\n</code></pre> <p>\u540c\u7406\uff0c\u8bfb\u53d6\u5230\u611f\u53f9\u53f7\u65f6\uff0c\u4e5f\u9700\u8981\u5224\u65ad\u5176\u662f<code>!</code>\u8fd8\u662f<code>!=</code>\u3002</p> </li> <li> <p>\u5982\u679c\u5f53\u524d\u7b26\u53f7\u4e3a\u9664\u53f7\uff0c\u9700\u8981\u5224\u65ad\u5176\u662f\u9664\u6cd5\u3001\u5355\u884c\u6ce8\u91ca\u8fd8\u662f\u591a\u884c\u6ce8\u91ca</p> <pre><code>private boolean getDivOrCmt() {\n    if (inputString.charAt(pos + 1) == '/') {\n        // \u5355\u884c\u6ce8\u91ca\uff0c\u8df3\u8fc7\u4e4b\u540e\u7684\u5185\u5bb9\n        while (pos &lt; inputString.length() &amp;&amp; inputString.charAt(pos) != '\\n') {\n            pos++;\n        }\n        return hasNext();\n    } else if (inputString.charAt(pos + 1) == '*') {\n        // \u591a\u884c\u6ce8\u91ca\n        pos += 2;\n        int commentStartLine = line;\n        int commentLevel = 1;\n        while (pos + 1 &lt; inputString.length() &amp;&amp; commentLevel &gt; 0) {\n            if (inputString.charAt(pos) == '*' &amp;&amp; inputString.charAt(pos + 1) == '/') {\n                commentLevel--;\n                pos += 2;\n            } else if (inputString.charAt(pos) == '/' &amp;&amp; inputString.charAt(pos + 1) == '*') {\n                commentLevel++;\n                pos += 2;\n            } else {\n                if (inputString.charAt(pos) == '\\n') {\n                    line++;\n                }\n                pos++;\n            }\n        }\n        if (commentLevel &gt; 0) {\n            throw new RuntimeException(\"Unterminated comment starting at line \"\n                    + commentStartLine);\n        }\n        return hasNext();\n    }\n    // \u53ea\u662f\u5355\u7eaf\u7684\u9664\u53f7\n    addChar();\n    type = TokenType.DIV;\n    return true;\n}\n</code></pre> </li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_20","title":"\u5f02\u5e38\u5904\u7406","text":"<p>\u8bcd\u6cd5\u5206\u6790\u9636\u6bb5\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38\u4e3aa\u7c7b\u5f02\u5e38\uff0c\u5373\u51fa\u73b0\u4e86 '&amp;' \u548c '|' \u8fd9\u4e24\u4e2a\u7b26\u53f7\u3002\u6b64\u65f6\uff0c\u5e94\u8be5\u5c06 \u5176\u5f53\u505a '&amp;&amp;' \u4e0e '||' \u8fdb\u884c\u5904\u7406\uff0c\u4f46\u662f\u5728 \u8bb0\u5f55\u5355\u8bcd\u540d\u79f0\u7684\u65f6\u5019\u4ecd\u8bb0\u5f55 '&amp;' \u548c '|'\uff0c \u62a5\u9519\u884c\u53f7\u4e3a '&amp;' \u6216 '|' \u6240\u5728\u7684\u884c\u53f7\u3002</p> <pre><code>private void getAnd() {\n    addChar();\n    type = TokenType.AND;\n    if (pos &lt; inputString.length() &amp;&amp; inputString.charAt(pos) == '&amp;') {\n        addChar();\n    } else {\n        ErrorHandler.getInstance().addError(new Error(ErrorType.IllegalSymbol, line));\n    }\n}\n\nprivate void getOr() {\n    addChar();\n    type = TokenType.OR;\n    if (pos &lt; inputString.length() &amp;&amp; inputString.charAt(pos) == '|') {\n        addChar();\n    } else {\n        ErrorHandler.getInstance().addError(new Error(ErrorType.IllegalSymbol, line));\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_21","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u90e8\u5206\u6d4b\u8bd5\u70b9\u8fd0\u884c\u65f6\u51fa\u73b0<code>RE</code>\u5f02\u5e38\uff0c\u9700\u8981\u5728\u5206\u6790\u8fc7\u7a0b\u4e2d\u5bf9\u6d89\u53ca\u5230<code>inputString.charAt(pos)</code>\u7684\u90e8\u5206\u8fdb\u884c\u8d8a\u754c\u68c0\u67e5\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_22","title":"\u8bed\u6cd5\u5206\u6790","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_23","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p>\u8bed\u6cd5\u5206\u6790\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5c06token\u5217\u8868\u6309\u7167\u6587\u6cd5\u4e00\u6b65\u6b65\u7ec4\u5408\u4e3a\u5927\u7684\u8bed\u6cd5\u6210\u5206\uff0c\u5728\u5206\u6790\u7684\u540c\u65f6\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u3002</p> <p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u8bed\u6cd5\u5206\u6790\u4f4d\u4e8e<code>frontend</code>\u5305\u4e2d\uff0c\u5305\u62ec\u8bed\u6cd5\u5206\u6790\u5668<code>Parser</code>\u548c<code>syntax</code>\u5305\uff08\u5305\u62ec\u5404\u79cd\u8bed\u6cd5\u6210\u5206\uff09\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_24","title":"\u6539\u5199\u6587\u6cd5","text":"<p>\u7ed9\u5b9a\u7684\u6587\u6cd5\u4e2d\u5b58\u5728\u5de6\u9012\u5f52\u89c4\u5219\uff0c\u4e3a\u4e86\u5b9e\u73b0\u9012\u5f52\u4e0b\u964d\u5206\u6790\uff0c\u9700\u8981\u5bf9\u539f\u6709\u7684\u6587\u6cd5\u8fdb\u884c\u4fee\u6539\u3002\u6bd4\u5982\u5bf9\u4e8e<code>\u4e58\u9664\u6a21\u8868\u8fbe\u5f0f MulExp -&gt; UnaryExp | MulExp ('*' | '/' | '%') UnaryExp</code>\uff0c\u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a<code>MulExp -&gt; UnaryExp ('*' | '/' | '%') UnaryExp</code>\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_25","title":"\u9012\u5f52\u4e0b\u964d\u5206\u6790\u6cd5","text":"<p>\u8bed\u6cd5\u5206\u6790\u5668\u63a5\u53d7token\u5e8f\u5217\uff0c\u8fd4\u56de\u8bed\u6cd5\u6811\u7684\u6839\u8282\u70b9<code>compUnit</code>\u3002</p> <p>\u5bf9\u4e8e\u6587\u6cd5\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff0c\u5206\u522b\u8bbe\u7f6e\u4e00\u4e2a\u8bed\u6cd5\u7ed3\u70b9\u7c7b\u5b58\u50a8\u76f8\u5173\u4fe1\u606f\uff1b\u5bf9\u4e8estmt\u7684\u591a\u79cd\u60c5\u51b5\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u6587\u6cd5\u90fd\u5b9a\u4e49\u4e86\u8bed\u6cd5\u7ed3\u70b9\u7c7b\uff08\u5982<code>ReturnStmt</code>\u3001<code>LValExpStmt</code>\uff09\uff0c\u540c\u65f6\u7ee7\u627f<code>Stmt</code>\u62bd\u8c61\u7c7b\uff1b\u5bf9\u4e8e<code>VarDecl</code>\u548c<code>ConstDecl</code>\uff0c\u540c\u65f6\u7ee7\u627f<code>Decl</code>\u62bd\u8c61\u7c7b\u3002</p> <p>\u6240\u6709\u7684\u8bed\u6cd5\u7ed3\u70b9\u7c7b\u90fd\u9700\u8981\u7ee7\u627f\u8bed\u6cd5\u7ed3\u70b9\u62bd\u8c61\u7c7b<code>SyntaxNode</code>\uff0c\u5fc5\u987b\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5<code>print</code>\uff0c\u7528\u4e8e\u4f5c\u4e1a\u7684\u8f93\u51fa\u3002</p> <p><code>Parser</code>\u901a\u8fc7<code>parse</code>\u65b9\u6cd5\u4e0e<code>Compiler</code>\u8fdb\u884c\u4ea4\u4e92\u3002</p> <pre><code>Parser parser = new Parser(tokens);\nCompUnit compUnit = parser.parse();\n</code></pre> <p>\u8bed\u6cd5\u5206\u6790\u7a0b\u5e8f\u4e3b\u8981\u662f\u6839\u636e\u6587\u6cd5\u8fdb\u884c\u9012\u5f52\u4e0b\u964d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u5206\u652f\u8fdb\u884c\u5224\u65ad\uff0c\u5e76\u8fdb\u5165\u5bf9\u5e94\u7684\u5206\u652f\u7a0b\u5e8f\u4e2d\uff0c\u800c\u5bf9\u4e0d\u7b26\u5408\u4efb\u4f55\u8bed\u6cd5\u6761\u4ef6\u7684\u60c5\u51b5throw Exception\u3002\u4ee5\u89e3\u6790<code>InitVal</code>\u4e3a\u4f8b\uff1a</p> <pre><code>private InitVal parseInitVal() {\n    if (match(TokenType.LBRACE)) {\n        ArrayList&lt;Exp&gt; exps = new ArrayList&lt;&gt;();\n        if (match(TokenType.RBRACE)) {\n            return new InitVal(exps);\n        }\n        do {\n            exps.add(parseExp());\n        } while (match(TokenType.COMMA));\n        panic(TokenType.RBRACE);\n        return new InitVal(exps);\n    } else if (match(TokenType.STRCON)) {\n        return new InitVal(curToken(-1));\n    } else {\n        return new InitVal(parseExp());\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u6d89\u53ca\u5230\u4e24\u4e2a\u51fd\u6570<code>match</code>\u548c<code>panic</code>\u3002</p> <ul> <li>match\u51fd\u6570\u7528\u6765\u5224\u65ad\u5f53\u524d\u8bfb\u53d6\u5230token\u7c7b\u578b\u662f\u5426\u4e0e\u9884\u671f\u7684\u7c7b\u578b\u4e00\u81f4</li> </ul> <pre><code>public boolean match(TokenType type) {\n    if (curTokenType() == type) {\n        pos++;\n        return true;\n    } else {\n        return false;\n    }\n}\n</code></pre> <ul> <li>panic\u51fd\u6570\u7528\u4e8e\u6dfb\u52a0\u8bed\u6cd5\u5206\u6790\u65f6\u4ea7\u751f\u7684\u5f02\u5e38\u4fe1\u606f</li> </ul> <pre><code>private void panic(TokenType type) {\n    if (!match(type)) {\n        doErrorException(type);\n    }\n}\n\nprivate void doErrorException(TokenType type) {\n    // i, j, k\u7c7b\u5f02\u5e38\u8981\u6c42\u8bb0\u5f55\u524d\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u6240\u5728\u884c\u53f7\n    int line = curToken(-1).getLine();\n    ErrorHandler errorHandler = ErrorHandler.getInstance();\n    switch (type) {\n        case SEMICN -&gt; errorHandler.addError(new Error(ErrorType.SEMICNMissing, line));\n        case RPARENT -&gt; errorHandler.addError(new Error(ErrorType.RPARENTMissing, line));\n        case RBRACK -&gt; errorHandler.addError(new Error(ErrorType.RBRACKMissing, line));\n        default -&gt; throw new RuntimeException(\"What the f: \" + type);\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_26","title":"\u9884\u8bfb","text":"<p>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u9884\u8bfb\u624d\u80fd\u5224\u65ad\u51fa\u5206\u652f\u8def\u5f84\u3002</p> <p>\u6bd4\u5982\u5bf9\u4e8e\u4ee5\u4e0b\u7684\u6587\u6cd5\uff1a<code>Stmt -&gt; LVal '=' Exp ';' | [Exp] ';'</code>\uff0c\u5728\u5f53\u524d\u7684token\u79cd\u7c7b\u4e3a\u6807\u8bc6\u7b26\u65f6\uff0c\u4e24\u79cd\u60c5\u51b5\u90fd\u6709\u53ef\u80fd\u53d1\u751f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u9884\u8bfb\uff0c\u4e5f\u5c31\u662f\u5c1d\u8bd5\u89e3\u6790LVal\uff0c\u5982\u679c\u4e4b\u540e\u7684token\u7c7b\u578b\u662fASSIGN\uff0c\u5373\u53ef\u5224\u65ad\u3002</p> <pre><code>if (curTokenType() == TokenType.IDENFR) {\n    int tempPos = pos;\n    LVal lVal = parseLVal();\n    if (match(TokenType.ASSIGN)) {\n        if (match(TokenType.GETINTTK)) {\n            panic(TokenType.LPARENT);\n            panic(TokenType.RPARENT);\n            panic(TokenType.SEMICN);\n            return new GetintStmt(lVal);\n        } else if (match(TokenType.GETCHARTK)) {\n            panic(TokenType.LPARENT);\n            panic(TokenType.RPARENT);\n            panic(TokenType.SEMICN);\n            return new GetcharStmt(lVal);\n        }\n        Exp exp = parseExp();\n        panic(TokenType.SEMICN);\n        return new LValExpStmt(lVal, exp);\n    }\n    pos = tempPos;\n}\nExp exp = null;\nif (!match(TokenType.SEMICN)) {\n    exp = parseExp();\n    panic(TokenType.SEMICN);\n}\nreturn new ExpStmt(exp);\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_27","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u5728\u6d88\u9664\u5de6\u9012\u5f52\u6587\u6cd5\u7684\u65f6\u5019\uff0c\u53d8\u76f8\u66f4\u6539\u4e86\u671f\u671b\u8f93\u51fa\uff0c\u4f8b\u5982\u5bf9\u4e8e\u7b97\u5f0f<code>1+2</code>\uff0c\u6587\u6cd5\u5728\u6539\u5199\u524d\u540e\u4f1a\u6709\u4e0d\u4e00\u6837\u7684\u8f93\u51fa\uff1a</p> <pre><code>\u6587\u6cd51\uff1a\nAddExp -&gt; MulExp | AddExp ('+' | '\u2212') MulExp\n\nINTCON 1\n&lt;MulExp&gt; // 1\n&lt;AddExp&gt; // 1\nPLUS +\nINTCON 2\n&lt;MulExp&gt; // 2\n&lt;AddExp&gt; // 1+2\n\n\u6587\u6cd52\uff1a\nAddExp -&gt; MulExp { ('+' | '\u2212') MulExp }\n\nINTCON 1\n&lt;MulExp&gt; // 1\nPLUS +\nINTCON 2\n&lt;MulExp&gt; // 2\n&lt;AddExp&gt; // 1+2\n</code></pre> <p>\u66f4\u6539\u540e\u867d\u7136\u4e0d\u59a8\u788d\u9012\u5f52\u4e0b\u964d\u5b50\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u8f93\u51fa\u5c11\u4e86\u4e00\u4e2a<code>&lt;AddExp&gt;</code>\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u8f93\u51fa\u903b\u8f91\u8fdb\u884c\u4fee\u6539\u3002</p> <pre><code>// AddExp.java\n@Override\npublic void print() {\n    mulExps.get(0).print();\n    for (int i = 1; i &lt; mulExps.size(); i++) {\n        System.out.println(\"&lt;AddExp&gt;\");\n        System.out.println(operators.get(i - 1));\n        mulExps.get(i).print();\n    }\n    System.out.println(\"&lt;AddExp&gt;\");\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_28","title":"\u8bed\u4e49\u5206\u6790","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_29","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p>\u8bed\u4e49\u5206\u6790\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u904d\u5386\u8bed\u6cd5\u6811\u3001\u7ef4\u62a4\u7b26\u53f7\u8868\u5e76\u6784\u5efa\u4e2d\u95f4\u4ee3\u7801\u3002\u672c\u8282\u4e3b\u8981\u63cf\u8ff0\u7684\u662f\u7ef4\u62a4\u7b26\u53f7\u8868\u7684\u8fc7\u7a0b\u3002</p> <p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u8bed\u4e49\u5206\u6790\u7684\u7ef4\u62a4\u7b26\u53f7\u8868\u76f8\u5173\u4ee3\u7801\u4f4d\u4e8e<code>middle</code>\u5305\u4e2d\uff0c\u5305\u62ec</p> <ul> <li>\u8bbf\u95ee\u8005\u7c7b<code>Visitor</code></li> <li>\u7b26\u53f7\u8868\u7c7b<code>SymbolTable</code></li> <li>\u7b26\u53f7\u8868\u7ba1\u7406\u7c7b<code>TableManager</code></li> <li>\u7b26\u53f7\u5305<code>symbol</code>\uff0c\u5305\u62ec\u57fa\u7c7b<code>Symbol</code>\uff0c\u4e09\u79cd\u7c7b\u578b\u7684\u7b26\u53f7\u7c7b\uff08<code>VarSymbol</code>\u53d8\u91cf\u7b26\u53f7\u7c7b\uff0c<code>FuncSymbol</code>\u51fd\u6570\u7b26\u53f7\u7c7b\uff0c<code>ParamSymbol</code>\u51fd\u6570\u5f62\u53c2\u7b26\u53f7\u7c7b\uff09</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_30","title":"\u7b26\u53f7\u8868\u8bbe\u8ba1","text":"<p>\u7b26\u53f7\u8868\u7c7b<code>SymbolTable</code>\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\u6240\u793a</p> <pre><code>public class SymbolTable {\n    private static int counter = 0;\n    private final LinkedHashMap&lt;String, Symbol&gt; symbols = new LinkedHashMap&lt;&gt;();\n    private final SymbolType blockType;\n    private final SymbolTable parent;\n    private final ArrayList&lt;SymbolTable&gt; children = new ArrayList&lt;&gt;();\n}\n</code></pre> <p><code>blockType</code>\u6807\u8bb0\u5f53\u524d\u7b26\u53f7\u8868\u662f\u5426\u5c5e\u4e8e\u4e00\u4e2a\u51fd\u6570\u7684\u57fa\u5c42\u7b26\u53f7\u8868\uff08\u5373\u5168\u5c40\u7b26\u53f7\u8868\u7684\u76f4\u63a5\u5b50\u7b26\u53f7\u8868\uff09\u3002\u901a\u8fc7<code>SymbolTable</code>\u5305\u88c5<code>LinkedHashMap</code>\u5b9e\u73b0<code>put</code>\u3001<code>contains</code>\u3001<code>remove</code>\u7b49\u65b9\u6cd5\u3002</p> <p>\u8fd9\u91cc\u4f7f\u7528<code>LinkedHashMap</code>\u662f\u4e3a\u4e86\u4fdd\u8bc1\u904d\u5386\u65f6\u987a\u5e8f\u662f\u6309\u7167\u63d2\u5165\u987a\u5e8f\u6392\u5217\u7684\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_31","title":"\u7b26\u53f7\u8868\u7ba1\u7406","text":"<p>\u7b26\u53f7\u8868\u7ba1\u7406\u7c7b<code>TableManager</code>\u91c7\u7528\u5355\u4f8b\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5168\u5c40\u90fd\u53ef\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\u3002\u5b9e\u73b0\u5982\u4e0b</p> <pre><code>public class TableManager {\n    // \u5355\u4f8b\u6a21\u5f0f\n    private static final TableManager INSTANCE1 = new TableManager();\n    // \u521d\u59cb\u5316\u4e3aCompUnit\u5bf9\u5e94\u7684\u6700\u9ad8\u7ea7\u7684\u7b26\u53f7\u8868\n    private SymbolTable currentTable = new SymbolTable(null, null);\n    // \u5f53\u524d\u5904\u4e8e\u7684\u5faa\u73af\u5c42\u6570\n    private int loopLevel = 0;\n\n    private TableManager() {}\n\n    public static TableManager getInstance1() {\n        return INSTANCE1;\n    }\n\n    public void createTable(SymbolType blockType) {\n        SymbolTable newTable = new SymbolTable(blockType, currentTable);\n        currentTable.addChild(newTable);\n        currentTable = newTable;\n    }\n\n    public void recoverTable() {\n        currentTable = currentTable.getParent();\n    }\n\n    public boolean inCurrentTable(String symbolName) {\n        return currentTable.containsSymbol(symbolName);\n    }\n\n    public void addSymbol(Symbol symbol) {\n        currentTable.addSymbol(symbol);\n    }\n\n    public boolean isConstantVarSymbol(String symbolName) {\n        Symbol symbol = getSymbol(symbolName);\n        if (symbol instanceof VarSymbol varSymbol) {\n            return varSymbol.isConstant();\n        } else {\n            return false;\n        }\n    }\n}\n</code></pre> <p><code>currentTable</code>\u662f\u5f53\u524d\u4f5c\u7528\u57df\u7684\u7b26\u53f7\u8868\uff0c\u521d\u59cb\u5316\u4e3aCompUnit\u5bf9\u5e94\u7684\u6700\u9ad8\u7ea7\u7684\u7b26\u53f7\u8868\u3002<code>loopLevel</code>\u4e3a\u5f53\u524d\u5904\u4e8e\u7684\u5faa\u73af\u5c42\u6570\u3002</p> <p>\u89e3\u51b3\u201c\u540d\u5b57\u91cd\u5b9a\u4e49\u201d\u4ee5\u53ca\u201c\u540d\u5b57\u672a\u5b9a\u4e49\u201d\u7684\u5f02\u5e38\u68c0\u67e5\u95ee\u9898\uff0c\u53ef\u4f7f\u7528\u6808\u5f0f\u7b26\u53f7\u8868\u7684\u7ed3\u6784\u3002</p> <p>\u6bcf\u6b21\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\uff0c\u8c03\u7528<code>createTable</code>\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u8868\uff1b\u79bb\u5f00\u4f5c\u7528\u57df\u7684\u65f6\u5019\uff0c\u8c03\u7528<code>recoverTable</code>\u5c06currentTable\u91cd\u7f6e\u4e3a\u5176\u7236\u7b26\u53f7\u8868\uff0c\u501f\u6b64\u9690\u5f0f\u5730\u5b9e\u73b0\u4e86\u6808\u5f0f\u7b26\u53f7\u8868\u3002</p> <ul> <li>\u5982\u679c\u662f\u8fdb\u5165\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u6307\u5b9a<code>blockType</code>\uff0c\u5982\u8bbf\u95ee<code>FuncDef</code>\u65f6\uff1a</li> </ul> <pre><code>private void visitFuncDef(FuncDef funcDef) {\n    SymbolType funcReturnType;\n    switch (funcDef.getFuncType().getFuncType().getType()) {\n        case INTTK -&gt; funcReturnType = SymbolType.INT;\n        case CHARTK -&gt; funcReturnType = SymbolType.CHAR;\n        default -&gt; funcReturnType = SymbolType.VOID;\n    }\n    // \u68c0\u67e5\u540d\u5b57\u91cd\u5b9a\u4e49\n    // \u6784\u5efa\u5f62\u53c2\u7b26\u53f7\n    // \u51fd\u6570\u5f62\u53c2\u4e0d\u5728Block\u5757\u4e2d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e94\u8be5\u5c5e\u4e8eBlock\u5757\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\n    tableManager.createTable(funcReturnType);\n    if (funcDef.getFuncFParams() != null) {\n        visitFuncFParams(funcDef.getFuncFParams());\n    }\n    curFuncType = funcReturnType;\n    visitBlock(funcDef.getBlock());\n    tableManager.recoverTable();\n    curFuncType = null;\n}\n</code></pre> <ul> <li>\u5728\u51fd\u6570\u4f53\u5185\uff0c\u8fdb\u5165\u65b0\u4f5c\u7528\u57df\u65f6\uff0c\u521b\u5efa\u4e00\u4e2a<code>blockType = null</code>\u7684\u7b26\u53f7\u8868\uff0c\u5982\u8bbf\u95ee<code>BlockStmt</code>\u65f6\uff1a</li> </ul> <pre><code>private void visitBlockStmt(BlockStmt blockStmt) {\n    // \u8bbf\u95eeBlock\u4e2d\u7684Block\u65f6\uff0c\u9700\u8981\u53e6\u5916\u521b\u5efa\u7b26\u53f7\u8868\n    tableManager.createTable(null);\n    visitBlock(blockStmt.getBlock());\n    // \u9012\u5f52\u8bbf\u95ee\u5b8cBlock\u4e4b\u540e\uff0c\u5207\u6362\u7b26\u53f7\u8868\n    tableManager.recoverTable();\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_32","title":"\u7b26\u53f7\u67e5\u8be2","text":"<p><code>TableManager</code>\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u6765\u67e5\u627e\u6240\u8981\u7684\u7b26\u53f7\u3002</p> <pre><code>/*\n * \u5728\u7b26\u53f7\u8868\u6811\u4e2d\u67e5\u627e\u6807\u8bc6\u7b26\u6240\u5bf9\u5e94\u7684symbol\n * \u5982\u679c\u5728\u672c\u7ea7\u7b26\u53f7\u8868\u4e2d\u65e0\u6cd5\u67e5\u8be2\u5230\u8be5symbol\uff0c\u5219\u5728\u5176\u7236\u8282\u70b9\u4e0a\u67e5\u627e\n */\npublic Symbol getSymbol(String symbolName) {\n    SymbolTable table = currentTable;\n    while (table != null) {\n        if (table.containsSymbol(symbolName)) {\n            return table.getSymbol(symbolName);\n        }\n        table = table.getParent();\n    }\n    return null;\n}\n\n// \u5224\u65ad\u672c\u7ea7\u7b26\u53f7\u8868\u4e2d\u662f\u5426\u5b58\u5728symbol\npublic boolean inCurrentTable(String symbolName) {\n    return currentTable.containsSymbol(symbolName);\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_33","title":"\u7b26\u53f7\u7ed3\u6784","text":"<p>\u6bcf\u4e00\u4e2a<code>Symbol</code>\u90fd\u62e5\u6709\u540d\u5b57\u548c\u7c7b\u578b\u4e24\u79cd\u5c5e\u6027\u3002\u5bf9\u4e8e\u53d8\u91cf\u7b26\u53f7\u548c\u5f62\u53c2\u7b26\u53f7\uff0c<code>type</code>\u5c31\u662f\u5176\u5bf9\u5e94\u7684\u7c7b\u578b\uff1b\u5bf9\u4e8e\u51fd\u6570\u7b26\u53f7\uff0c<code>type</code>\u5bf9\u5e94\u7684\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3002</p> <pre><code>public class Symbol {\n    private final String name;\n    private final SymbolType type;\n}\n</code></pre> <p>\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf\u7b26\u53f7<code>VarSymbol</code>\uff0c\u9700\u8981\u989d\u5916\u8bb0\u5f55\u5176\u7684\u7ef4\u6570\u53ca\u6570\u7ec4\u957f\u5ea6\uff08\u5982\u679c\u7ef4\u6570\u662f1\uff09\u548c\u662f\u5426\u4e3a\u5e38\u91cf\u3002</p> <pre><code>public class VarSymbol extends Symbol {\n    private static int counter = 0;\n    private final int id;\n    private final boolean isConstant;\n    private final int dimension;\n    // \u4e3a\u6570\u7ec4\u65f6\u6240\u5b9a\u4e49\u7684\u957f\u5ea6\uff1aa[6] -&gt; length = 6\n    private final int length;\n}\n</code></pre> <p>\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570\u7b26\u53f7<code>FuncSymbol</code>\uff0c\u9700\u8981\u989d\u5916\u8bb0\u5f55\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u3002</p> <pre><code>public class FuncSymbol extends Symbol {\n    private final ArrayList&lt;ParamSymbol&gt; paramSymbols;\n}\n\npublic class ParamSymbol {\n    private final String name;\n    private final SymbolType type;\n    private final int dimension;\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_34","title":"\u7f16\u8bd1\u5668\u8ba1\u7b97","text":"<p>\u6309\u7167\u6587\u6cd5\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u548c\u6709<code>const</code>\u4fee\u9970\u7684\u53d8\u91cf\uff0c\u5728\u7f16\u8bd1\u671f\u5c31\u53ef\u4ee5\u786e\u5b9a\u3002\u5728\u8bed\u6cd5\u6210\u5206\u4e0a\uff0c\u90fd\u5c5e\u4e8e<code>ConstExp</code>\u3002</p> <p>\u4eceConstExp\u4e00\u8def\u5411\u4e0b\u89e3\u6790\uff0c\u5206\u522b\u4f7f<code>AddExp</code>\u3001<code>MulExp</code>\u7b49\u5b9e\u73b0<code>Calculable</code>\u63a5\u53e3\uff0c\u5b9e\u73b0<code>calculate</code>\u65b9\u6cd5\uff0c\u5728\u7f16\u8bd1\u671f\u8fdb\u884c\u8ba1\u7b97\uff08\u5e38\u91cf\u503c\u6216\u4e4b\u524d\u5b9a\u4e49\u7684<code>const</code>\u53d8\u91cf\uff09\uff0c\u5426\u5219\u62a5\u9519\u3002\u4f8b\u5982\u5bf9<code>PrimaryExp</code>\u7684\u5904\u7406\uff1a</p> <pre><code>@Override\npublic int calculate() {\n    int ans;\n    if (exp != null) {\n        ans = exp.calculate();\n    } else if (lVal != null) {\n        ans = lVal.calculate();\n    } else if (number != null) {\n        // number\u548ccharacter\u90fd\u662f\u80fd\u76f4\u63a5\u5f97\u5230\u503c\u7684\u8bed\u6cd5\u6210\u5206\n        ans = number.calculate();\n    } else if (character != null) {\n        ans = character.calculate();\n    } else {\n        throw new RuntimeException(\"Shouldn't reach here\");\n    }\n    return ans;\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_35","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u8fd9\u4e00\u6b65\u601d\u8def\u8f83\u4e3a\u6e05\u6670\uff0c\u6ca1\u6709\u592a\u591a\u590d\u6742\u548c\u9700\u8981\u4fee\u6539\u7684\u7a7a\u95f4\u3002</p> <p>\u4ee5\u4e0b\u90e8\u5206\u662f\u5728\u5b8c\u6210\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u65f6\u53d1\u73b0\u7684\u95ee\u9898\u53ca\u4fee\u6539</p> <p>\u8003\u8651\u4ee5\u4e0b\u7684\u4ee3\u7801\u7247\u6bb5</p> <pre><code>int a = 3; //\u5b9a\u4e491\n{\n    int b = a;\n    int a = 5; // \u5b9a\u4e492\n}\n</code></pre> <p>\u6b64\u65f6\u5904\u7406a\u7684\u65f6\u5019\uff0c\u539f\u6765\u7684\u4ee3\u7801\u7b80\u5355\u8c03\u7528\u4e86<code>getSymbol</code>\u65b9\u6cd5\u6765\u67e5\u8be2\u53d8\u91cf<code>a</code>\u7684\u5b9a\u4e49\uff0c\u67e5\u8be2\u5230\u7684\u662f\u5b9a\u4e492\uff0c\u8fd9\u662f\u663e\u7136\u4e0d\u5bf9\u7684\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2asymbol\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\u8fdb\u884c\u6807\u8bb0\uff0c\u4f7f\u5f97\u67e5\u627e\u65f6\u53ea\u80fd\u67e5\u627e\u5230\u5728\u8be5\u5b9a\u4e49\u70b9\u4e4b\u524d\u51fa\u73b0\u7684\u5b9a\u4e49\uff0c\u800c\u5ffd\u7565\u5728\u8be5\u5b9a\u4e49\u70b9\u4e4b\u540e\u4ea7\u751f\u7684\u5b9a\u4e49\uff0c\u4f7f\u5f97\u7ffb\u8bd1<code>int b = a</code>\u65f6\u5e94\u8be5\u627e\u5230\u6b63\u786e\u7684<code>a</code>\u7684\u5b9a\u4e49\uff0c\u5373\u5b9a\u4e491\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_36","title":"\u5f02\u5e38\u5904\u7406","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_37","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u5f02\u5e38\u5904\u7406\u76f8\u5173\u4ee3\u7801\u4f4d\u4e8e<code>error</code>\u5305\u4e2d\uff0c\u5305\u62ec</p> <ul> <li>\u5f02\u5e38\u8bb0\u5f55\u7c7b<code>Error</code></li> <li>\u5f02\u5e38\u5904\u7406\u7c7b<code>ErrorHandler</code></li> <li>\u5f02\u5e38\u7c7b\u578b\u679a\u4e3e\u7c7b<code>ErrorType</code></li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_38","title":"\u679a\u4e3e\u7c7b","text":"<p>java\u63d0\u4f9b\u7684\u679a\u4e3e\u7c7b\u53ef\u4ee5\u8bbe\u7f6e\u989d\u5916\u5c5e\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u8f93\u51fa\u6b63\u786e\u548c\u6613\u8bfb\u7684\u76ee\u6807</p> <pre><code>public enum ErrorType {\n    IllegalSymbol(\"a\"),\n    IdentRedefined(\"b\"),\n    IdentUndefined(\"c\"),\n    ParamSizeMismatch(\"d\"),\n    ParamTypeMismatch(\"e\"),\n    ReturnTypeMismatch(\"f\"),\n    ReturnMissing(\"g\"),\n    ConstAssign(\"h\"),\n    SEMICNMissing(\"i\"),\n    RPARENTMissing(\"j\"),\n    RBRACKMissing(\"k\"),\n    PrintfFmtCntNotMatch(\"l\"),\n    BreakContinueNotInLoop(\"m\");\n\n    private final String name;\n\n    ErrorType(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return name;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_39","title":"\u5f02\u5e38\u8bb0\u5f55","text":"<p>\u5f02\u5e38\u8bb0\u5f55\u7c7b\u9700\u8981\u8bb0\u5f55\u7c7b\u578b\u4e0e\u884c\u53f7\uff0c\u901a\u8fc7\u5b9e\u73b0<code>Comparable&lt;Error&gt;</code>\u63a5\u53e3\u5b9e\u73b0\u6309\u7167\u884c\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <pre><code>public class Error implements Comparable&lt;Error&gt; {\n    private final ErrorType errorType;\n    private final int line;\n\n    public Error(ErrorType errorType, int line) {\n        this.errorType = errorType;\n        this.line = line;\n    }\n\n    public int getLine() {\n        return line;\n    }\n\n    @Override\n    public String toString() {\n        return line + \" \" + errorType.toString();\n    }\n\n    @Override\n    public int compareTo(Error o) {\n        return this.line - o.line;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_40","title":"\u5bfb\u627e\u5f02\u5e38","text":"<p>\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u5df2\u7ecf\u53ef\u4ee5\u627e\u5230\u90e8\u5206\u5f02\u5e38\uff0c\u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u8bed\u4e49\u5206\u6790\u5bf9\u5f02\u5e38\u7684\u5904\u7406\u3002</p> <p>\u540d\u5b57\u672a\u5b9a\u4e49\u4e0e\u91cd\u5b9a\u4e49\u76f8\u5bf9\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728\u7b26\u53f7\u8868\u8fdb\u884c\u67e5\u627e\u5373\u53ef\u3002</p> <ul> <li> <p>\u53c2\u6570\u5f02\u5e38\uff1a\u5305\u62ec\u4e2a\u6570\u4e0d\u5339\u914d\u548c\u7c7b\u578b\u4e0d\u5339\u914d</p> </li> <li> <p>\u4e2a\u6570\u4e0d\u5339\u914d\uff0c\u5305\u62ec\u65e0\u5f62\u53c2\u800c\u6709\u5b9e\u53c2\u3001\u5f62\u53c2\u5b9e\u53c2\u4e2a\u6570\u4e0d\u76f8\u7b49\u4e24\u79cd\u60c5\u51b5</p> <pre><code>if (unaryExp.getFuncRParams() == null &amp;&amp; !funcSymbol.getFuncParams().isEmpty()) {\n    ErrorHandler.getInstance().addError(new Error(\n            ErrorType.ParamSizeMismatch,\n            unaryExp.getIdent().getLine()\n    ));\n    return;\n} else if (unaryExp.getFuncRParams() != null\n        &amp;&amp; (unaryExp.getFuncRParams().getExps().size()\n        != funcSymbol.getFuncParams().size())) {\n    ErrorHandler.getInstance().addError(new Error(\n            ErrorType.ParamSizeMismatch,\n            unaryExp.getIdent().getLine()\n    ));\n    return;\n}\n</code></pre> </li> <li> <p>\u7c7b\u578b\u4e0d\u5339\u914d\uff1a\u5b9e\u53c2\u4f20\u5165\u65f6\u7c7b\u578b\u4e3a<code>Exp</code>\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728\u6307\u9488\u8fd0\u7b97\u7b49\uff0c\u53ef\u4ee5\u901a\u8fc7\u5224\u65adexp\u4e2d\u7b2c\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u6765\u4e0e\u5f62\u53c2\u7c7b\u578b\u5224\u65ad\uff0c\u4ece\u800c\u5b9e\u73b0\u7ef4\u6570\u8ba1\u7b97\u4e0e\u5224\u65ad\u3002</p> <pre><code>// ToParam.java\npublic class ToParam {\n    public static ParamSymbol expToParam(Exp exp) {\n        return addExpToParam(exp.getAddExp());\n    }\n\n    private static ParamSymbol addExpToParam(AddExp addExp) {\n        return unaryExpToParam(addExp.getMulExps().get(0).getUnaryExps().get(0));\n    }\n\n    private static ParamSymbol unaryExpToParam(UnaryExp unaryExp) {\n        if (unaryExp.getPrimaryExp() != null) {\n            return primaryExpToParam(unaryExp.getPrimaryExp());\n        } else if (unaryExp.getIdent() != null) {\n            TableManager tableManager = TableManager.getInstance1();\n            Symbol symbol = tableManager.getSymbol(unaryExp.getIdent().getContent());\n            if (symbol instanceof FuncSymbol funcSymbol) {\n                return new ParamSymbol(unaryExp.getIdent().getContent(),\n                        funcSymbol.getType(), 0);\n            } else {\n                throw new RuntimeException(\"Unrecognized symbol: \" +\n                        unaryExp.getIdent().getContent());\n            }\n        } else {\n            return unaryExpToParam(unaryExp.getUnaryExp());\n        }\n    }\n\n    private static ParamSymbol primaryExpToParam(PrimaryExp primaryExp) {\n        if (primaryExp.getLVal() != null) {\n            return lValToParam(primaryExp.getLVal());\n        } else if (primaryExp.getExp() != null) {\n            return expToParam(primaryExp.getExp());\n        } else if (primaryExp.getNumber() != null) {\n            return new ParamSymbol(null, SymbolType.INT, 0);\n        } else {\n            return new ParamSymbol(null, SymbolType.CHAR, 0);\n        }\n    }\n\n    private static ParamSymbol lValToParam(LVal lval) {\n        TableManager tableManager = TableManager.getInstance1();\n        VarSymbol symbol = (VarSymbol) tableManager.getSymbol(lval.getIdent().getContent());\n        if (symbol == null) {\n            return null;\n        }\n        return new ParamSymbol(\n                lval.getIdent().getContent(),\n                symbol.getType(),\n                lval.getExp() == null ? 0 : 1\n        );\n    }\n}\n\n// Visitor.java\nif (unaryExp.getFuncRParams() != null) {\n    for (int i = 0; i &lt; funcSymbol.getFuncParams().size(); i++) {\n        ParamSymbol paramSymbol = ToParam.expToParam(\n                unaryExp.getFuncRParams().getExps().get(i));\n        if (paramSymbol == null) {\n            continue;\n        }\n        int dimension;\n        if (paramSymbol.getName() == null) {\n            dimension = 0;\n        } else {\n            Symbol symbol = tableManager.getSymbol(paramSymbol.getName());\n            if (symbol.getType() == SymbolType.VOID) {\n                // void\u7c7b\u578b\u7684\u51fd\u6570\u8fd4\u56de\u503c\u5982\u679c\u4f5c\u4e3a\u53c2\u6570\u8fdb\u884c\u4f20\u9012\uff08\u4f20\u9012\u5230\u4e00\u4e2a\u5982\u9700\u8981int\u7684\u51fd\u6570\u53c2\u6570\u4f4d\u7f6e\uff09\n                // \u9700\u8981\u62a5\u53c2\u6570\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u9519\u8bef\u3002\n                dimension = -1;\n            } else if (symbol instanceof VarSymbol varSymbol) {\n                /*\n                \u4e00\u7ef4\u6570\u7ec4\u540d\u4e3a\u5b9e\u53c2\uff0c\u5982a[2], foo(a)\uff0c\u5219\u6b64\u65f6funcParam\u5c06\u5176\u8bc6\u522b\u4e3a0\u7ef4\u7684\u5de6\u503c\n                \u4ece\u7b26\u53f7\u8868\u67e5\u8be2\u5f97\u5230a\u662f1\u7ef4\uff0c\u76f8\u51cf\u5f97\u8fd9\u91cc\u7684\u5b9e\u53c2\u7ef4\u6570\u662f1\n                 */\n                dimension = varSymbol.getDimension() - paramSymbol.getDimension();\n            } else {\n                dimension = 0;\n            }\n        }\n        // \u8fd9\u91cc\u5904\u7406\u524d\u4e24\u79cd\u9519\u8bef\uff0c\u5f52\u7eb3\u4e3a\u5f62\u53c2\u4e0e\u5b9e\u53c2\u7684\u7ef4\u6570\u4e0d\u7b26\n        if (funcSymbol.getFuncParams().get(i).getDimension() != dimension) {\n            ErrorHandler.getInstance().addError(new Error(\n                    ErrorType.ParamTypeMismatch,\n                    unaryExp.getIdent().getLine()\n            ));\n            continue;\n        }\n        // \u8fd9\u91cc\u5904\u7406\u540e\u4e24\u79cd\u9519\u8bef\n        if (funcSymbol.getFuncParams().get(i).getDimension() == 1\n                || dimension == 1) {\n            // \u4e24\u8005\u5747\u662f\u6570\u7ec4\n            if (funcSymbol.getFuncParams().get(i).getType() != paramSymbol.getType()) {\n                ErrorHandler.getInstance().addError(new Error(\n                        ErrorType.ParamTypeMismatch,\n                        unaryExp.getIdent().getLine()\n                ));\n            }\n        }\n    }\n}\n</code></pre> </li> <li> <p>return\u4e0d\u5339\u914d\u6216\u7f3a\u5c11return\uff1a\u5728\u8bbf\u95ee\u5b8c\u4e00\u4e2a<code>Block</code>\u4e4b\u540e\uff0c\u5982\u679c\u5f53\u524d\u7b26\u53f7\u8868\u662f\u5426\u5c5e\u4e8e\u4e00\u4e2a\u51fd\u6570\u7684\u57fa\u5c42\u7b26\u53f7\u8868\uff08\u5373\u5168\u5c40\u7b26\u53f7\u8868\u7684\u76f4\u63a5\u5b50\u7b26\u53f7\u8868\uff09\uff0c\u5219\u5224\u65ad\u662f\u5426\u6709return\u3002\u8bbf\u95ee<code>returnStmt</code>\u65f6\uff0c\u5224\u65adreturn\u662f\u5426\u5339\u914d\u3002</p> </li> </ul> <pre><code>// \u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\u5b58\u5728\u4e0d\u5339\u914d\u7684return\u8bed\u53e5\nprivate void visitReturnStmt(ReturnStmt returnStmt) {\n    if (curFuncType == SymbolType.VOID &amp;&amp; returnStmt.getExp() != null) {\n        ErrorHandler.getInstance().addError(new Error(\n                ErrorType.ReturnTypeMismatch,\n                returnStmt.getToken().getLine()\n        ));\n        return;\n    }\n    if (returnStmt.getExp() != null) {\n        visitExp(returnStmt.getExp());\n    }\n}\n\n// \u51fd\u6570\u662f\u5426\u6709\u8fd4\u56de\u503c\nprivate void visitBlock(Block block) {\n    for (BlockItem blockItem : block.getBlockItems()) {\n        visitBlockItem(blockItem);\n    }\n    // \u5f53\u524d\u7b26\u53f7\u8868\u662f\u5c5e\u4e8e\u4e00\u5f20\u5177\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7684\n    if (TableManager.getInstance1().isFuncFirst()) {\n        if (curFuncType == SymbolType.INT || curFuncType == SymbolType.CHAR) {\n            ArrayList&lt;BlockItem&gt; items = block.getBlockItems();\n            if (items.isEmpty()\n                    || items.get(items.size() - 1).getStmt() == null\n                    || !(items.get(items.size() - 1).getStmt() instanceof ReturnStmt)) {\n                // int\u6216char\u51fd\u6570\u7f3a\u5c11\u663e\u6027\u7684return with value\u8bed\u53e5\n                // \u8fd9\u91cc\u5e76\u4e0d\u5173\u5fc3\u8fd4\u56de\u7684\u503c\u662fint\u578b\u8fd8\u662fchar\u578b\n                ErrorHandler.getInstance().addError(new Error(\n                        ErrorType.ReturnMissing, block.getEndLine()\n                ));\n            }\n        }\n    }\n}\n</code></pre> <ul> <li>\u5e38\u91cf\u8d4b\u503c\uff1a\u5728\u7b26\u53f7\u8868\u67e5\u627e\u7b26\u53f7\u8868\uff0c\u67e5\u627e\u5176\u662f\u5426\u4e3a\u5e38\u91cf\u7b26\u53f7</li> </ul> <pre><code>private void visitLValExpStmt(LValExpStmt lValExpStmt) {\n    visitLVal(lValExpStmt.getLVal());\n    if (tableManager.isConstantVarSymbol(\n            lValExpStmt.getLVal().getIdent().getContent())) {\n        ErrorHandler.getInstance().addError(new Error(\n                ErrorType.ConstAssign,\n                lValExpStmt.getLVal().getIdent().getLine()\n        ));\n    }\n    visitExp(lValExpStmt.getExp());\n}\n</code></pre> <ul> <li>printf\u683c\u5f0f\u4e0d\u5339\u914d\uff1a\u68c0\u67e5<code>%[cd]</code>\u548cexp\u7684\u4e2a\u6570\u662f\u5426\u5339\u914d\u5373\u53ef</li> </ul> <pre><code>private void visitPrintfStmt(PrintfStmt printfStmt) {\n    for (Exp exp : printfStmt.getExps()) {\n        visitExp(exp);\n    }\n    int res = 0;\n    Pattern pattern = Pattern.compile(\"%[cd]\");\n    Matcher matcher = pattern.matcher(printfStmt.getStringConst().getContent());\n    while (matcher.find()) {\n        res++;\n    }\n    if (res != printfStmt.getExps().size()) {\n        ErrorHandler.getInstance().addError(new Error(\n                ErrorType.PrintfFmtCntNotMatch,\n                printfStmt.getToken().getLine()\n        ));\n    }\n}\n</code></pre> <ul> <li>break\u548ccontinue\u68c0\u67e5\uff1a\u5224\u65ad\u5f53\u524dloopLevel\u662f\u5426\u4e3a0\u5373\u53ef\u3002\u5bf9loopLevel\u7684\u7ef4\u62a4\u5728\u8bbf\u95eefor\u5faa\u73af\u7ed3\u6784<code>ForStruct</code>\u8fdb\u884c\u3002</li> </ul> <pre><code>private void visitForStruct(ForStruct forStruct) {\n    if (forStruct.getForStmt1() != null) {\n        visitForStmt(forStruct.getForStmt1());\n    }\n    if (forStruct.getCond() != null) {\n        visitCond(forStruct.getCond());\n    }\n    if (forStruct.getForStmt2() != null) {\n        visitForStmt(forStruct.getForStmt2());\n    }\n    tableManager.enterLoop();\n    visitStmt(forStruct.getStmt());\n    tableManager.exitLoop();\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_41","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u5728\u7f16\u7801\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u51fd\u6570\u53c2\u6570\u7684\u4f5c\u7528\u57df\u51fa\u73b0\u4e86\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4ee5\u4e0b\u7684\u4ee3\u7801</p> <pre><code>int func(int a, int b) {\n    int a;\n    return 1;\n}\n</code></pre> <p>\u6b64\u65f6\u662f\u5426\u51fa\u73b0\u4e86\u91cd\u5b9a\u4e49\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u56e0\u6b64\u89e3\u6790\u51fd\u6570\u5f62\u53c2\u65f6\u5c31\u5e94\u8be5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7b26\u53f7\u8868\uff0c\u5e76\u5c06\u5f62\u53c2\u52a0\u5165\u7b26\u53f7\u8868\u4e2d\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_42","title":"\u4e2d\u95f4\u4ee3\u7801\u751f\u6210","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_43","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p>\u672c\u90e8\u5206\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5c06\u62bd\u8c61\u8bed\u6cd5\u6811\uff08Abstract Syntax Tree\uff0c\u5728\u8bed\u6cd5\u9636\u6bb5\u751f\u6210\uff09\u8f6c\u5316\u4e3a\u4e2d\u95f4\u4ee3\u7801\u3002\u5728\u4e2d\u95f4\u4ee3\u7801\u7684\u9009\u62e9\u4e0a\uff0c<code>PlatoCompiler</code>\u9009\u62e9\u4f7f\u7528LLVM IR\u4e3a\u4e2d\u95f4\u4ee3\u7801\u3002</p> <p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u7684\u76f8\u5173\u4ee3\u7801\u4f4d\u4e8e<code>middle</code>\u5305\u4e2d\uff0c\u4e3b\u8981\u7684\u903b\u8f91\u4ee3\u7801\u4e3a\u4e2d\u95f4\u4ee3\u7801\u6784\u5efa\u7c7b<code>IRBuilder</code>\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e3a</p> <pre><code>IRBuilder irBuilder = new IRBuilder(compUnit);\nirBuilder.build();\n// \u6784\u9020\u7ed3\u679c\u5b58\u50a8\u5728Module.getInstance()\u4e2d\n</code></pre> <p>\u4f7f\u7528<code>IRData</code>\u7c7b\u5bf9\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u7684\u76f8\u5173\u6570\u636e\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u6bd4\u5982\u5f53\u524d\u51fd\u6570\u3001\u5f53\u524d\u57fa\u672c\u5757\u7b49\u3002<code>IRData</code>\u6bb5\u91cc\u6709\u8bbe\u7f6e\u81ea\u52a8\u63d2\u5165\u5f00\u5173\uff0c\u6253\u5f00\u65f6\u521b\u5efa\u7684Instruction\u5bf9\u8c61\u53ca\u5176\u5b50\u7c7b\u5bf9\u8c61\u4f1a\u81ea\u52a8\u63d2\u5165\u5f53\u524d\u57fa\u672c\u5757\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#llvm","title":"LLVM\u57fa\u672c\u6982\u5ff5","text":"<p>LLVM IR\u6587\u4ef6\u7684\u57fa\u672c\u5355\u4f4d\u79f0\u4e3a<code>module</code>\uff0c\u5355\u6587\u4ef6\u7f16\u8bd1\u4e0b\u53ea\u6709\u4e00\u4e2amodule\u3002\u5728<code>PlatoCompiler</code>\u7684\u8bbe\u8ba1\u4e2d\uff0c<code>Module</code>\u91c7\u7528\u5355\u4f8b\u6a21\u5f0f\u3002</p> <p>\u4e00\u4e2a<code>module</code>\u4e2d\u6709\u591a\u4e2a\u9876\u5c42\u5b9e\u4f53\uff0c\u5982<code>function</code>\u548c<code>global variable</code>\uff0c\u8fd9\u53ef\u4ee5\u5206\u522b\u5bf9\u5e94\u7f16\u8bd1\u5355\u5143<code>CompUnit</code>\u6587\u6cd5\u5b9a\u4e49\u4e2d\u7684<code>{Decl}</code>\u548c<code>{FuncDef}</code>\uff1b\u4e00\u4e2afunction\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a<code>basicblock</code>\uff0c\u8fd9\u610f\u5473\u7740\u51fd\u6570\u4f53\u58f0\u660e\u5185\u81f3\u5c11\u6709\u4e00\u4e2a\u57fa\u672c\u5757\uff1b\u4e00\u4e2a<code>basicblock</code>\u4e2d\u6709\u82e5\u5e72<code>instruction</code>\uff0c\u5e76\u4e14\u90fd\u4ee5<code>terminator instruction</code>\u7ed3\u5c3e\u3002</p> <p>\u5728LLVM\u4e2d\u6700\u91cd\u8981\u7684\u662f<code>User-Use-Value</code>\u5173\u7cfb\u3002</p> <p></p> <ul> <li>Value\u662f\u64cd\u4f5c\u6570\u7c7b\uff0c\u5728LLVM\u4e2d\uff0c\u4e07\u7269\u7686Value\u3002\u6bcf\u4e2aValue\u90fd\u6709\u7684\u5c5e\u6027\u662f\u540d\u79f0\u3001\u7c7b\u578b\u548cuser\u5217\u8868\u3002</li> <li>User\u662f\u4f7f\u7528\u8005\u7c7b\uff0c\u7ee7\u627f\u81eaValue\u3002</li> </ul> <pre><code>public class Value {\n    private final ValueType valueType;\n    private final ArrayList&lt;User&gt; userList = new ArrayList&lt;&gt;();\n    private String name;\n}\n\npublic class User extends Value {\n    private ArrayList&lt;Value&gt; operands = new ArrayList&lt;&gt;();\n}\n</code></pre> <ul> <li>\u57fa\u4e8e\u8fd9\u6837\u7684<code>User-Value</code>\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa<code>Instruction</code>\uff0c<code>BasicBlock</code>\uff0c<code>GlobalVar</code>\u7b49\u6570\u636e\u7ed3\u6784\u3002</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_44","title":"\u7c7b\u578b\u7cfb\u7edf","text":"<p>\u503c\u7c7b\u578b\u53ef\u4ee5\u5206\u4e3a\u6574\u6570\u7c7b\u578b<code>IntegerType</code>\uff08\u5305\u62ec<code>int</code>\uff0c<code>char</code>\uff0c<code>void</code>\uff09\u3001<code>PointerType</code>\u3001<code>ArrayType</code>\u548c<code>LabelType</code>\uff0c\u5747\u7ee7\u627f<code>ValueType</code>\u57fa\u7c7b\u3002</p> <pre><code>public class IntegerType extends ValueType {\n    private final int bits;\n\n    public IntegerType(int bits) {\n        this.bits = bits;\n    }\n\n    public static final IntegerType VOID = new IntegerType(0);\n    public static final IntegerType i1 = new IntegerType(1);\n    public static final IntegerType i8 = new IntegerType(8);\n    public static final IntegerType i32 = new IntegerType(32);\n}\n\npublic class PointerType extends ValueType {\n    // \u6307\u9488\u6307\u5411\u7684\u7c7b\u578b\n    // 'int*'\u7684targetType\u5c31\u662fint\n    private final ValueType targetType;\n}\n\npublic class ArrayType extends ValueType {\n    private final int elementNum;\n    private final ValueType elementType;\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_45","title":"\u7b26\u53f7\u7ed3\u6784\u4fee\u6539","text":"<p>\u5bf9<code>VarSymbol</code>\u548c<code>FuncSymbol</code>\u6dfb\u52a0\u4e00\u4e2a<code>llvmValue</code>\u5c5e\u6027\uff0c\u4ee5\u65b9\u4fbf\u4f7f\u7528\u7b26\u53f7\u8868\u67e5\u8be2\u65f6\u80fd\u8fc5\u901f\u67e5\u5230\u76f8\u5173\u7684\u5b9a\u4e49\u4fe1\u606f\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_46","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u4ee3\u7801\u4e2d\u5b58\u5728<code>char</code>\u548c<code>int</code>\u4e24\u79cd\u7c7b\u578b\uff0c\u5728LLVM\u4e2d\u53ef\u5206\u522b\u8bb0\u4e3a<code>i8</code>\u548c<code>i32</code>\u3002\u5f53<code>int</code>\u7c7b\u578b\u503c\u8d4b\u7ed9<code>char</code>\u7c7b\u578b\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u622a\u65ad\u3002\u5bf9\u6bcf\u4e2a\u64cd\u4f5c\u6570\u5728\u8ba1\u7b97\u4e4b\u524d\u5747\u8c03\u7528\u7c7b\u578b\u68c0\u67e5\u7a0b\u5e8f\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362,\u4f7f\u7528<code>zext</code>\u6307\u4ee4\u8fdb\u884c\u6269\u5145\uff0c\u4f7f\u7528<code>trunc</code>\u6307\u4ee4\u8fdb\u884c\u622a\u65ad\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_47","title":"\u77ed\u8def\u6c42\u503c","text":"<p>\u53ea\u8981\u6761\u4ef6\u5224\u65ad\u51fa\u73b0\u201c\u77ed\u8def\u201d\uff0c\u5373\u4e0d\u9700\u8981\u8003\u8651\u540e\u7eed\u4e0e\u6216\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u5c31\u5df2\u7ecf\u80fd\u786e\u5b9a\u503c\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u8df3\u8f6c\u3002</p> <p>\u5bf9<code>IfStmt</code>\u7684\u57fa\u672c\u7ffb\u8bd1\u903b\u8f91\u5982\u4e0b</p> <pre><code>private void buildIfStmt(IfStmt ifStmt) {\n    BasicBlock trueBlock = new BasicBlock(IRData.getBlockName());\n    if (ifStmt.getStmt2() != null) {\n        BasicBlock falseBlock = new BasicBlock(IRData.getBlockName());\n        BasicBlock followBlock = new BasicBlock(IRData.getBlockName());\n        buildCond(ifStmt.getCond(), trueBlock, falseBlock);\n        IRData.setCurrentBlock(trueBlock);\n        buildStmt(ifStmt.getStmt1());\n        new BrInst(followBlock);\n        IRData.setCurrentBlock(falseBlock);\n        buildStmt(ifStmt.getStmt2());\n        new BrInst(followBlock);\n        IRData.setCurrentBlock(followBlock);\n    } else {\n        BasicBlock followBlock = new BasicBlock(IRData.getBlockName());\n        buildCond(ifStmt.getCond(), trueBlock, followBlock);\n        IRData.setCurrentBlock(trueBlock);\n        buildStmt(ifStmt.getStmt1());\n        new BrInst(followBlock);\n        IRData.setCurrentBlock(followBlock);\n    }\n}\n</code></pre> <p><code>buildCond</code>\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>private void buildCond(Cond cond, BasicBlock trueBlock, BasicBlock falseBlock) {\n    buildLOrExp(cond.getLOrExp(), trueBlock, falseBlock);\n}\n</code></pre> <p>\u89e3\u91ca\u4e3a\u6784\u5efa\u7531<code>LOrExp</code>\u548c<code>LAndExp</code>\u7ec4\u6210\u7684\u5f0f\u5b50\uff0c\u5bf9\u4e8e\u6587\u6cd5<code>LOrExp -&gt; LOrExp '||' LAndExp</code>\uff0c\u53ea\u8981\u5176\u4e2d\u7684\u4e00\u4e2aLOrExp\u4e3a1\u5219\u6574\u4f53\u4e3a1\u3002</p> <p>\u5728\u524d\u9762\u5bf9\u6587\u6cd5\u7684\u6539\u5199\u4e2d\uff0cLOrExp\u7684\u6587\u6cd5\u88ab\u6539\u5199\u6210\u4e86<code>LOrExp -&gt; LAndExp {'||' LAndExp}</code>\u3002\u6b64\u65f6\u5bf9\u4e8e\u6bcf\u4e00\u4e2aLAndExp\uff0c\u5982\u679c\u4e3a\u771f\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230trueBlock\u91cc\uff0c\u5982\u679c\u4e3a\u5047\u5219\u9700\u8981\u5224\u65ad\u540e\u9762\u7684LAndExp\u7684\u503c\uff0c\u6b64\u65f6\u9700\u8981\u521b\u5efa\u4e00\u4e2anextBlock\uff0c\u5c06\u540e\u9762LAndExp\u7684\u5224\u65ad\u903b\u8f91\u5199\u5728nextBlock\u4e2d\u3002</p> <pre><code>private void buildLOrExp(LOrExp lOrExp, BasicBlock trueBlock, BasicBlock falseBlock) {\n    ArrayList&lt;LAndExp&gt; lAndExps = lOrExp.getlAndExps();\n    for (int i = 0; i &lt; lAndExps.size(); i++) {\n        LAndExp lAndExp = lAndExps.get(i);\n        if (i == lAndExps.size() - 1) {\n            buildLAndExp(lAndExp, trueBlock, falseBlock);\n        } else {\n            BasicBlock nextBlock = new BasicBlock(IRData.getBlockName());\n            buildLAndExp(lAndExp, trueBlock, nextBlock);\n            IRData.setCurrentBlock(nextBlock);\n        }\n    }\n}\n</code></pre> <p>\u5bf9LAndExp\u7684\u89e3\u6790\u4e5f\u53ef\u4ee5\u505a\u7c7b\u4f3c\u7684\u5904\u7406\u3002</p> <pre><code>private void buildLAndExp(LAndExp lAndExp, BasicBlock trueBlock, BasicBlock falseBlock) {\n    ArrayList&lt;EqExp&gt; eqExps = lAndExp.getEqExps();\n    for (int i = 0; i &lt; eqExps.size(); i++) {\n        EqExp eqExp = eqExps.get(i);\n        if (i == eqExps.size() - 1) {\n            Value condition = buildEqExp(eqExp);\n            new BrInst(condition, trueBlock, falseBlock);\n        } else {\n            BasicBlock nextBlock = new BasicBlock(IRData.getBlockName());\n            Value condition = buildEqExp(eqExp);\n            new BrInst(condition, nextBlock, falseBlock);\n            IRData.setCurrentBlock(nextBlock);\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_48","title":"\u5faa\u73af\u6784\u5efa","text":"<p>\u5bf9\u4e8e\u8bed\u6cd5\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5faa\u73af\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u4f7f\u7528\u56db\u4e2aBasicBlock\u6765\u7ffb\u8bd1\uff0c\u5206\u522b\u8bb0\u4e3a<code>conditionBlock</code>\uff0c<code>loopBodyBlock</code>\uff0c<code>updateBlock</code>\u548c<code>followBlock</code>\u3002</p> <pre><code>int a = 0; // \u4f4d\u4e8econditionBlock\u7684\u524d\u4e00\u4e2ablock\nfor(i = 0; // i = 0\u7406\u8bba\u4e0a\u53ef\u4ee5\u62bd\u5230\u5faa\u73af\u524d\uff0c\u56e0\u6b64\u5b83\u4e0e`int a = 0`\u4f4d\u4e8e\u540c\u4e00\u4e2ablock\n    i &gt;= 0 &amp;&amp; i &lt; 10; // conditionBlock\n    i = i + 1 // updateBlock\n   ) {\n    a = a + i; // loopBodyBlock\n}\n// \u5faa\u73af\u4f53\u5916\u7684\u5185\u5bb9\u5747\u5c5e\u4e8efollowBlock\nint b = a;\n</code></pre> <p>\u90a3\u4e48\u5bf9\u5faa\u73af\u4f53\u7684\u7ffb\u8bd1\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u7684\u65b9\u5f0f\u3002</p> <pre><code>private void buildForStruct(ForStruct forStruct) {\n    // forStmt\u548cLValAssignExp\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\n    if (forStruct.getForStmt1() != null) {\n        buildAssign(forStruct.getForStmt1().getLVal(),\n                forStruct.getForStmt1().getExp());\n    }\n    BasicBlock conditionBlock = new BasicBlock(IRData.getBlockName());\n    BasicBlock bodyBlock = new BasicBlock(IRData.getBlockName());\n    BasicBlock updateBlock = new BasicBlock(IRData.getBlockName());\n    BasicBlock followBlock = new BasicBlock(IRData.getBlockName());\n    // \u4f7f\u7528\u6808\u8bb0\u5f55\u672c\u5c42\u5faa\u73af\u7684\u4fe1\u606f\n    IRData.push(new ForLoop(conditionBlock, bodyBlock, updateBlock, followBlock));\n    new BrInst(conditionBlock);\n    IRData.setCurrentBlock(conditionBlock);\n    if (forStruct.getCond() != null) {\n        buildCond(forStruct.getCond(), bodyBlock, followBlock);\n    } else {\n        new BrInst(bodyBlock);\n    }\n    IRData.setCurrentBlock(bodyBlock);\n    buildStmt(forStruct.getStmt());\n    new BrInst(updateBlock);\n    IRData.setCurrentBlock(updateBlock);\n    if (forStruct.getForStmt2() != null) {\n        buildAssign(forStruct.getForStmt2().getLVal(),\n                forStruct.getForStmt2().getExp());\n    }\n    new BrInst(conditionBlock);\n    IRData.setCurrentBlock(followBlock);\n    IRData.pop();\n}\n</code></pre> <p>\u7ffb\u8bd1break\u548ccontinue\u6307\u4ee4\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u8bfb\u53d6\u6808\u9876\u7684\u5faa\u73af\u4f53\u4fe1\u606f\u5bf9\u5e94\u7ffb\u8bd1\u5373\u53ef\u3002</p> <pre><code>private void buildBreakStmt() {\n    new BrInst(IRData.peek().getFollowBlock());\n}\n\nprivate void buildContinueStmt() {\n    new BrInst(IRData.peek().getUpdateBlock());\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_49","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u57fa\u672c\u5757\u7684\u547d\u540d\u53ef\u80fd\u4e0e\u51fd\u6570\u91cd\u540d\uff0c\u9700\u8981\u5206\u522b\u5bf9\u6e90\u4ee3\u7801\u4e2d\u7684\u540d\u5b57\u8fdb\u884c\u5904\u7406\uff0c\u5bf9\u6e90\u4ee3\u7801\u7684\u51fd\u6570\u540d\u79f0\u6dfb\u52a0\u524d\u540e\u7f00\u3002</p> <p>\u5bf9\u4e8e\u8bed\u6cd5\u6210\u5206<code>lVal</code>\uff0c\u540c\u65f6\u51fa\u73b0\u5728\u7b49\u53f7\u7684\u5de6\u4fa7\u4e0e\u53f3\u4fa7\u9700\u8981\u4e0d\u540c\u7684llvm\u6307\u4ee4\uff0c\u9700\u8981\u5206\u522b\u5904\u7406\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_50","title":"\u76ee\u6807\u4ee3\u7801\u751f\u6210","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_51","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p>llvm\u7684\u8bbe\u8ba1\u4e0emips\u8f83\u4e3a\u76f8\u4f3c\uff0c\u5728\u7ffb\u8bd1\u7b56\u7565\u4e0a\u53ef\u4ee5\u91c7\u53d6\u9010\u884c\u7ffb\u8bd1\u7684\u65b9\u5f0f\u3002</p> <p>\u5728<code>PlatoCompiler</code>\u4e2d\uff0c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7684\u76f8\u5173\u4ee3\u7801\u4f4d\u4e8e<code>backend</code>\u5305\u4e2d\uff0c\u4e3b\u8981\u7684\u903b\u8f91\u4ee3\u7801\u4e3a\u76ee\u6807\u4ee3\u7801\u6784\u5efa\u7c7b<code>MipsBuilder</code>\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e3a</p> <pre><code>MipsBuilder mipsBuilder = new MipsBuilder(Module.getInstance(), optimize);\nmipsBuilder.build(optimize);\n</code></pre> <p>optimize\u53c2\u6570\u8868\u793a\u662f\u5426\u5728\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7684\u8fc7\u7a0b\u4e2d\u5f00\u542f\u4f18\u5316\u3002</p> <p>\u7531<code>mipsBuilder</code>\u6784\u5efa\u751f\u6210\u7684mips\u4ee3\u7801\u5e8f\u5217\u5b58\u50a8\u5728<code>MipsFile</code>\u7c7b\u4e2d\uff0c\u91c7\u7528\u5355\u4f8b\u6a21\u5f0f\uff0c\u5206\u522b\u5b58\u50a8\u7740<code>.data</code>\u6bb5\u548c<code>.text</code>\u6bb5\u7684\u5185\u5bb9\u3002\u4e0e<code>IRData</code>\u7c7b\u4f3c\uff0c<code>MipsFile</code>\u4e5f\u6709\u81ea\u52a8\u63d2\u5165\u5f00\u5173\u3002</p> <p>\u672c\u8282\u5185\u5bb9\u672a\u6d89\u53ca\u5bc4\u5b58\u5668\u5206\u914d\u7b49\u5185\u5bb9\uff0c\u64cd\u4f5c\u5168\u90e8\u5728\u6808\u4e0a\u5b8c\u6210\uff0c\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\u6709<code>a1-a3</code>\uff0c<code>v0-v1</code>\uff0c<code>k0-k1</code>\uff0c<code>sp</code>\uff0c<code>ra</code>\u7b49\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_52","title":"\u51fd\u6570\u521d\u59cb\u5316","text":"<p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2aLLVM\u4e2d\u7684<code>Function</code>\u5bf9\u8c61\uff08\u5305\u62ecmain\u51fd\u6570\uff09\uff0c\u5728\u8fdb\u884c\u5185\u5bb9\u7ffb\u8bd1\uff0c\u9996\u5148\u9700\u8981\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5bf9\u51fd\u6570\u5185\u90e8\u6709\u5de6\u503c\u7684llvm\u6307\u4ee4\u5206\u914d\u6808\u7a7a\u95f4\u3002\u5982\u679c\u6709\u53c2\u6570\uff0c\u5728\u6808\u4e0a\u9700\u8981\u7559\u4e0b\u53c2\u6570\u7684\u7a7a\u95f4\u3002</p> <p>\u9884\u7559\u6808\u7a7a\u95f4\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0Value\u5230stackOffset\u7684\u6620\u5c04\u6765\u5b9e\u73b0\u3002</p> <pre><code>private void buildFunction(Function function) {\n    currentFunction = function;\n    var2Offset = new HashMap&lt;&gt;();\n    curStackOffset = 0;\n    var2reg = optimizeOn ? new HashMap&lt;&gt;(function.getVar2reg()) : new HashMap&lt;&gt;();\n    new Label(\"func_\" + function.getName().substring(1));\n    for (int i = 0; i &lt; function.getFuncParams().size(); i++) {\n        curStackOffset -= 4;\n        if (i &lt; 3) {\n            // a1, a2, a3\n            // \u6dfb\u52a0Value\u5411\u5bc4\u5b58\u5668\u7684\u6620\u5c04\uff0c\u6b64\u5904\u7701\u7565\n        }\n        var2Offset.put(function.getFuncParams().get(i), curStackOffset);\n    }\n    for (BasicBlock block : function.getBasicBlocks()) {\n        for (Instruction instruction : block.getInstructions()) {\n            if (!instruction.getName().isEmpty()\n                    &amp;&amp; !(instruction instanceof MoveInst)\n                    &amp;&amp; !var2reg.containsKey(instruction)\n                    &amp;&amp; !var2Offset.containsKey(instruction)) {\n                curStackOffset -= 4;\n                var2Offset.put(instruction, curStackOffset);\n            } else if (instruction instanceof MoveInst moveInst) {\n                if (!var2reg.containsKey(moveInst.getToValue())\n                        &amp;&amp; !var2Offset.containsKey(moveInst.getToValue())) {\n                    curStackOffset -= 4;\n                    var2Offset.put(moveInst.getToValue(), curStackOffset);\n                }\n            }\n        }\n    }\n    for (BasicBlock block : function.getBasicBlocks()) {\n        buildBasicBlock(block);\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#data","title":".data\u6bb5","text":"<p>.data\u6bb5\u4e3b\u8981\u5b58\u50a8\u7684\u662f\u5168\u5c40\u53d8\u91cf\u548c\u5b57\u7b26\u4e32\uff0c\u5206\u522b\u62bd\u8c61\u4e3a<code>Word</code>\u548c<code>Asciiz</code>\u7c7b\u3002</p> <p>.asciiz\u7528\u6765\u5b58\u50a8llvm\u9636\u6bb5\u5206\u6790\u5f97\u5230\u7684\u533f\u540d\u5e38\u91cf\u5b57\u7b26\u4e32\uff08\u4e0e\u7528\u6237\u5b9a\u4e49\u7684<code>char s[6] = \"Hello\"</code>\u76f8\u533a\u5206\uff09\u3002</p> <pre><code>public class Asciiz extends GlobalAssembly {\n    private final String name;\n    private final String content;\n}\n</code></pre> <p><code>Word</code>\u7c7b\u7528\u6765\u5b58\u50a8\u5355\u4e2a\u6216\u8fde\u7eed\u7684\u5927\u5c0f\u4e3a4\u5b57\u8282\u7684\u7a7a\u95f4\uff08\u4e3a\u65b9\u4fbf\u8bbe\u8ba1\uff0c<code>int</code>\u548c<code>char</code>\u5747\u53604\u5b57\u8282\uff09\u3002\u5bf9\u4e8e\u521d\u59cb\u5143\u7d20\u6570\u91cf\u5c0f\u4e8e\u6570\u7ec4\u957f\u5ea6\u7684\u60c5\u51b5\uff0c\u901a\u8fc7<code>.word</code>\u548c<code>.space</code>\u7684\u914d\u5408\u8fdb\u884c\u521d\u59cb\u5316\u3002</p> <pre><code># int a[10] = {2};\na: .word 2 # existed definition\n   .space 36 # zeroinitializer\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_53","title":"\u6269\u5c55\u4e0e\u622a\u65ad","text":"<p>\u5728\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u7684\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u4e00\u4e9b<code>zext</code>\u548c<code>trunc</code>\u6307\u4ee4\u3002</p> <ul> <li> <p><code>PlatoCompiler</code>\u5047\u8bbe<code>i1</code>\u3001<code>i8</code>\u3001<code>i32</code>\u5728mips\u5747\u53604\u5b57\u8282\uff0c\u6240\u4ee5\u5bf9\u4e8e<code>zext</code>\u53ef\u4ee5\u4e0d\u7528\u7279\u522b\u5904\u7406\uff0c\u76f4\u63a5\u5f53<code>move</code>\u770b\u5f85\u5373\u53ef\u3002\u5728\u540e\u9762\u7684\u4f18\u5316\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u53bb\u6240\u6709\u7684<code>zext</code>\u6307\u4ee4\uff1b</p> </li> <li> <p><code>trunc</code>\u8f6c\u6362\u4e3a\u6309\u4f4d\u4e0e\u5373\u53ef\uff0c\u4f8b\u5982\u5c06<code>i32</code>\u8f6c\u6362\u4e3a<code>i8</code>\u7684\u4ee3\u7801\u7247\u6bb5\u4e2d\uff0c\u622a\u53d6\u4f4e\u516b\u4f4d\u5373\u53ef\u3002</p> </li> </ul> <pre><code># %v1 = call i32 @getint()\nli $v0, 5\nsyscall\nmove $t0, $v0\n# %v2 = mul i32 %v1, 2\naddu $t0, $t0, $t0\n# %v3 = trunc i32 %v2 to i8\n# \u622a\u53d6\u4f4e\u516b\u4f4d\nandi $t0, $t0, 255\n</code></pre>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_54","title":"\u51fd\u6570\u8c03\u7528","text":"<p>LLVM\u5c06\u51fd\u6570\u8c03\u7528\u603b\u7ed3\u4e3a<code>call</code>\u6307\u4ee4\uff0c\u5e76\u672a\u6d89\u53ca\u5230\u5185\u5b58\u7ba1\u7406\u3002\u5728\u5c06call\u7ffb\u8bd1\u6210mips\u6307\u4ee4\u65f6\uff0c\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a</p> <ul> <li>\u4fdd\u5b58\u5df2\u7ecf\u5206\u914d\u7684\u5168\u5c40\u5bc4\u5b58\u5668\u503c\u5728\u6808\u4e2d\uff0c\u8ba9\u6808\u5411\u4e0b\u589e\u957f</li> <li>\u5c06\u524d\u4e09\u4e2a\u53c2\u6570\u4fdd\u5b58\u5230<code>$a1-$a3</code>\u5bc4\u5b58\u5668\u4e0a\uff0c\u5e76\u4e3a\u5176\u5728\u6808\u4e0a\u9884\u7559\u7a7a\u95f4</li> <li>\u5c06\u7b2c\u56db\u4e2a\u53ca\u4e4b\u540e\u7684\u53c2\u6570\u90fd\u4fdd\u5b58\u5728\u6808\u4e0a</li> <li>\u5c06<code>$sp</code>\u7684\u503c\u4ee5\u53ca\u672c\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u4fdd\u5b58\u5728\u6808\u4e0a</li> <li>\u5c06<code>$sp</code>\u6307\u5411\u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u6240\u5728\u6808\u7684\u4f4d\u7f6e\uff0c<code>jal</code>\u8df3\u8f6c\u5230\u88ab\u8c03\u7528\u51fd\u6570</li> <li>\u6062\u590d\u73b0\u573a\uff0c\u4ece\u6808\u4e2d\u8bfb\u53d6\u6808\u6307\u9488\u7684\u539f\u503c\u5e76\u6062\u590d\u6808\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u6062\u590d\u8fd4\u56de\u5730\u5740<code>$ra</code>\uff0c\u6062\u590d\u5168\u5c40\u5bc4\u5b58\u5668\u7684\u503c</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_55","title":"\u8df3\u8f6c\u6307\u4ee4","text":"<p>\u5bf9\u4e8e\u4ee5\u4e0b\u7684\u4ee3\u7801\u7247\u6bb5</p> <pre><code>%v5 = icmp sgt i32 %v4, 2\nbr i1 %v5, label %b6, label %b7\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5316\u4e3a\u4e24\u4e2amips\u6307\u4ee4\uff0c\u5373<code>bgt $t0, 2, main_bb6; j main_bb7</code>\uff0c\u4ece\u800c\u7701\u7565\u4e86sgt\u7684\u6b65\u9aa4\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_56","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u4e3a\u4e86\u65b9\u4fbfdebug\uff0c\u5728.text\u6bb5\u4e2d\u6dfb\u52a0\u4e86<code>Comment</code>\u7c7b\uff0c\u7528\u4e8e\u6807\u8bb0mips\u6307\u4ee4\u7247\u6bb5\u5bf9\u5e94\u7684llvm\u4ee3\u7801\u3002</p> <p>\u51fd\u6570\u540d\u548c\u57fa\u672c\u5757\u540d\u5747\u4f7f\u7528mips\u4e2d\u7684\u6807\u7b7e<code>Label</code>\u6765\u7ba1\u7406\u3002\u4e3a\u4e86\u9632\u6b62\u91cd\u540d\uff0c\u5bf9\u51fd\u6570\u540d\u8fdb\u884c\u4e86\u524d\u7f00<code>func_</code>\u4fee\u9970\uff0c\u5bf9\u57fa\u672c\u5757\u540d\u6dfb\u52a0\u4e86\u524d\u7f00<code>{\u51fd\u6570\u540d}_</code>\u4fee\u9970\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_57","title":"\u4ee3\u7801\u4f18\u5316","text":""},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_58","title":"\u7f16\u7801\u524d\u8bbe\u8ba1","text":"<p><code>PlatoCompiler</code>\u5728\u4e2d\u95f4\u4ee3\u7801\u548c\u76ee\u6807\u4ee3\u7801\u90fd\u8fdb\u884c\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4f18\u5316\uff0c\u76f8\u5173\u4ee3\u7801\u5206\u522b\u4f4d\u4e8e<code>optimize</code>\u5305\u548c<code>backend.utils</code>\u5305\u5185\u3002</p> <p>\u672c\u8282\u5bf9\u4ee3\u7801\u4f18\u5316\u65b9\u6cd5\u8fdb\u884c\u7b80\u8981\u7684\u5217\u4e3e\uff0c\u5177\u4f53\u601d\u8def\u89c1\u53e6\u5916\u63d0\u4ea4\u7684\u4f18\u5316\u6587\u6863\u3002</p>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_59","title":"\u673a\u5668\u65e0\u5173\u4f18\u5316","text":"<ul> <li>Mem2Reg\uff1a\u6bcf\u4e2a\u53d8\u91cf\u4ec5\u88ab\u8d4b\u503c\u4e00\u6b21</li> <li>\u8ba1\u7b97CFG\u56fe\uff1a\u7528\u4e8e\u6d88\u9664phi\u3001\u57fa\u672c\u5757\u5408\u5e76\u3001\u57fa\u672c\u5757\u91cd\u6392\u7b49\u64cd\u4f5c</li> <li>\u4ee3\u7801\u5220\u9664\uff1a\u5220\u9664\u6b7b\u4ee3\u7801\uff08\u65e0\u6cd5\u88ab\u6267\u884c\u7684\u4ee3\u7801\uff09\u4e0e\u65e0\u7528\u4ee3\u7801\uff08\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u6ca1\u6709\u5f71\u54cd\uff09\u7684\u4ee3\u7801\uff0c\u5220\u9664\u65e0\u7528\u51fd\u6570</li> <li>\u51fd\u6570\u5185\u8054\uff1a\u5c06\u51fd\u6570\u5d4c\u5165\u5230\u8c03\u7528\u5730\u70b9\uff0c\u964d\u4f4e\u6808\u5e27\u4fdd\u5b58\u5f00\u9500</li> <li>\u5168\u5c40\u53d8\u91cf\u672c\u5730\u5316\uff1a\u5c06\u7b26\u5408\u8981\u6c42\u7684\u5168\u5c40\u53d8\u91cf\u53d8\u4e3a\u672c\u5730\u53d8\u91cf\uff0c\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316</li> <li>GVN\uff1a\u6d88\u9664\u516c\u5171\u8868\u8fbe\u5f0f\uff1b\u6d88\u9664\u4e0d\u53ef\u80fd\u5230\u8fbe\u7684\u57fa\u672c\u5757</li> <li>\u5e38\u91cf\u6298\u53e0\uff1a\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5176\u64cd\u4f5c\u6570\u5df2\u77e5\u662f\u5e38\u6570\u3001\u6216\u6ee1\u8db3\u6052\u7b49\u5f0f\u7684\u8868\u8fbe\u5f0f</li> <li>const\u63d0\u53d6\uff1a\u5c06const\u53d8\u91cf\u66ff\u6362\u4e3a\u7f16\u8bd1\u671f\u5df2\u8ba1\u7b97\u51fa\u6765\u7684\u5e38\u91cf\u503c</li> <li>\u8f93\u51fa\u4f18\u5316\uff1a\u5bf9\u8fde\u7eed\u7684\u8f93\u51fa\u8fdb\u884c\u62fc\u63a5\u4f18\u5316</li> <li>\u57fa\u672c\u5757\u5408\u5e76\u4e0e\u91cd\u6392\u5217\uff1a\u51cf\u5c11\u8df3\u8f6c\u6307\u4ee4\u6267\u884c\u6b21\u6570</li> <li>\u6d88Phi\uff1a\u5c06phi\u8f6c\u5316\u4e3a\u5e76\u884c\u7684move\u6307\u4ee4</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_60","title":"\u673a\u5668\u76f8\u5173\u4f18\u5316","text":"<ul> <li>\u7aa5\u5b54\u4f18\u5316\uff1a\u6d88\u9664\u591a\u4f59\u7684move\u6307\u4ee4\u548cj\u6307\u4ee4</li> <li>\u8fd0\u7b97\u5f3a\u5ea6\u524a\u5f31\uff1a\u4e58\u9664\u6cd5\u4f18\u5316\uff0c\u964d\u4f4e\u5468\u671f\u6570</li> <li>\u5bc4\u5b58\u5668\u5206\u914d\uff1a\u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u4e0e\u56fe\u7740\u8272\u7ed3\u5408\u5206\u914d\u5bc4\u5b58\u5668</li> </ul>"},{"location":"%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%9E%E9%AA%8C%E8%AE%BE%E8%AE%A1%E6%96%87%E6%A1%A3.html#_61","title":"\u7f16\u7801\u540e\u4fee\u6539","text":"<p>\u4f7f\u7528GVN\u66ff\u6362\u8868\u8fbe\u5f0f\u65f6\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a<code>call</code>\u6307\u4ee4\uff0c\u9700\u8981\u5224\u65ad\u5176\u662f\u5426\u5177\u6709\u526f\u4f5c\u7528\uff0c\u6709\u526f\u4f5c\u7528\u7684<code>call</code>\u6307\u4ee4\u662f\u65e0\u6cd5\u88ab\u66ff\u6362\u7684\u3002</p>"}]}